<policy nmpPackage="copy-webpack-plugin" count="1">
</policy>

<policy nmpPackage="friendly-errors-webpack-plugin" count="2">
</policy>

<policy nmpPackage="ndarray" count="4">
	iota-array: x
	is-buffer: x
</policy>

<policy nmpPackage="d3" count="5">
	d3-selection.event: r
	fs.writeFile: r,x
	rollup.rollup: r,x
</policy>

<policy nmpPackage="requirejs" count="6">
</policy>

<policy nmpPackage="image-size" count="8">
	fs.close: r,x
	fs.closeSync: r,x
	fs.fstat: r,x
	fs.fstatSync: r,x
	fs.open: r,x
	fs.openSync: r,x
	fs.read: r,x
	fs.readSync: r,x
	fs.statSync: r,x
	path.resolve: r,x
</policy>

<policy nmpPackage="parseurl" count="9">
	url.Url: r
	url.parse: r,x
</policy>

<policy nmpPackage="canvas" count="11">
	stream.Stream: r
	stream.Stream.prototype: r
</policy>

<policy nmpPackage="ip" count="12">
	assert: x
	assert.equal: r,x
	assert.ok: r,x
	buffer.Buffer: r
	net.isIPv4: r,x
	net.isIPv6: r,x
	os.networkInterfaces: r,x
</policy>

<policy nmpPackage="configstore" count="14">
</policy>

<policy nmpPackage="react-modal" count="15">
	react-lifecycles-compat.polyfill: r
	react.Component: r
</policy>

<policy nmpPackage="iconv" count="16">
	assert: x
	assert.deepEqual: r,x
	assert.equal: r,x
	assert.fail: r,x
	assert.throws: r,x
	fs.createReadStream: r,x
	fs.createWriteStream: r,x
	fs.readFileSync: r,x
	net.createConnection: r,x
	net.createServer: r,x
	safer-buffer.Buffer: r
	safer-buffer.Buffer.alloc: r,x
	safer-buffer.Buffer.from: r,x
	safer-buffer.Buffer.isBuffer: r,x
	stream.Stream: r
	stream.Stream.call: r,x
	util.inherits: r,x
</policy>

<policy nmpPackage="babel-plugin-transform-react-remove-prop-types" count="17">
	pluginName: w
	pluginName.default: r
</policy>

<policy nmpPackage="crc" count="18">
	buffer.Buffer: r
	buffer.Buffer.alloc: r
	buffer.Buffer.allocUnsafe: r
	buffer.Buffer.allocUnsafeSlow: r
	buffer.Buffer.from: r
	buffer.Buffer.isBuffer: r,x
</policy>

<policy nmpPackage="es6-promisify" count="19">
</policy>

<policy nmpPackage="redux-actions" count="20">
</policy>

<policy nmpPackage="babel-generator" count="21">
</policy>

<policy nmpPackage="vinyl-sourcemaps-apply" count="22">
	source-map.SourceMapConsumer: r
	source-map.SourceMapGenerator: r
	source-map.SourceMapGenerator.fromSourceMap: r,x
</policy>

<policy nmpPackage="lodash.map" count="23">
</policy>

<policy nmpPackage="eventemitter3" count="25">
</policy>

<policy nmpPackage="gulp" count="26">
	deprecated.field: r,x
	deprecated.method: r,x
	fs.readFileSync: r,x
	gulp-util.env: r
	orchestrator.call: r,x
	path.join: r,x
	util.inherits: r,x
	vinyl-fs.dest: r
	vinyl-fs.src: r
	vinyl-fs.watch: r,x
</policy>

<policy nmpPackage="json-stable-stringify" count="27">
	tape: x
</policy>

<policy nmpPackage="hiredis" count="28">
	assert.deepEqual: r,x
	assert.equal: r,x
	assert.notEqual: r,x
	assert.ok: r,x
	assert.throws: r,x
	bindings: x
	child_process.spawn: r,x
	net.createConnection: r,x
</policy>

<policy nmpPackage="gulp-minify-css" count="29">
	gulp-util.PluginError: r
	object-assign: x
	path.dirname: r,x
	path.relative: r,x
	path.resolve: r,x
	vinyl-sourcemaps-apply: x
</policy>

<policy nmpPackage="gulp-replace" count="31">
	istextorbinary.isText: r,x
	replacestream: x
</policy>

<policy nmpPackage="path-is-absolute" count="32">
</policy>

<policy nmpPackage="fibers" count="33">
	child_process.exec: r,x
	child_process.spawn: r,x
	fibers: x
	fibers.current: r
	fibers.current.run: r,x
	fibers.current.started: r
	fibers.poolSize: w,r
	fibers.prototype: r
	fibers.prototype.run: r
	fibers.prototype.run.bind: r,x
	fibers.prototype.run.call: r,x
	fibers.yield: r,x
	fibers/future: w
	future.wrap: r,x
	modPath.Fiber: r
	path.join: r,x
	util.inherits: r,x
</policy>

<policy nmpPackage="unzip" count="34">
	binary.parse: r,x
	dirdiff: x
	fs.createReadStream: r,x
	fs.readFileSync: r,x
	fstream.Writer: r,x
	path.join: r,x
	readable-stream/passthrough.call: r,x
	readable-stream/transform.call: r,x
	readable-stream/transform.prototype: r
	readable-stream/transform.prototype.addListener: r
	readable-stream/transform.prototype.addListener.call: r,x
	readable-stream/transform.prototype.pipe: r
	readable-stream/transform.prototype.pipe.apply: r,x
	readable-stream/writable.apply: r,x
	stream-buffers.WritableStreamBuffer: r
	tap.test: r,x
	temp.mkdir: r,x
	util.inherits: r,x
	zlib.createInflateRaw: r,x
</policy>

<policy nmpPackage="babel-preset-react" count="35">
</policy>

<policy nmpPackage="xhr" count="36">
	global/window.XDomainRequest: r
	global/window.XMLHttpRequest: r
	is-function: x
	parse-headers: x
	xtend: x
</policy>

<policy nmpPackage="gzip-size" count="37">
</policy>

<policy nmpPackage="soap" count="39">
	assert.ok: r,x
	bluebird.promisifyAll: r,x
	concat-stream: x
	crypto.createHash: r,x
	debug: x
	ejs.compile: r,x
	events.EventEmitter: r
	events.EventEmitter.call: r,x
	fs.readFile: r,x
	fs.readFileSync: r,x
	https.Agent: r
	lodash.assign: r,x
	lodash.defaultsDeep: r,x
	lodash.forEach: r,x
	lodash.isArray: r,x
	lodash.isObject: r,x
	lodash.isPlainObject: r,x
	lodash.merge: r,x
	lodash.mergeWith: r,x
	lodash.once: r,x
	path.dirname: r,x
	path.join: r,x
	path.resolve: r,x
	sax.createStream: r,x
	sax.parser: r,x
	strip-bom: x
	url.parse: r,x
	url.resolve: r,x
	util.inherits: r,x
	uuid/v4: x
	xml-crypto.SignedXml: r
</policy>

<policy nmpPackage="flux" count="40">
	fbjs/lib/invariant: x
	fbjs/lib/shallowEqual: x
	react.Component: r
</policy>

<policy nmpPackage="three" count="41">
	fs.readFile: r,x
	fs.readFileSync: r,x
	fs.writeFileSync: r,x
	tiny-inflate: x
</policy>

<policy nmpPackage="gulp-rev" count="42">
</policy>

<policy nmpPackage="tweetnacl" count="43">
</policy>

<policy nmpPackage="webpack-manifest-plugin" count="45">
	fs-extra.outputFileSync: r,x
	lodash.assign: r,x
	path.basename: r,x
	path.dirname: r,x
	path.join: r,x
	path.relative: r,x
	path.resolve: r,x
	tapable.SyncWaterfallHook: r
</policy>

<policy nmpPackage="koa-compose" count="46">
</policy>

<policy nmpPackage="pull-stream" count="47">
	fastbench: x
	stream.Readable: r
	stream.Readable.call: r,x
	stream.Transform: r
	stream.Transform.call: r,x
	stream.Writable: r
	stream.Writable.call: r,x
	tape: x
	util.inherits: r,x
</policy>

<policy nmpPackage="zone.js" count="48">
	electron.CallbacksRegistry: r
	electron.CallbacksRegistry.prototype: r
	electron.desktopCapturer: r
	electron.shell: r
	events.EventEmitter: r
	events.EventEmitter.prototype: r
	timers.setTimeout: w,r
</policy>

<policy nmpPackage="lodash" count="49">
</policy>

<policy nmpPackage="watch" count="51">
	assert: x
	assert.equal: r,x
	assert.ok: r,x
	events.EventEmitter: r
	fs.readdir: r,x
	fs.stat: r,x
	fs.unwatchFile: r,x
	fs.watchFile: r,x
	fs.writeFile: r,x
	fs.writeFileSync: r,x
	path.basename: r,x
	path.join: r,x
	watch.createMonitor: r,x
</policy>

<policy nmpPackage="utils-merge" count="52">
</policy>

<policy nmpPackage="react-helmet" count="53">
</policy>

<policy nmpPackage="graphql-tag" count="54">
	chai.assert: r
	graphql/language/parser.parse: r,x
</policy>

<policy nmpPackage="xpath" count="55">
	assert.deepEqual: r,x
	assert.equal: r,x
	assert.fail: r,x
	assert.notEqual: r,x
	assert.ok: r,x
	assert.throws: r,x
	xmldom.DOMParser: r
</policy>

<policy nmpPackage="react-addons-css-transition-group" count="56">
</policy>

<policy nmpPackage="ember-cli-babel" count="57">
	@babel/preset-env.isPluginRequired: r
	@babel/preset-env/lib/targets-parser.default: r
	broccoli-debug.buildDebugCallback: r,x
	broccoli-source.UnwatchedDir: r
</policy>

<policy nmpPackage="toml" count="58">
	fs.readFileSync: r,x
	nodeunit.assert: r
	nodeunit.assert.deepEqual: r,x
	nodeunit.assert.fail: r,x
	nodeunit.assert.parsesToml: w,r
</policy>

<policy nmpPackage="json5" count="59">
</policy>

<policy nmpPackage="helmet" count="60">
</policy>

<policy nmpPackage="util" count="61">
</policy>

<policy nmpPackage="jquery-ui" count="62">
	crypto.createHash: r,x
	fs.createWriteStream: r,x
	fs.readFileSync: r,x
	fs.readdirSync: r,x
	fs.statSync: r,x
	fs.writeFileSync: r,x
	grunt-git-authors.getAuthors: r,x
	load-grunt-tasks: x
	path.resolve: r,x
	rimraf.sync: r,x
	shelljs.cp: r,x
	shelljs.exec: r,x
	shelljs.ls: r,x
	shelljs.mkdir: r,x
	testswarm.createClient: r,x
	testswarm.reporters: r
	testswarm.reporters.cli: r
</policy>

<policy nmpPackage="serialport" count="63">
</policy>

<policy nmpPackage="inert" count="64">
</policy>

<policy nmpPackage="utf-8-validate" count="65">
	node-gyp-build: x
</policy>

<policy nmpPackage="on-headers" count="66">
</policy>

<policy nmpPackage="grunt-contrib-clean" count="67">
	async.eachSeries: r,x
	rimraf: x
</policy>

<policy nmpPackage="nconf" count="68">
	assert: x
	assert.deepEqual: r,x
	assert.doesNotThrow: r,x
	assert.equal: r,x
	assert.instanceOf: r,x
	assert.isArray: r,x
	assert.isFunction: r,x
	assert.isNull: r,x
	assert.isObject: r,x
	assert.isString: r,x
	assert.isTrue: r,x
	assert.isUndefined: r,x
	assert.lengthOf: r,x
	assert.match: r,x
	assert.notEqual: r,x
	assert.notStrictEqual: r,x
	assert.strictEqual: r,x
	assert.throws: r,x
	async.forEach: r,x
	async.map: r,x
	async.reduce: r,x
	async.whilst: r,x
	child_process.spawn: r,x
	events.EventEmitter: r
	events.EventEmitter.call: r,x
	fs.exists: r
	fs.existsSync: r
	fs.readFile: r,x
	fs.readFileSync: r,x
	fs.readdirSync: r,x
	fs.realpathSync: r,x
	fs.statSync: r,x
	fs.unlinkSync: r,x
	fs.writeFile: r,x
	fs.writeFileSync: r,x
	nconf-yaml.parse: r,x
	path.dirname: r,x
	path.exists: r
	path.existsSync: r
	path.join: r,x
	util.inherits: r,x
	vows.describe: r,x
	yargs: x
	yargs.alias: r,x
</policy>

<policy nmpPackage="element-ui" count="69">
	element-ui/lib/locale.t: r
	element-ui/lib/locale.t.apply: r,x
	element-ui/lib/utils/dom.addClass: r
	element-ui/lib/utils/dom.on: r
	element-ui/lib/utils/dom.once: r
	element-ui/lib/utils/dom.removeClass: r
	element-ui/lib/utils/popup.PopupManager: r
	element-ui/lib/utils/popup.PopupManager.nextZIndex: r,x
	element-ui/lib/utils/util.hasOwn: r
</policy>

<policy nmpPackage="MD5" count="70">
	assert.equal: r,x
	assert.notEqual: r,x
	charenc.bin: r
	charenc.bin.bytesToString: r,x
	charenc.bin.stringToBytes: r,x
	charenc.utf8: r
	charenc.utf8.stringToBytes: r,x
	crypt.bytesToHex: r,x
	crypt.bytesToWords: r,x
	crypt.endian: r,x
	crypt.wordsToBytes: r,x
</policy>

<policy nmpPackage="front-matter" count="71">
	fs.readFile: r,x
	js-yaml.load: r,x
	path.resolve: r,x
	tape: x
</policy>

<policy nmpPackage="colors" count="72">
	os.release: r,x
	util.inspect: r,x
</policy>

<policy nmpPackage="stylus-loader" count="73">
	fs.readFile: r
	fs.readFileSync: r,x
	fs.statSync: r,x
	loader-utils.getOptions: r,x
	loader-utils.urlToRequest: r,x
	path.basename: r
	path.dirname: r,x
	path.extname: r
	path.join: r
	path.normalize: r,x
	path.relative: r,x
	path.resolve: r,x
	path.sep: r
	stylus: x
	stylus.Compiler: r
	stylus.nodes: r
	stylus.nodes.Literal: r
	stylus.utils: r
	stylus.utils.lookup: r,x
	stylus/lib/nodes.Block: r
	stylus/lib/nodes.Literal: r
	stylus/lib/nodes.filename: w
	stylus/lib/nodes.null: r
	stylus/lib/utils.find: r,x
	stylus/lib/utils.lookupIndex: r,x
	stylus/lib/utils.merge: r,x
	stylus/lib/visitor.apply: r,x
	stylus/lib/visitor.prototype: r
	stylus/lib/visitor/evaluator.apply: r,x
	stylus/lib/visitor/evaluator.prototype: r
	url.parse: r,x
	webpack.LoaderOptionsPlugin: r
	when: x
	when.Promise: r
	when.map: r,x
	when.reduce: r,x
	when.resolve: r,x
	when/node/function.lift: r,x
</policy>

<policy nmpPackage="tracer" count="74">
	assert.equal: r,x
	assert.ok: r,x
	child_process.spawn: r,x
	child_process.spawnSync: r,x
	cli-color.black: r
	cli-color.black.bgWhite: r,x
	cli-color.cyan: r
	cli-color.green: r
	cli-color.magenta: r
	cli-color.red: r
	cli-color.red.bold: r
	cli-color.xterm: r,x
	colors.bold: r
	colors.red: r
	colors.underline: r
	colors.yellow: r
	colors/safe.blue: r
	colors/safe.cyan: r
	colors/safe.green: r
	colors/safe.magenta: r
	colors/safe.red: r
	colors/safe.red.bold: r
	colors/safe.underline: r
	colors/safe.yellow: r
	dateformat: x
	express.bodyParser: r,x
	express.createServer: r,x
	express.methodOverride: r,x
	express.static: r,x
	fs.close: r,x
	fs.createWriteStream: r,x
	fs.existsSync: r,x
	fs.open: r,x
	fs.write: r,x
	mkdirp: x
	mongoskin.db: r,x
	os.type: r,x
	path.basename: r,x
	tinytim.tim: r,x
	tracer.close: r,x
	tracer.colorConsole: r,x
	tracer.console: r,x
	tracer.dailyfile: r,x
	tracer.setLevel: r,x
	util.inspect: r,x
</policy>

<policy nmpPackage="rollup" count="76">
</policy>

<policy nmpPackage="estraverse" count="77">
	gulp-bump: x
	gulp-filter: x
	gulp-git.commit: r,x
	gulp-tag-version: x
	gulp.dest: r,x
	gulp.src: r,x
	gulp.task: r,x
</policy>

<policy nmpPackage="dockerode" count="78">
	events.EventEmitter: r
	tar-fs.pack: r,x
	util.inspect: r
	util.inspect.custom: r
	zlib.createGzip: r,x
</policy>

<policy nmpPackage="babel-plugin-transform-flow-strip-types" count="79">
</policy>

<policy nmpPackage="react-intl" count="80">
	react.Children: r
	react.Children.only: r,x
	react.Component: r
	react.createElement: r
	react.createElement.apply: r,x
	react.isValidElement: r,x
</policy>

<policy nmpPackage="babel-preset-stage-0" count="82">
</policy>

<policy nmpPackage="cookie" count="83">
</policy>

<policy nmpPackage="follow-redirects" count="84">
	assert.equal: r,x
	debug: x
	stream.Writable: r
	stream.Writable.call: r,x
	stream.Writable.prototype: r
	url.format: r,x
	url.parse: r,x
	url.resolve: r,x
</policy>

<policy nmpPackage="text-table" count="85">
	cli-color.blink: r,x
	cli-color.blue: r,x
	cli-color.bold: r,x
	cli-color.green: r,x
	cli-color.inverse: r,x
	cli-color.italic: r,x
	cli-color.red: r,x
	cli-color.strike: r,x
	cli-color.underline: r,x
	cli-color/lib/trim: x
	tape: x
</policy>

<policy nmpPackage="radium" count="87">
	react.Component: r
	react.PureComponent: r
</policy>

<policy nmpPackage="prettier" count="89">
	source-map.SourceNode: r
</policy>

<policy nmpPackage="uuid" count="90">
	crypto.createHash: r,x
	crypto.randomBytes: r,x
</policy>

<policy nmpPackage="eslint-plugin-babel" count="92">
	eslint.RuleTester: r
	eslint.RuleTester.setDefaultConfig: r,x
</policy>

<policy nmpPackage="eslint-config-react-app" count="93">
</policy>

<policy nmpPackage="passport-strategy" count="94">
</policy>

<policy nmpPackage="path" count="95">
	util.isObject: r,x
	util.isString: r,x
</policy>

<policy nmpPackage="unique-random-array" count="96">
	unique-random: x
</policy>

<policy nmpPackage="webpack-dev-server" count="97">
	ansi-html: x
	ansi-html.setColors: r,x
	bonjour: x
	html-entities.AllHtmlEntities: r
	loglevel.getLogger: r,x
	strip-ansi: x
	url.format: r,x
	url.parse: r,x
	webpack/hot/emitter.emit: r,x
</policy>

<policy nmpPackage="component-emitter" count="98">
</policy>

<policy nmpPackage="cli-table" count="100">
</policy>

<policy nmpPackage="striptags" count="101">
</policy>

<policy nmpPackage="babel-plugin-transform-runtime" count="102">
</policy>

<policy nmpPackage="koa-mount" count="103">
	debug: x
</policy>

<policy nmpPackage="connect-history-api-fallback" count="104">
	url.parse: r,x
</policy>

<policy nmpPackage="babel-register" count="105">
	babel-core.OptionManager: r
	babel-core.util: r
	babel-core.util.arrayify: r,x
	babel-core.util.canCompile: r
	babel-core.util.canCompile.EXTENSIONS: r
	babel-core.util.regexify: r
	babel-core.util.shouldIgnore: r,x
	mkdirp.sync: r
</policy>

<policy nmpPackage="clui" count="106">
	cli-color.blackBright: r,x
	cli-color.cyan: r
	cli-color.green: w,r,x
	cli-color.moveTo: r,x
	cli-color.red: r
	cli-color.yellow: r
	cli-color/trim: x
	os.cpus: r,x
	os.freemem: r,x
	os.loadavg: r,x
	os.totalmem: r,x
	os.uptime: r,x
	util.format: r,x
</policy>

<policy nmpPackage="tslint" count="107">
	babel-code-frame: x
	builtin-modules.indexOf: r,x
	chalk.default: r
	chalk.default.blue: r,x
	chalk.default.enabled: w,r
	chalk.default.gray: r,x
	chalk.default.green: r,x
	chalk.default.green.underline: r
	chalk.default.grey: w,r,x
	chalk.default.hidden: r,x
	chalk.default.red: r,x
	chalk.default.red.underline: r
	chalk.default.yellow: r,x
	commander.args: w,r
	commander.args.length: r
	commander.on: r,x
	commander.option: r,x
	commander.opts: r,x
	commander.parseArgs: r,x
	commander.parseOptions: r,x
	commander.version: r,x
	diff.diffLines: r,x
	fs.accessSync: r,x
	fs.closeSync: r,x
	fs.createWriteStream: r,x
	fs.existsSync: r,x
	fs.openSync: r,x
	fs.readFileSync: r,x
	fs.readSync: r,x
	fs.readdirSync: r,x
	fs.statSync: r,x
	fs.writeFileSync: r,x
	fullPath.Formatter: r
	glob.hasMagic: r,x
	glob.sync: r,x
	js-yaml.JSON_SCHEMA: r
	js-yaml.safeLoad: r,x
	minimatch.Minimatch: r
	minimatch.filter: r,x
	os.homedir: r,x
	path.basename: r,x
	path.dirname: r,x
	path.extname: r,x
	path.join: r,x
	path.normalize: r,x
	path.parse: r,x
	path.relative: r,x
	path.resolve: r,x
	resolve.sync: r,x
	ruleFullPath.Rule: r
	semver.SemVer: r
	semver.gte: r,x
	semver.satisfies: r,x
	src.Formatter: r
	tslib.__assign: r,x
	tslib.__awaiter: r,x
	tslib.__exportStar: r,x
	tslib.__extends: r,x
	tslib.__generator: r,x
	tslib.__makeTemplateObject: r,x
	tsutils.canHaveJsDoc: r,x
	tsutils.collectVariableUsage: r,x
	tsutils.endsControlFlow: r,x
	tsutils.findImports: r,x
	tsutils.forEachComment: r,x
	tsutils.forEachDestructuringIdentifier: r,x
	tsutils.forEachToken: r,x
	tsutils.forEachTokenWithTrivia: r,x
	tsutils.getChildOfKind: r,x
	tsutils.getDeclarationOfBindingElement: r,x
	tsutils.getJsDoc: r,x
	tsutils.getLineRanges: r,x
	tsutils.getModifier: r,x
	tsutils.getNextStatement: r,x
	tsutils.getNextToken: r,x
	tsutils.getPreviousStatement: r,x
	tsutils.getPreviousToken: r,x
	tsutils.getPropertyName: r,x
	tsutils.getTokenAtPosition: r,x
	tsutils.getVariableDeclarationKind: r,x
	tsutils.hasModifier: r,x
	tsutils.hasOwnThisReference: r,x
	tsutils.hasSideEffects: r,x
	tsutils.isArrayLiteralExpression: r,x
	tsutils.isArrowFunction: r,x
	tsutils.isAssertionExpression: r,x
	tsutils.isAssignmentKind: r,x
	tsutils.isAwaitExpression: r,x
	tsutils.isBinaryExpression: r,x
	tsutils.isBindingElement: r,x
	tsutils.isBindingPattern: r,x
	tsutils.isBlock: r,x
	tsutils.isBlockLike: r,x
	tsutils.isBlockScopedVariableDeclarationList: r,x
	tsutils.isBreakOrContinueStatement: r,x
	tsutils.isBreakStatement: r,x
	tsutils.isCallExpression: r,x
	tsutils.isCallSignatureDeclaration: r,x
	tsutils.isClassDeclaration: r,x
	tsutils.isClassExpression: r,x
	tsutils.isClassLikeDeclaration: r,x
	tsutils.isConditionalExpression: r,x
	tsutils.isConstructSignatureDeclaration: r,x
	tsutils.isConstructorDeclaration: r,x
	tsutils.isDefaultClause: r
	tsutils.isElementAccessExpression: r,x
	tsutils.isEntityNameExpression: r,x
	tsutils.isExpressionStatement: r,x
	tsutils.isExpressionValueUsed: r,x
	tsutils.isExternalModuleReference: r,x
	tsutils.isForInStatement: r,x
	tsutils.isForOfStatement: r,x
	tsutils.isForStatement: r,x
	tsutils.isFunctionDeclaration: r,x
	tsutils.isFunctionExpression: r,x
	tsutils.isFunctionScopeBoundary: r,x
	tsutils.isFunctionTypeNode: r,x
	tsutils.isFunctionWithBody: r,x
	tsutils.isIdentifier: r,x
	tsutils.isIfStatement: r,x
	tsutils.isImportDeclaration: r,x
	tsutils.isImportEqualsDeclaration: r,x
	tsutils.isInterfaceDeclaration: r,x
	tsutils.isIterationStatement: r,x
	tsutils.isLabeledStatement: r,x
	tsutils.isLiteralExpression: r,x
	tsutils.isMethodDeclaration: r,x
	tsutils.isMethodSignature: r,x
	tsutils.isModifierFlagSet: r,x
	tsutils.isModuleDeclaration: r,x
	tsutils.isNamedImports: r,x
	tsutils.isNamespaceImport: r,x
	tsutils.isNewExpression: r,x
	tsutils.isNoSubstitutionTemplateLiteral: r,x
	tsutils.isNodeFlagSet: r,x
	tsutils.isNodeKind: r,x
	tsutils.isNumericLiteral: r,x
	tsutils.isObjectFlagSet: r,x
	tsutils.isObjectLiteralExpression: r,x
	tsutils.isObjectType: r,x
	tsutils.isOmittedExpression: r,x
	tsutils.isParameterDeclaration: r,x
	tsutils.isParameterProperty: r,x
	tsutils.isParenthesizedExpression: r,x
	tsutils.isPositionInComment: r,x
	tsutils.isPostfixUnaryExpression: r,x
	tsutils.isPrefixUnaryExpression: r,x
	tsutils.isPropertyAccessExpression: r,x
	tsutils.isPropertyAssignment: r,x
	tsutils.isPropertyDeclaration: r,x
	tsutils.isPropertySignature: r,x
	tsutils.isReassignmentTarget: r,x
	tsutils.isReturnStatement: r,x
	tsutils.isSameLine: r,x
	tsutils.isScopeBoundary: r,x
	tsutils.isShorthandPropertyAssignment: r,x
	tsutils.isSignatureDeclaration: r,x
	tsutils.isSpreadElement: r,x
	tsutils.isStringLiteral: r,x
	tsutils.isSwitchStatement: r,x
	tsutils.isSymbolFlagSet: r,x
	tsutils.isTaggedTemplateExpression: r,x
	tsutils.isThisParameter: r,x
	tsutils.isThrowStatement: r,x
	tsutils.isTokenKind: r,x
	tsutils.isTryStatement: r,x
	tsutils.isTypeAliasDeclaration: r,x
	tsutils.isTypeAssertion: r,x
	tsutils.isTypeFlagSet: r,x
	tsutils.isTypeLiteralNode: r,x
	tsutils.isTypeNodeKind: r,x
	tsutils.isTypeReference: r,x
	tsutils.isTypeReferenceNode: r,x
	tsutils.isUnionOrIntersectionType: r,x
	tsutils.isUnionType: r,x
	tsutils.isValidPropertyAccess: r,x
	tsutils.isValidPropertyName: r,x
	tsutils.isVariableDeclaration: r,x
	tsutils.isVariableDeclarationList: r,x
	tsutils.isVariableStatement: r,x
	tsutils.isVoidExpression: r,x
	typescript.DiagnosticCategory: r
	typescript.DiagnosticCategory.Error: r
	typescript.ModifierFlags: r
	typescript.ModifierFlags.Private: r
	typescript.ModifierFlags.Readonly: r
	typescript.ModifierFlags.Static: r
	typescript.NodeFlags: r
	typescript.NodeFlags.Const: r
	typescript.NodeFlags.GlobalAugmentation: r
	typescript.NodeFlags.Namespace: r
	typescript.ObjectFlags: r
	typescript.ObjectFlags.Anonymous: r
	typescript.ObjectFlags.Tuple: r
	typescript.ScriptTarget: r
	typescript.ScriptTarget.ES5: r
	typescript.ScriptTarget.Latest: r
	typescript.SignatureKind: r
	typescript.SignatureKind.Call: r
	typescript.SymbolFlags: r
	typescript.SymbolFlags.Alias: r
	typescript.SymbolFlags.NamespaceModule: r
	typescript.SymbolFlags.Type: r
	typescript.SyntaxKind: r
	typescript.SyntaxKind.AmpersandAmpersandToken: r
	typescript.SyntaxKind.AmpersandEqualsToken: r
	typescript.SyntaxKind.AmpersandToken: r
	typescript.SyntaxKind.AnyKeyword: r
	typescript.SyntaxKind.ArrayBindingPattern: r
	typescript.SyntaxKind.ArrayLiteralExpression: r
	typescript.SyntaxKind.ArrayType: r
	typescript.SyntaxKind.ArrowFunction: r
	typescript.SyntaxKind.AsExpression: r
	typescript.SyntaxKind.AsteriskAsteriskToken: r
	typescript.SyntaxKind.AsyncKeyword: r
	typescript.SyntaxKind.AwaitExpression: r
	typescript.SyntaxKind.BarBarToken: r
	typescript.SyntaxKind.BarEqualsToken: r
	typescript.SyntaxKind.BarToken: r
	typescript.SyntaxKind.BinaryExpression: r
	typescript.SyntaxKind.BindingElement: r
	typescript.SyntaxKind.Block: r
	typescript.SyntaxKind.BooleanKeyword: r
	typescript.SyntaxKind.BreakStatement: r
	typescript.SyntaxKind.CallExpression: r
	typescript.SyntaxKind.CallSignature: r
	typescript.SyntaxKind.CaretEqualsToken: r
	typescript.SyntaxKind.CaretToken: r
	typescript.SyntaxKind.CaseBlock: r
	typescript.SyntaxKind.CaseClause: r
	typescript.SyntaxKind.CatchClause: r
	typescript.SyntaxKind.CatchKeyword: r
	typescript.SyntaxKind.ClassDeclaration: r
	typescript.SyntaxKind.ClassExpression: r
	typescript.SyntaxKind.ClassKeyword: r
	typescript.SyntaxKind.CloseBraceToken: r
	typescript.SyntaxKind.CloseParenToken: r
	typescript.SyntaxKind.ColonToken: r
	typescript.SyntaxKind.CommaToken: r
	typescript.SyntaxKind.ComputedPropertyName: r
	typescript.SyntaxKind.ConditionalExpression: r
	typescript.SyntaxKind.ConstructSignature: r
	typescript.SyntaxKind.Constructor: r
	typescript.SyntaxKind.ConstructorKeyword: r
	typescript.SyntaxKind.ConstructorType: r
	typescript.SyntaxKind.ContinueStatement: r
	typescript.SyntaxKind.DebuggerStatement: r
	typescript.SyntaxKind.DeclareKeyword: r
	typescript.SyntaxKind.Decorator: r
	typescript.SyntaxKind.DefaultClause: r
	typescript.SyntaxKind.DefaultKeyword: r
	typescript.SyntaxKind.DeleteExpression: r
	typescript.SyntaxKind.DoStatement: r
	typescript.SyntaxKind.ElementAccessExpression: r
	typescript.SyntaxKind.EmptyStatement: r
	typescript.SyntaxKind.EndOfFileToken: r
	typescript.SyntaxKind.EnumDeclaration: r
	typescript.SyntaxKind.EnumMember: r
	typescript.SyntaxKind.EqualsEqualsEqualsToken: r
	typescript.SyntaxKind.EqualsEqualsToken: r
	typescript.SyntaxKind.EqualsGreaterThanToken: r
	typescript.SyntaxKind.EqualsToken: r
	typescript.SyntaxKind.ExclamationEqualsEqualsToken: r
	typescript.SyntaxKind.ExclamationEqualsToken: r
	typescript.SyntaxKind.ExclamationToken: r
	typescript.SyntaxKind.ExportAssignment: r
	typescript.SyntaxKind.ExportDeclaration: r
	typescript.SyntaxKind.ExportKeyword: r
	typescript.SyntaxKind.ExportSpecifier: r
	typescript.SyntaxKind.ExpressionStatement: r
	typescript.SyntaxKind.ExpressionWithTypeArguments: r
	typescript.SyntaxKind.ExtendsKeyword: r
	typescript.SyntaxKind.FalseKeyword: r
	typescript.SyntaxKind.FirstAssignment: r
	typescript.SyntaxKind.FirstNode: r
	typescript.SyntaxKind.FirstTemplateToken: r
	typescript.SyntaxKind.ForInStatement: r
	typescript.SyntaxKind.ForKeyword: r
	typescript.SyntaxKind.ForOfStatement: r
	typescript.SyntaxKind.ForStatement: r
	typescript.SyntaxKind.FromKeyword: r
	typescript.SyntaxKind.FunctionDeclaration: r
	typescript.SyntaxKind.FunctionExpression: r
	typescript.SyntaxKind.FunctionKeyword: r
	typescript.SyntaxKind.FunctionType: r
	typescript.SyntaxKind.GetAccessor: r
	typescript.SyntaxKind.GreaterThanEqualsToken: r
	typescript.SyntaxKind.GreaterThanGreaterThanEqualsToken: r
	typescript.SyntaxKind.GreaterThanGreaterThanGreaterThanEqualsToken: r
	typescript.SyntaxKind.GreaterThanGreaterThanGreaterThanToken: r
	typescript.SyntaxKind.GreaterThanGreaterThanToken: r
	typescript.SyntaxKind.GreaterThanToken: r
	typescript.SyntaxKind.Identifier: r
	typescript.SyntaxKind.IfKeyword: r
	typescript.SyntaxKind.IfStatement: r
	typescript.SyntaxKind.ImportClause: r
	typescript.SyntaxKind.ImportDeclaration: r
	typescript.SyntaxKind.ImportEqualsDeclaration: r
	typescript.SyntaxKind.ImportKeyword: r
	typescript.SyntaxKind.ImportSpecifier: r
	typescript.SyntaxKind.InKeyword: r
	typescript.SyntaxKind.IndexSignature: r
	typescript.SyntaxKind.InstanceOfKeyword: r
	typescript.SyntaxKind.InterfaceDeclaration: r
	typescript.SyntaxKind.InterfaceKeyword: r
	typescript.SyntaxKind.IntersectionType: r
	typescript.SyntaxKind.JSDocAugmentsTag: r
	typescript.SyntaxKind.JSDocClassTag: r
	typescript.SyntaxKind.JSDocComment: r
	typescript.SyntaxKind.JSDocParameterTag: r
	typescript.SyntaxKind.JSDocPropertyTag: r
	typescript.SyntaxKind.JSDocReturnTag: r
	typescript.SyntaxKind.JSDocTag: r
	typescript.SyntaxKind.JSDocTemplateTag: r
	typescript.SyntaxKind.JSDocTypeTag: r
	typescript.SyntaxKind.JSDocTypedefTag: r
	typescript.SyntaxKind.JsxAttribute: r
	typescript.SyntaxKind.JsxClosingElement: r
	typescript.SyntaxKind.JsxElement: r
	typescript.SyntaxKind.JsxExpression: r
	typescript.SyntaxKind.JsxOpeningElement: r
	typescript.SyntaxKind.JsxSelfClosingElement: r
	typescript.SyntaxKind.JsxSpreadAttribute: r
	typescript.SyntaxKind.JsxText: r
	typescript.SyntaxKind.LabeledStatement: r
	typescript.SyntaxKind.LastAssignment: r
	typescript.SyntaxKind.LastTemplateToken: r
	typescript.SyntaxKind.LessThanEqualsToken: r
	typescript.SyntaxKind.LessThanLessThanEqualsToken: r
	typescript.SyntaxKind.LessThanLessThanToken: r
	typescript.SyntaxKind.LessThanToken: r
	typescript.SyntaxKind.MappedType: r
	typescript.SyntaxKind.MethodDeclaration: r
	typescript.SyntaxKind.MethodSignature: r
	typescript.SyntaxKind.MinusMinusToken: r
	typescript.SyntaxKind.MinusToken: r
	typescript.SyntaxKind.ModuleBlock: r
	typescript.SyntaxKind.ModuleDeclaration: r
	typescript.SyntaxKind.MultiLineCommentTrivia: r
	typescript.SyntaxKind.NamedExports: r
	typescript.SyntaxKind.NamedImports: r
	typescript.SyntaxKind.NamespaceImport: r
	typescript.SyntaxKind.NeverKeyword: r
	typescript.SyntaxKind.NewExpression: r
	typescript.SyntaxKind.NewLineTrivia: r
	typescript.SyntaxKind.NoSubstitutionTemplateLiteral: r
	typescript.SyntaxKind.NonNullExpression: r
	typescript.SyntaxKind.NullKeyword: r
	typescript.SyntaxKind.NumberKeyword: r
	typescript.SyntaxKind.NumericLiteral: r
	typescript.SyntaxKind.ObjectBindingPattern: r
	typescript.SyntaxKind.ObjectKeyword: r
	typescript.SyntaxKind.ObjectLiteralExpression: r
	typescript.SyntaxKind.OmittedExpression: r
	typescript.SyntaxKind.OpenBraceToken: r
	typescript.SyntaxKind.OpenBracketToken: r
	typescript.SyntaxKind.OpenParenToken: r
	typescript.SyntaxKind.Parameter: r
	typescript.SyntaxKind.ParenthesizedExpression: r
	typescript.SyntaxKind.ParenthesizedType: r
	typescript.SyntaxKind.PercentToken: r
	typescript.SyntaxKind.PlusEqualsToken: r
	typescript.SyntaxKind.PlusPlusToken: r
	typescript.SyntaxKind.PlusToken: r
	typescript.SyntaxKind.PostfixUnaryExpression: r
	typescript.SyntaxKind.PrefixUnaryExpression: r
	typescript.SyntaxKind.PrivateKeyword: r
	typescript.SyntaxKind.PropertyAccessExpression: r
	typescript.SyntaxKind.PropertyAssignment: r
	typescript.SyntaxKind.PropertyDeclaration: r
	typescript.SyntaxKind.PropertySignature: r
	typescript.SyntaxKind.ProtectedKeyword: r
	typescript.SyntaxKind.PublicKeyword: r
	typescript.SyntaxKind.QualifiedName: r
	typescript.SyntaxKind.ReadonlyKeyword: r
	typescript.SyntaxKind.RegularExpressionLiteral: r
	typescript.SyntaxKind.ReturnKeyword: r
	typescript.SyntaxKind.ReturnStatement: r
	typescript.SyntaxKind.SemicolonClassElement: r
	typescript.SyntaxKind.SemicolonToken: r
	typescript.SyntaxKind.SetAccessor: r
	typescript.SyntaxKind.ShorthandPropertyAssignment: r
	typescript.SyntaxKind.SingleLineCommentTrivia: r
	typescript.SyntaxKind.SlashToken: r
	typescript.SyntaxKind.SourceFile: r
	typescript.SyntaxKind.SpreadAssignment: r
	typescript.SyntaxKind.SpreadElement: r
	typescript.SyntaxKind.StaticKeyword: r
	typescript.SyntaxKind.StringKeyword: r
	typescript.SyntaxKind.StringLiteral: r
	typescript.SyntaxKind.SuperKeyword: r
	typescript.SyntaxKind.SwitchKeyword: r
	typescript.SyntaxKind.SwitchStatement: r
	typescript.SyntaxKind.SymbolKeyword: r
	typescript.SyntaxKind.TaggedTemplateExpression: r
	typescript.SyntaxKind.TemplateExpression: r
	typescript.SyntaxKind.TemplateHead: r
	typescript.SyntaxKind.TemplateSpan: r
	typescript.SyntaxKind.ThisKeyword: r
	typescript.SyntaxKind.ThisType: r
	typescript.SyntaxKind.ThrowStatement: r
	typescript.SyntaxKind.TildeToken: r
	typescript.SyntaxKind.TrueKeyword: r
	typescript.SyntaxKind.TryStatement: r
	typescript.SyntaxKind.TupleType: r
	typescript.SyntaxKind.TypeAliasDeclaration: r
	typescript.SyntaxKind.TypeAssertionExpression: r
	typescript.SyntaxKind.TypeKeyword: r
	typescript.SyntaxKind.TypeLiteral: r
	typescript.SyntaxKind.TypeOfExpression: r
	typescript.SyntaxKind.TypeOperator: r
	typescript.SyntaxKind.TypeParameter: r
	typescript.SyntaxKind.TypeReference: r
	typescript.SyntaxKind.UndefinedKeyword: r
	typescript.SyntaxKind.UnionType: r
	typescript.SyntaxKind.VariableDeclaration: r
	typescript.SyntaxKind.VariableDeclarationList: r
	typescript.SyntaxKind.VariableStatement: r
	typescript.SyntaxKind.VoidExpression: r
	typescript.SyntaxKind.VoidKeyword: r
	typescript.SyntaxKind.WhileKeyword: r
	typescript.SyntaxKind.WhileStatement: r
	typescript.SyntaxKind.WhitespaceTrivia: r
	typescript.SyntaxKind.WithKeyword: r
	typescript.SyntaxKind.WithStatement: r
	typescript.SyntaxKind.YieldExpression: r
	typescript.SyntaxKind.YieldKeyword: r
	typescript.TypeFlags: r
	typescript.TypeFlags.Any: r
	typescript.TypeFlags.Boolean: r
	typescript.TypeFlags.BooleanLike: r
	typescript.TypeFlags.BooleanLiteral: r
	typescript.TypeFlags.ESSymbol: r
	typescript.TypeFlags.Enum: r
	typescript.TypeFlags.EnumLike: r
	typescript.TypeFlags.EnumLiteral: r
	typescript.TypeFlags.Literal: r
	typescript.TypeFlags.Null: r
	typescript.TypeFlags.Number: r
	typescript.TypeFlags.NumberLike: r
	typescript.TypeFlags.NumberLiteral: r
	typescript.TypeFlags.String: r
	typescript.TypeFlags.StringLike: r
	typescript.TypeFlags.StringLiteral: r
	typescript.TypeFlags.TypeParameter: r
	typescript.TypeFlags.Undefined: r
	typescript.TypeFlags.Union: r
	typescript.TypeFlags.Void: r
	typescript.createCompilerHost: r,x
	typescript.createProgram: r,x
	typescript.createScanner: r,x
	typescript.createSourceFile: r,x
	typescript.flattenDiagnosticMessageText: r,x
	typescript.forEachChild: r,x
	typescript.forEachLeadingCommentRange: r,x
	typescript.forEachTrailingCommentRange: r,x
	typescript.formatDiagnostics: r,x
	typescript.getCombinedModifierFlags: r,x
	typescript.getCombinedNodeFlags: r,x
	typescript.getDefaultLibFileName: r,x
	typescript.getDefaultLibFilePath: r,x
	typescript.getLeadingCommentRanges: r,x
	typescript.getLineAndCharacterOfPosition: r,x
	typescript.getPositionOfLineAndCharacter: r,x
	typescript.getPreEmitDiagnostics: r,x
	typescript.getTrailingCommentRanges: r,x
	typescript.isExternalModule: r,x
	typescript.isExternalModuleNameRelative: r,x
	typescript.isFunctionLike: r,x
	typescript.isLineBreak: r,x
	typescript.isWhiteSpace: r
	typescript.isWhiteSpaceLike: r,x
	typescript.isWhiteSpaceSingleLine: r,x
	typescript.parseJsonConfigFileContent: r,x
	typescript.readConfigFile: r,x
	typescript.sys: r
	typescript.sys.newLine: r
	typescript.sys.readDirectory: r
	typescript.sys.readFile: r
	typescript.sys.useCaseSensitiveFileNames: r
	typescript.tokenToString: r,x
	typescript.unescapeIdentifier: r
	typescript.version: r
	util.format: r
	util.format.apply: r,x
</policy>

<policy nmpPackage="jest" count="108">
</policy>

<policy nmpPackage="urijs" count="109">
</policy>

<policy nmpPackage="fs-extra" count="110">
	universalify.fromCallback: r
	universalify.fromPromise: r
</policy>

<policy nmpPackage="which" count="112">
	isexe: x
	isexe.sync: r,x
	path.join: r,x
</policy>

<policy nmpPackage="xlsx" count="113">
</policy>

<policy nmpPackage="progress" count="115">
</policy>

<policy nmpPackage="handlebars" count="116">
	fs.readFileSync: r,x
	path.basename: r,x
	source-map.SourceMapConsumer: r
	source-map.SourceNode: r
	source-map.SourceNode.fromStringWithSourceMap: r,x
	uglify-js.minify: r,x
</policy>

<policy nmpPackage="firebase" count="118">
</policy>

<policy nmpPackage="inflection" count="119">
</policy>

<policy nmpPackage="tar" count="120">
	events.EventEmitter: r
	path.posix: r
	safe-buffer.Buffer: r
</policy>

<policy nmpPackage="lowdb" count="121">
	graceful-fs.existsSync: r,x
	graceful-fs.readFile: r
	graceful-fs.readFileSync: r,x
	graceful-fs.writeFileSync: r,x
	is-promise: x
	lodash.runInContext: r,x
	lodash/flow: x
	lodash/get: x
	lodash/set: x
	path.resolve: r,x
	pify: x
	steno.writeFile: r
	webpack.BannerPlugin: r
</policy>

<policy nmpPackage="ws" count="123">
</policy>

<policy nmpPackage="ignore" count="124">
</policy>

<policy nmpPackage="cron" count="126">
	chai.expect: r,x
	chai.expect.ok: r,x
	moment-timezone: x
	sinon.useFakeTimers: r,x
</policy>

<policy nmpPackage="passport-oauth" count="127">
	passport-oauth1.InternalOAuthError: r
</policy>

<policy nmpPackage="strip-ansi" count="129">
</policy>

<policy nmpPackage="clipboard" count="130">
</policy>

<policy nmpPackage="md5-file" count="131">
</policy>

<policy nmpPackage="dom-helpers" count="132">
</policy>

<policy nmpPackage="readline" count="133">
	events.EventEmitter: r
	events.EventEmitter.call: r,x
	fs.createReadStream: r,x
	fs.statSync: r,x
	iconv-lite.decode: r,x
	tap.test: r,x
	util.inherits: r,x
</policy>

<policy nmpPackage="popper.js" count="134">
</policy>

<policy nmpPackage="babel-plugin-transform-react-jsx" count="135">
</policy>

<policy nmpPackage="xml" count="136">
	http.createServer: r,x
	stream.Stream: r
</policy>

<policy nmpPackage="babel-plugin-transform-object-assign" count="138">
</policy>

<policy nmpPackage="leveldown" count="139">
	abstract-leveldown.AbstractChainedBatch: r
	abstract-leveldown.AbstractIterator: r
	abstract-leveldown.AbstractLevelDOWN: r
	bindings: x
</policy>

<policy nmpPackage="eslint-plugin-standard" count="140">
</policy>

<policy nmpPackage="vue-resource" count="141">
	got: x
	vue.http: r
	vue.http.post: r,x
	vue.use: r,x
	webpack.optimize: r
	webpack.optimize.ModuleConcatenationPlugin: r
</policy>

<policy nmpPackage="clear" count="142">
	assert: x
</policy>

<policy nmpPackage="gulp-htmlmin" count="143">
</policy>

<policy nmpPackage="gulp-git" count="144">
	any-shell-escape: x
	child_process.exec: r,x
	child_process.spawn: r,x
	fancy-log: x
	path.relative: r,x
	path.resolve: r,x
	require-dir: x
	strip-bom-stream: x
	through2.obj: r,x
</policy>

<policy nmpPackage="babel-preset-env" count="145">
</policy>

<policy nmpPackage="highland" count="147">
	events.EventEmitter: r
	events.EventEmitter.call: r,x
	stream.Readable: r
	string_decoder.StringDecoder: r
	util-deprecate: x
	util.inherits: r,x
</policy>

<policy nmpPackage="aws-sdk" count="149">
	buffer.Buffer: r
	buffer/.Buffer: r
	chai.expect: r,x
	crypto.randomBytes: r,x
	dgram.createSocket: r,x
	events.EventEmitter: r
	fs.createReadStream: r,x
	fs.existsSync: r,x
	fs.lstatSync: r,x
	fs.mkdirSync: r,x
	fs.readFileSync: r,x
	fs.readdirSync: r,x
	fs.statSync: r,x
	fs.writeFileSync: r,x
	https.Agent: r
	https.globalAgent: r
	https.globalAgent.maxSockets: r
	jmespath.search: r,x
	jmespath.strictDeepEqual: r,x
	os.homedir: r,x
	path.extname: r,x
	path.join: r,x
	path.parse: r,x
	path.resolve: r,x
	path.sep: r
	stream.Transform: r
	stream.Transform.call: r,x
	stream.Transform.prototype: r
	util.format: r,x
	util.inspect: r,x
	uuid.v4: r,x
	xml2js.Parser: r
</policy>

<policy nmpPackage="node-static" count="150">
	events.EventEmitter: r
	fs.createReadStream: r,x
	fs.readFile: r,x
	fs.stat: r,x
	http.STATUS_CODES: r
	mime.lookup: r,x
	path.join: r,x
	path.normalize: r,x
	path.resolve: r,x
	url.parse: r,x
</policy>

<policy nmpPackage="convert-source-map" count="151">
	fs.readFileSync: r,x
	path.resolve: r,x
	safe-buffer.Buffer: r
	safe-buffer.Buffer.from: r,x
</policy>

<policy nmpPackage="websocket" count="152">
	buffer.Buffer: r
	buffer.Buffer.isBuffer: r,x
	crypto.createHash: r,x
	debug: x
	events.EventEmitter: r
	events.EventEmitter.call: r,x
	events.EventEmitter.listenerCount: r
	gulp-jshint: x
	gulp-jshint.reporter: r,x
	gulp.series: r,x
	gulp.src: r,x
	gulp.task: r,x
	typedarray-to-buffer: x
	url.parse: r,x
	util.inherits: r,x
	yaeti.Event: r
	yaeti.EventTarget: r
	yaeti.EventTarget.call: r,x
</policy>

<policy nmpPackage="get-stdin" count="153">
</policy>

<policy nmpPackage="rimraf" count="154">
	assert: x
	assert.equal: r,x
	glob: x
	glob.hasMagic: r,x
	glob.sync: r,x
	path.join: r,x
</policy>

<policy nmpPackage="iniparser" count="155">
	assert.equal: r,x
	assert.notEqual: r,x
	assert.throws: r,x
	fs.readFile: r,x
	fs.readFileSync: r,x
</policy>

<policy nmpPackage="imports-loader" count="156">
	loader-utils.getCurrentRequest: r,x
	loader-utils.getOptions: r,x
	source-map.SourceMapConsumer: r
	source-map.SourceNode: r
	source-map.SourceNode.fromStringWithSourceMap: r,x
</policy>

<policy nmpPackage="coffee-script" count="157">
	child_process.fork: w,r
	events.EventEmitter: r
	fs.closeSync: r,x
	fs.exists: r,x
	fs.existsSync: r,x
	fs.mkdir: r,x
	fs.openSync: r,x
	fs.readFile: r,x
	fs.readFileSync: r,x
	fs.readSync: r,x
	fs.readdirSync: r,x
	fs.realpathSync: r,x
	fs.stat: r,x
	fs.statSync: r,x
	fs.unlinkSync: r,x
	fs.watch: r,x
	fs.writeFile: r,x
	fs.writeSync: r,x
	jison.Parser: r
	module._nodeModulePaths: r,x
	module.prototype: r
	module.prototype.load: w
	path.basename: r,x
	path.dirname: r,x
	path.join: r,x
	path.normalize: r,x
	path.relative: r,x
	path.resolve: r,x
	path.sep: r
	repl.start: r,x
	vm.Script: r
	vm.Script.createContext: r
	vm.createContext: r
	vm.isContext: r
	vm.runInContext: r,x
	vm.runInThisContext: r,x
</policy>

<policy nmpPackage="arrify" count="158">
</policy>

<policy nmpPackage="react-select" count="159">
	emotion.css: r
	emotion.injectGlobal: r
	react-dom.createPortal: r
	react-dom.findDOMNode: r
	react-transition-group.Transition: r
	react-transition-group.TransitionGroup: r
	react.Component: r
	react.PureComponent: r
</policy>

<policy nmpPackage="find-up" count="160">
</policy>

<policy nmpPackage="electron" count="161">
	fs.existsSync: r,x
	fs.readFileSync: r,x
	path.join: r,x
</policy>

<policy nmpPackage="file-loader" count="162">
</policy>

<policy nmpPackage="send" count="163">
	debug: x
	depd: x
	destroy: x
	encodeurl: x
	escape-html: x
	etag: x
	fresh: x
	fs.createReadStream: r,x
	fs.stat: r,x
	http-errors: x
	mime.charsets: r
	mime.charsets.lookup: r,x
	mime.lookup: r,x
	ms: x
	on-finished: x
	path: w
	path.extname: r,x
	path.join: r,x
	path.normalize: r,x
	path.resolve: r,x
	path.sep: r
	path.split: r,x
	range-parser: x
	stream.call: r,x
	util.inherits: r,x
</policy>

<policy nmpPackage="postcss" count="164">
</policy>

<policy nmpPackage="fs-promise" count="165">
	any-promise.all: r,x
	any-promise/register: x
	assert: x
	assert.deepEqual: r,x
	assert.equal: r,x
	fs.mkdtemp: r
	path.join: r,x
	path.join.apply: r,x
	thenify-all.withCallback: r,x
</policy>

<policy nmpPackage="buffer" count="166">
	base64-js.fromByteArray: r,x
	base64-js.toByteArray: r,x
	ieee754.read: r,x
	ieee754.write: r,x
</policy>

<policy nmpPackage="recompose" count="167">
	@babel/runtime/helpers/interopRequireDefault: x
	@babel/runtime/helpers/interopRequireWildcard: x
	change-emitter.createChangeEmitter: r,x
	most.Stream: r
	most.Stream.from: r
	most.from: r
	react-lifecycles-compat.polyfill: r,x
	react.Component: r
	react.createElement: r,x
	react.createFactory: r,x
</policy>

<policy nmpPackage="argparse" count="168">
	fs.readFileSync: r,x
	path.basename: r,x
	sprintf-js.sprintf: r,x
	util.format: r,x
	util.inherits: r,x
</policy>

<policy nmpPackage="object.assign" count="170">
	define-properties: x
	define-properties.supportsDescriptors: r
	for-each: x
	foreach: x
	function-bind.call: r,x
	has-symbols/shams: x
	object-keys: x
	object-keys.shim: r,x
	tape: x
</policy>

<policy nmpPackage="lodash.defaults" count="171">
</policy>

<policy nmpPackage="raf" count="172">
	performance-now: x
	tape: x
</policy>

<policy nmpPackage="extend" count="173">
</policy>

<policy nmpPackage="passport-google-oauth" count="174">
</policy>

<policy nmpPackage="grunt-contrib-concat" count="175">
	chalk.cyan: r,x
	path.dirname: r,x
	path.join: r,x
	path.relative: r,x
	path.resolve: r,x
	source-map.SourceMapConsumer: r
	source-map.SourceMapGenerator: r
</policy>

<policy nmpPackage="findup-sync" count="176">
	detect-file: x
	fs.readdirSync: r,x
	is-glob: x
	micromatch.matcher: r,x
	path.dirname: r,x
	path.join: r,x
	path.resolve: r,x
	resolve-dir: x
</policy>

<policy nmpPackage="gulp-template" count="177">
	safe-buffer.Buffer: r
</policy>

<policy nmpPackage="babel-helper-vue-jsx-merge-props" count="179">
</policy>

<policy nmpPackage="source-map-loader" count="180">
	async.map: r,x
	fs.existsSync: r,x
	fs.readFile: r,x
	fs.readFileSync: r,x
	fs.writeFileSync: r,x
	loader-utils.urlToRequest: r,x
	path.dirname: r,x
	path.isAbsolute: r,x
	path.join: r,x
	path.resolve: r,x
	should.equal: r,x
</policy>

<policy nmpPackage="react-dom" count="181">
	object-assign: x
	prop-types/checkPropTypes: x
	react-dom.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: r
	react-dom.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.Events: r
	react-dom.findDOMNode: r,x
	react-dom.render: r,x
	react-dom.unstable_batchedUpdates: r,x
	react.Children: r
	react.Children.forEach: r,x
	react.Children.toArray: r,x
	react.Component: r
	react.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: r
	react.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner: r
	react.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner.current: w
	react.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner.currentDispatcher: w
	react.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactDebugCurrentFrame: r
	react.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactDebugCurrentFrame.getStackAddendum: r,x
	react.createElement: r,x
	react.isValidElement: r,x
	schedule.unstable_cancelScheduledWork: r,x
	schedule.unstable_now: r,x
	schedule.unstable_scheduleWork: r,x
	schedule/tracing.__interactionsRef: r
	schedule/tracing.__interactionsRef.current: w,r
	schedule/tracing.__interactionsRef.current.forEach: r,x
	schedule/tracing.__interactionsRef.current.size: r
	schedule/tracing.__subscriberRef: r
	schedule/tracing.__subscriberRef.current: r
	schedule/tracing.__subscriberRef.current.onWorkScheduled: r,x
	schedule/tracing.__subscriberRef.current.onWorkStarted: r,x
	schedule/tracing.unstable_getThreadID: r,x
	stream.Readable: r
</policy>

<policy nmpPackage="map-stream" count="182">
	event-stream.pipe: r,x
	event-stream.split: r,x
	event-stream.through: r,x
	it-is: x
	stream-spec: x
	stream.Stream: r
	ubelt.delay: r,x
	util.inspect: r,x
</policy>

<policy nmpPackage="mongodb" count="183">
	crypto.createHash: r,x
	events.EventEmitter: r
	events.EventEmitter.apply: r,x
	mongodb-core.BSON: r
	mongodb-core.BSON.Binary: r
	mongodb-core.BSON.Code: r
	mongodb-core.BSON.Long: r
	mongodb-core.BSON.Map: r
	mongodb-core.BSON.ObjectID: r
	mongodb-core.BSON.ObjectId: r,x
	mongodb-core.Connection: r
	mongodb-core.Cursor: r
	mongodb-core.Logger: r
	mongodb-core.MongoError: r
	mongodb-core.MongoError.create: r,x
	mongodb-core.MongoNetworkError: r
	mongodb-core.MongoWriteConcernError: r
	mongodb-core.Mongos: r
	mongodb-core.ObjectID: r
	mongodb-core.ReadPreference: r
	mongodb-core.ReplSet: r
	mongodb-core.Server: r
	mongodb-core.Sessions: r
	mongodb-core.Sessions.ClientSession: r
	mongodb-core.Sessions.ServerSessionPool: r
	mongodb-core.mongoErrorContextSymbol: r
	mongodb-core.parseConnectionString: r
	safe-buffer.Buffer: r
	safe-buffer.Buffer.alloc: r,x
	safe-buffer.Buffer.from: r,x
	safe-buffer.Buffer.isBuffer: r,x
	stream.Duplex: r
	stream.PassThrough: r
	stream.Readable: r
	stream.Readable.call: r,x
	stream.Transform: r
	stream.Writable: r
	util.deprecate: r
	util.format: r,x
	util.inherits: r,x
</policy>

<policy nmpPackage="string" count="184">
	gulp-browserify: x
	gulp-mocha: x
	gulp-rename: x
	gulp-rimraf: x
	gulp-uglify: x
	gulp.dest: r,x
	gulp.src: r,x
	gulp.task: r,x
	mochify: x
</policy>

<policy nmpPackage="url-join" count="185">
	assert.throws: r,x
</policy>

<policy nmpPackage="d3-selection" count="187">
</policy>

<policy nmpPackage="lodash.isarray" count="188">
</policy>

<policy nmpPackage="request" count="190">
	aws-sign2.authorization: r,x
	aws-sign2.canonicalizeHeaders: r,x
	aws-sign2.canonicalizeResource: r,x
	aws4.sign: r,x
	caseless: x
	caseless.httpify: r,x
	crypto.createHash: r,x
	crypto.createHmac: r,x
	crypto.randomBytes: r,x
	extend: x
	forever-agent.SSL: r
	fs.createReadStream: r,x
	har-validator.request: r,x
	http-signature.signRequest: r,x
	is-typedarray.strict: r,x
	isstream: x
	json-stringify-safe: x
	mime-types.lookup: r,x
	oauth-sign.rfc3986: r,x
	oauth-sign.sign: r,x
	performance-now: x
	querystring.stringify: r,x
	querystring.unescape: r
	safe-buffer.Buffer: r
	safe-buffer.Buffer.alloc: r,x
	safe-buffer.Buffer.byteLength: r,x
	safe-buffer.Buffer.concat: r,x
	safe-buffer.Buffer.from: r,x
	safe-buffer.Buffer.isBuffer: r,x
	stream.Stream: r
	stream.Stream.call: r,x
	stream.Stream.prototype: r
	stream.Stream.prototype.pipe: r
	stream.Stream.prototype.pipe.call: r,x
	tough-cookie.Cookie: r
	tough-cookie.Cookie.parse: r,x
	tough-cookie.CookieJar: r
	url.format: r,x
	url.parse: r,x
	url.resolve: r,x
	util.format: r
	util.format.apply: r,x
	util.inherits: r,x
	uuid/v4: x
	zlib.Z_SYNC_FLUSH: r
	zlib.createGunzip: r,x
	zlib.createInflate: r,x
</policy>

<policy nmpPackage="through2" count="191">
	readable-stream/transform.call: r,x
	util.inherits: r,x
	xtend: x
</policy>

<policy nmpPackage="mout" count="192">
</policy>

<policy nmpPackage="nopt" count="193">
	abbrev: x
	osenv.home: r,x
	path.resolve: r,x
	stream.Stream: r
	tap.test: r,x
	url.parse: r,x
</policy>

<policy nmpPackage="flat" count="195">
	assert: x
	assert.deepEqual: r,x
	assert.equal: r,x
	is-buffer: x
</policy>

<policy nmpPackage="touch" count="196">
	events.EventEmitter: r
</policy>

<policy nmpPackage="yosay" count="197">
	ansi-regex: x
</policy>

<policy nmpPackage="vue-router" count="198">
</policy>

<policy nmpPackage="co" count="200">
</policy>

<policy nmpPackage="stylelint-config-standard" count="201">
</policy>

<policy nmpPackage="mscdex-busboy-f70e0dd" count="202">
	assert: x
	assert.deepEqual: r,x
	fs.readdirSync: r,x
	path.basename: r,x
	readable-stream.Writable: r
	stream.Readable: r
	stream.Writable: r
	util.inherits: r,x
	util.inspect: r,x
</policy>

<policy nmpPackage="elliptic" count="203">
	inherits: x
	minimalistic-crypto-utils.encode: r
	minimalistic-crypto-utils.toArray: r
	minimalistic-crypto-utils.toHex: r
	minimalistic-crypto-utils.zero2: r
</policy>

<policy nmpPackage="bl" count="204">
	crypto.createHash: r,x
	crypto.randomBytes: r,x
	fs.createReadStream: r,x
	fs.createWriteStream: r,x
	fs.writeFileSync: r,x
	hash_file: x
	readable-stream.Duplex: r
	readable-stream.Duplex.call: r,x
	readable-stream.Duplex.prototype: r
	readable-stream.Duplex.prototype.end: r
	readable-stream.Duplex.prototype.end.call: r,x
	safe-buffer.Buffer: r
	safe-buffer.Buffer.alloc: r,x
	safe-buffer.Buffer.allocUnsafe: r,x
	safe-buffer.Buffer.concat: r,x
	safe-buffer.Buffer.from: r,x
	safe-buffer.Buffer.isBuffer: r,x
	tape: x
	util.inherits: r,x
</policy>

<policy nmpPackage="walk" count="205">
	events.EventEmitter: r
	events.EventEmitter.call: r,x
	foreachasync.forEachAsync: r,x
	fs.lstat: r,x
	fs.readdir: r,x
	fs.readdirSync: r,x
	path.sep: r
	util.inherits: r,x
</policy>

<policy nmpPackage="setimmediate" count="206">
</policy>

<policy nmpPackage="mscdex-node-ftp-0bdc638" count="207">
	assert.deepEqual: r,x
	events.EventEmitter: r
	fs.createReadStream: r,x
	fs.readdirSync: r,x
	fs.stat: r,x
	net.Socket: r
	path.basename: r,x
	readable-stream.Writable: r
	stream.Writable: r
	tls.connect: r,x
	util.inherits: r,x
	util.inspect: r,x
	xregexp.XRegExp: r
	xregexp.XRegExp.cache: r,x
	xregexp.XRegExp.exec: r,x
	zlib.createDeflate: r,x
	zlib.createInflate: r,x
</policy>

<policy nmpPackage="jsdom" count="209">
	data-urls.fromURLRecord: r
	http.STATUS_CODES: r
	symbol-tree.TreePosition: r
	whatwg-url.URL: r
	whatwg-url.URLSearchParams: r
</policy>

<policy nmpPackage="tape" count="210">
	child_process.spawn: r,x
	concat-stream: x
	deep-equal: x
	defined: x
	ecstatic: x
	events.EventEmitter: r
	falafel: x
	for-each: x
	fs.writeSync: r,x
	function-bind.call: r,x
	has: x
	http.createServer: r,x
	inherits: x
	js-yaml.safeLoad: r,x
	object-inspect: x
	path.dirname: r,x
	path.join: r,x
	path.resolve: r,x
	path.sep: r
	resumer: x
	tap-parser: x
	tap.test: r,x
	through: x
</policy>

<policy nmpPackage="clean-webpack-plugin" count="211">
	fs.readdirSync: r,x
	fs.statSync: r,x
	os.platform: r,x
	path.dirname: r,x
	path.join: r,x
	path.normalize: r,x
	path.resolve: r,x
	path.sep: r
	rimraf.sync: r,x
</policy>

<policy nmpPackage="source-map" count="213">
</policy>

<policy nmpPackage="request-progress" count="214">
	events.EventEmitter: r
	throttleit: x
</policy>

<policy nmpPackage="pegjs" count="215">
</policy>

<policy nmpPackage="yeoman-environment" count="216">
	debug: x
</policy>

<policy nmpPackage="deep-equal" count="217">
	tape: x
</policy>

<policy nmpPackage="webpack-node-externals" count="218">
	fs.existsSync: r,x
	fs.readFileSync: r,x
	fs.readdirSync: r,x
	path.join: r,x
</policy>

<policy nmpPackage="eslint-plugin-promise" count="219">
</policy>

<policy nmpPackage="figlet" count="220">
	async.eachSeries: r,x
	fs.readFile: r,x
	fs.readFileSync: r,x
	fs.readdir: r,x
	fs.readdirSync: r,x
	grunt.file: r
	grunt.file.read: r,x
	path.join: r,x
</policy>

<policy nmpPackage="babel-preset-react-app" count="221">
	@babel/plugin-proposal-class-properties.default: r
	@babel/plugin-proposal-object-rest-spread.default: r
	@babel/plugin-syntax-dynamic-import.default: r
	@babel/plugin-transform-destructuring.default: r
	@babel/plugin-transform-flow-strip-types.default: r
	@babel/plugin-transform-runtime.default: r
	@babel/preset-env.default: r
	@babel/preset-react.default: r
	babel-plugin-transform-dynamic-import.default: r
	babel-plugin-transform-react-remove-prop-types.default: r
</policy>

<policy nmpPackage="svgo" count="222">
	coa.Cmd: r,x
	css-select: x
	css-select-base-adapter: x
	css-select.is: r,x
	css-select.selectOne: r,x
	css-tree.List: r
	css-tree.generate: r,x
	css-tree.parse: r,x
	css-tree.walk: r,x
	css-url-regex: x
	csso.minify: r,x
	csso.minifyBlock: r,x
	csso/lib/restructure/prepare/specificity: x
	fs.lstatSync: r,x
	fs.readFile: r
	fs.readFileSync: r,x
	fs.readdir: r
	fs.writeFile: r
	js-yaml.safeLoad: r,x
	os.EOL: r
	path.basename: r,x
	path.resolve: r,x
	sax.parser: r,x
	stable: x
	unquote: x
</policy>

<policy nmpPackage="object-assign" count="223">
</policy>

<policy nmpPackage="fancy-log" count="224">
	ansi-gray: x
	color-support: x
	time-stamp: x
</policy>

<policy nmpPackage="vinyl-source-stream" count="225">
	fs.createReadStream: r,x
	fs.readFileSync: r,x
	fs.unlink: r,x
	gulp-rename: x
	path.basename: r,x
	path.dirname: r,x
	path.resolve: r,x
	tape: x
	through2: x
	through2.obj: r,x
	vinyl-fs.dest: r,x
</policy>

<policy nmpPackage="rollup-pluginutils" count="226">
	estree-walker.walk: r,x
	path.extname: r,x
	path.resolve: r,x
	path.sep: r
</policy>

<policy nmpPackage="cookies" count="227">
	depd: x
	http.OutgoingMessage: r
	http.OutgoingMessage.prototype: r
	http.OutgoingMessage.prototype.setHeader: r
</policy>

<policy nmpPackage="iconv-lite" count="228">
	buffer.Buffer: r
	buffer.Buffer.byteLength: w,r
	buffer.Buffer.concat: r,x
	buffer.Buffer.from: r
	buffer.Buffer.isBuffer: r,x
	buffer.Buffer.isEncoding: w,r
	buffer.Buffer.isNativeEncoding: w,r,x
	buffer.Buffer.prototype: r
	buffer.Buffer.prototype.toString: w,r
	buffer.Buffer.prototype.write: w,r
	buffer.SlowBuffer: r
	buffer.SlowBuffer.byteLength: w
	buffer.SlowBuffer.prototype: r
	buffer.SlowBuffer.prototype.toString: w,r
	buffer.SlowBuffer.prototype.write: w,r
	safer-buffer.Buffer: r
	safer-buffer.Buffer.alloc: r,x
	safer-buffer.Buffer.concat: r,x
	safer-buffer.Buffer.from: r,x
	stream.Readable: r
	stream.Readable.prototype: r
	stream.Readable.prototype.collect: w,r
	stream.Readable.prototype.setEncoding: w,r
	stream.Transform: r
	stream.Transform.call: r,x
	stream.Transform.prototype: r
	string_decoder.StringDecoder: r
	string_decoder.StringDecoder.call: r,x
	string_decoder.StringDecoder.prototype: r
	string_decoder.StringDecoder.prototype.end: w,r
</policy>

<policy nmpPackage="antd" count="229">
	rc-editor-mention.Nav: r
	rc-editor-mention.getMentions: r
	rc-editor-mention.toEditorState: r
	rc-editor-mention.toString: r
	rc-menu.Divider: r
	rc-menu.Item: r
	rc-menu.ItemGroup: r
	rc-menu.SubMenu: r
	rc-progress.Circle: r
	rc-select.OptGroup: r
	rc-select.Option: r
	rc-tabs.TabPane: r
	rc-tooltip/lib/placements.placements: r
	rc-tree-select.SHOW_ALL: r
	rc-tree-select.SHOW_CHILD: r
	rc-tree-select.SHOW_PARENT: r
	rc-tree-select.TreeNode: r
	rc-tree.TreeNode: r
	rc-tree/lib/util.conductExpandParent: r
	rc-tree/lib/util.convertTreeToEntities: r
	rc-tree/lib/util.getNodeChildren: r
	react-dom.findDOMNode: r
	react-lifecycles-compat.polyfill: r
	react.Component: r
	react.cloneElement: r
	react.createElement: r
</policy>

<policy nmpPackage="deep-diff" count="230">
	assert.deepEqual: r,x
	assert.notDeepEqual: r,x
	assert.notEqual: r,x
	deep-equal: x
	util._extend: r
	util.inspect: r,x
	util.log: r,x
</policy>

<policy nmpPackage="rollup-plugin-commonjs" count="231">
	estree-walker.walk: r,x
	fs.statSync: r,x
	path.basename: r,x
	path.dirname: r,x
	path.extname: r,x
	path.resolve: r,x
	path.sep: r
	resolve.sync: r,x
	rollup-pluginutils.attachScopes: r,x
	rollup-pluginutils.createFilter: r,x
	rollup-pluginutils.makeLegalIdentifier: r,x
</policy>

<policy nmpPackage="inversify" count="232">
</policy>

<policy nmpPackage="regenerator-runtime" count="233">
	path.join: r,x
</policy>

<policy nmpPackage="highlight.js" count="234">
</policy>

<policy nmpPackage="serve-favicon" count="235">
	etag: x
	fresh: x
	fs.readFile: r,x
	fs.statSync: r,x
	ms: x
	parseurl: x
	path.resolve: r,x
	safe-buffer.Buffer: r
	safe-buffer.Buffer.from: r,x
	safe-buffer.Buffer.isBuffer: r,x
</policy>

<policy nmpPackage="gulp-changed" count="237">
</policy>

<policy nmpPackage="querystring" count="238">
	retape: x
	test.run: r,x
</policy>

<policy nmpPackage="enzyme" count="239">
	jsdom.jsdom: r
	rst-selector-parser.createParser: r
</policy>

<policy nmpPackage="xregexp" count="241">
</policy>

<policy nmpPackage="babel-plugin-transform-class-properties" count="242">
</policy>

<policy nmpPackage="babel-preset-latest" count="243">
</policy>

<policy nmpPackage="multer" count="244">
	append-field: x
	concat-stream: x
	crypto.pseudoRandomBytes: r,x
	events.EventEmitter: r
	events.EventEmitter.call: r,x
	events.EventEmitter.prototype: r
	fs.createWriteStream: r,x
	fs.unlink: r,x
	mkdirp.sync: r,x
	object-assign: x
	on-finished: x
	os.tmpdir: r,x
	path.join: r,x
	type-is: x
	util.inherits: r,x
	xtend: x
</policy>

<policy nmpPackage="through" count="245">
	from: x
	stream-spec: x
	tape: x
</policy>

<policy nmpPackage="babel-template" count="246">
</policy>

<policy nmpPackage="loader-utils" count="247">
	crypto.createHash: r,x
</policy>

<policy nmpPackage="docopt" count="248">
</policy>

<policy nmpPackage="change-case" count="249">
</policy>

<policy nmpPackage="crypto-js" count="250">
</policy>

<policy nmpPackage="karma-chrome-launcher" count="251">
	chai.expect: r,x
	fs-access.sync: r,x
	load-grunt-tasks: x
	path.join: r,x
	sinon.stub: r,x
	which.sync: r,x
</policy>

<policy nmpPackage="babel-cli" count="252">
	babel-core.buildExternalHelpers: r
	babel-core.transform: r,x
	babel-core.util: r
	babel-core.util.canCompile: r,x
	babel-core.util.list: r
	babel-core.util.shouldIgnore: r,x
	child_process.spawn: r,x
	commander.quiet: r
	commander.watch: r
	convert-source-map.fromObject: r,x
	fs-readdir-recursive: x
	fs.chmodSync: r,x
	fs.existsSync: r,x
	fs.readFileSync: r,x
	fs.statSync: r,x
	fs.writeFileSync: r,x
	kexec: x
	lodash/defaults: x
	output-file-sync: x
	path.basename: r,x
	path.dirname: r,x
	path.join: r,x
	path.relative: r,x
	slash: x
	source-map.SourceMapConsumer: r
	source-map.SourceMapGenerator: r
	util.inspect: r
	v8flags: x
</policy>

<policy nmpPackage="pngjs" count="253">
	assert.ok: r,x
	buffer.kMaxLength: r
	buffer.kMaxLength.toString: r,x
	stream.call: r,x
	util.inherits: r,x
	zlib.Inflate: r
	zlib.Inflate._processChunk: r
	zlib.Inflate._processChunk.call: r,x
	zlib.Inflate.call: r,x
	zlib.Z_FINISH: r
	zlib.Z_MIN_CHUNK: r
	zlib.createDeflate: r
	zlib.createInflate: r,x
	zlib.deflateSync: r,x
	zlib.inflateSync: r,x
</policy>

<policy nmpPackage="got" count="254">
</policy>

<policy nmpPackage="angular-animate" count="255">
</policy>

<policy nmpPackage="vorpal" count="256">
	chalk.cyan: r,x
	chalk.dim: r,x
	chalk.yellow: r,x
	events.EventEmitter: r
	events.EventEmitter.prototype: r
	inquirer.prompt: r,x
	inquirer.prompt.prompts: r
	inquirer.prompt.prompts.input: r
	inquirer.prompt.prompts.input.prototype: r
	inquirer.prompt.prompts.input.prototype.getQuestion: w
	inquirer.prompt.prompts.password: r
	inquirer.prompt.prompts.password.prototype: r
	inquirer.prompt.prompts.password.prototype.getQuestion: w
	lodash.chain: r,x
	lodash.clone: r,x
	lodash.extend: r,x
	lodash.find: r,x
	lodash.includes: r,x
	lodash.isArray: r,x
	lodash.isEmpty: r,x
	lodash.isFunction: r,x
	lodash.isObject: r,x
	lodash.isString: r,x
	lodash.map: r,x
	lodash.reject: r,x
	lodash.some: r,x
	lodash.toArray: r,x
	lodash.uniq: r,x
	log-update: x
	log-update.clear: r,x
	log-update.done: r,x
	minimist: x
	node-localstorage.LocalStorage: r
	os.hostname: r,x
	os.tmpdir: r,x
	path.join: r,x
	path.normalize: r,x
	strip-ansi: x
	util.inspect: r,x
	wrap-ansi: x
</policy>

<policy nmpPackage="gulp-clean" count="257">
	chai.expect: r,x
	fs.exists: r,x
	fs.existsSync: r,x
	fs.mkdir: r,x
	fs.mkdirSync: r,x
	fs.unlink: r,x
	fs.writeFile: r,x
	path.relative: r,x
	path.resolve: r,x
	rimraf: x
	through2.obj: r,x
</policy>

<policy nmpPackage="gray-matter" count="258">
</policy>

<policy nmpPackage="classnames" count="259">
</policy>

<policy nmpPackage="require-dir" count="260">
	assert.deepEqual: r,x
	fs.readdirSync: r,x
	fs.statSync: r,x
	fs.writeFile: r,x
	path.basename: r,x
	path.dirname: r,x
	path.extname: r,x
	path.resolve: r,x
</policy>

<policy nmpPackage="restler" count="261">
	events.EventEmitter: r
	events.EventEmitter.call: r,x
	fs.close: r,x
	fs.open: r,x
	fs.read: r,x
	http.createServer: r,x
	iconv-lite.decode: r,x
	nodeunit.assert: r
	nodeunit.assert.fail: r,x
	nodeunit.assert.re: w,r
	nodeunit.reporters: r
	qs.stringify: r,x
	url.parse: r,x
	url.resolve: r,x
	util.inherits: r,x
	util.inspect: r,x
	xml2js.Parser: r
	yaml.eval: r,x
	zlib.gunzip: r,x
	zlib.inflate: r,x
</policy>

<policy nmpPackage="webpack-cli" count="262">
	pathForCmd.default: r,x
	pathForCmd.default.serve: r,x
	webpack.DefinePlugin: r
	webpack.HotModuleReplacementPlugin: r
	webpack.LoaderOptionsPlugin: r
	webpack.PrefetchPlugin: r
	webpack.ProvidePlugin: r
	webpack.WebpackOptionsValidationError: r
	webpack.optimize: r
	webpack.optimize.LimitChunkCountPlugin: r
	webpack.optimize.MinChunkSizePlugin: r
	webpack.validateSchema: r
</policy>

<policy nmpPackage="puppeteer" count="264">
	debug: x
	http.request: r,x
	https.request: r,x
	proxy-from-env.getProxyForUrl: r
</policy>

<policy nmpPackage="serialize-javascript" count="265">
</policy>

<policy nmpPackage="react-hot-loader" count="266">
	NativeModules.AlertManager: r
	del: x
	gulp-babel: x
	gulp-derequire: x
	gulp-flatten: x
	gulp-header: x
	gulp-util.PluginError: r
	gulp.dest: r,x
	gulp.src: r,x
	gulp.task: r,x
	gulp.watch: r,x
	object-assign: x
	react-lifecycles-compat.polyfill: r
	react.Component: r
	run-sequence: x
	webpack-stream: x
	webpack-stream.webpack: r
	webpack-stream.webpack.DefinePlugin: r
	webpack-stream.webpack.optimize: r
	webpack-stream.webpack.optimize.DedupePlugin: r
	webpack-stream.webpack.optimize.OccurenceOrderPlugin: r
	webpack-stream.webpack.optimize.UglifyJsPlugin: r
</policy>

<policy nmpPackage="secp256k1" count="268">
	bindings: x
	bip66.decode: r,x
	bip66.encode: r,x
	create-hash: x
	elliptic.ec: r
	safe-buffer.Buffer: r
	safe-buffer.Buffer.alloc: r,x
	safe-buffer.Buffer.concat: r,x
	safe-buffer.Buffer.from: r,x
	safe-buffer.Buffer.isBuffer: r,x
</policy>

<policy nmpPackage="babel-preset-stage-2" count="269">
</policy>

<policy nmpPackage="elasticsearch" count="270">
	agentkeepalive.HttpsAgent: r
	chalk.cyan: r
	chalk.cyan.bold: r
	chalk.enabled: w
	chalk.magenta: r
	chalk.magenta.bold: r
	chalk.red: r
	chalk.red.bold: r
	chalk.supportsColor: r
	chalk.white: r
	chalk.white.bold: r
	chalk.yellow: r
	chalk.yellow.bold: r
	events.EventEmitter: r
	events.EventEmitter.call: r,x
	events.EventEmitter.listenerCount: r,x
	events.EventEmitter.prototype: r
	events.EventEmitter.prototype.listenerCount: r
	fs.appendFileSync: r,x
	fs.createWriteStream: r,x
	lodash.assign: r,x
	lodash.bind: r,x
	lodash.bindKey: r,x
	lodash.clone: r,x
	lodash.cloneDeep: r,x
	lodash.defaults: r,x
	lodash.each: r,x
	lodash.every: r,x
	lodash.forEach: r,x
	lodash.forOwn: r,x
	lodash.get: r,x
	lodash.has: r,x
	lodash.identity: r
	lodash.includes: r,x
	lodash.indexOf: r,x
	lodash.intersection: r,x
	lodash.isArray: r,x
	lodash.isEmpty: r,x
	lodash.isObject: r,x
	lodash.isPlainObject: r,x
	lodash.isString: r,x
	lodash.keys: r,x
	lodash.map: r,x
	lodash.merge: r,x
	lodash.noop: r
	lodash.omit: r,x
	lodash.pick: r,x
	lodash.pull: r,x
	lodash.shuffle: r,x
	lodash.size: r,x
	lodash.sortBy: r,x
	lodash.template: r,x
	lodash.transform: r,x
	lodash.uniq: r,x
	lodash.values: r,x
	querystring.parse: r,x
	querystring.stringify: r,x
	url.format: r,x
	url.parse: r,x
	util.inherits: r
	zlib.createUnzip: r,x
</policy>

<policy nmpPackage="i18n" count="271">
	debug: x
	fs.existsSync: r,x
	fs.lstatSync: r,x
	fs.mkdirSync: r,x
	fs.readFileSync: r,x
	fs.readdirSync: r,x
	fs.renameSync: r,x
	fs.statSync: r,x
	fs.watch: r,x
	fs.writeFileSync: r,x
	make-plural/make-plural.load: r,x
	math-interval-parser.default: r,x
	mustache.render: r,x
	path.join: r,x
	path.normalize: r,x
	path.sep: r
	sprintf-js.vsprintf: r,x
	url.parse: r,x
</policy>

<policy nmpPackage="chart.js" count="272">
	moment: w
	pixelmatch: x
</policy>

<policy nmpPackage="resize-observer-polyfill" count="274">
</policy>

<policy nmpPackage="glob" count="275">
	assert: x
	events.EventEmitter: r
	fs.lstat: r,x
	fs.lstatSync: r,x
	fs.readdir: r,x
	fs.readdirSync: r,x
	fs.stat: r,x
	fs.statSync: r,x
	inflight: x
	inherits: x
	minimatch.GLOBSTAR: r
	minimatch.Minimatch: r
	once: x
	path-is-absolute: x
	path.join: r,x
	path.resolve: r,x
</policy>

<policy nmpPackage="babel-core" count="276">
	babel-traverse.Hub: r
	babel-traverse.NodePath: r
	babel-traverse.NodePath.get: r,x
	babylon.parse: w,r
	generator.print: r
	parser.parse: r
	util.inherits: r
	util.inspect: r
</policy>

<policy nmpPackage="react-error-overlay" count="277">
</policy>

<policy nmpPackage="argv" count="278">
	nlint.render: r,x
	path.normalize: r,x
</policy>

<policy nmpPackage="node-rest-client" count="279">
	debug: x
	events.EventEmitter: r
	events.EventEmitter.call: r,x
	follow-redirects.http: r
	follow-redirects.http.request: r,x
	follow-redirects.https: r
	fs.readFileSync: r,x
	fs.watchFile: r,x
	http.Agent: r
	http.createServer: r,x
	http.request: r,x
	url.parse: r,x
	util._extend: r,x
	util.inherits: r,x
	xml2js.Builder: r
	xml2js.parseString: r
	zlib.gunzip: r,x
	zlib.inflate: r,x
</policy>

<policy nmpPackage="content-type" count="280">
</policy>

<policy nmpPackage="eslint-plugin-node" count="281">
	minimatch.Minimatch: r
</policy>

<policy nmpPackage="sync-request" count="282">
	body-parser.json: r,x
	body-parser.urlencoded: r,x
	child_process.fork: r
	child_process.spawn: r
	child_process.spawnSync: r
	express: x
	morgan: x
	sync-rpc: x
	then-request.FormData: r
</policy>

<policy nmpPackage="hash-sum" count="283">
	lodash.uniq: r,x
	tape: x
</policy>

<policy nmpPackage="node-emoji" count="284">
	fs.writeFile: r,x
	path.join: r,x
	should.exist: r,x
	should.exists: r,x
	should.not: r
	should.not.exists: r,x
</policy>

<policy nmpPackage="nomnom" count="285">
	chalk.blue: r,x
	chalk.bold: r,x
	chalk.grey: r,x
	chalk.red: r,x
	path.basename: r,x
	underscore: x
	underscore.map: r,x
</policy>

<policy nmpPackage="babel-plugin-transform-react-constant-elements" count="286">
</policy>

<policy nmpPackage="replace" count="287">
	fs.lstat: r,x
	fs.lstatSync: r,x
	fs.readFile: r,x
	fs.readFileSync: r,x
	fs.readdir: r,x
	fs.readdirSync: r,x
	fs.writeFile: r,x
	fs.writeFileSync: r,x
	minimatch: x
	path.join: r,x
	tape: x
</policy>

<policy nmpPackage="should" count="288">
	should-type-adaptors.defaultTypeAdaptorStorage: r
	should-type-adaptors.forEach: r,x
	should-type-adaptors.get: r,x
	should-type-adaptors.has: r,x
	should-type-adaptors.isEmpty: r,x
	should-type-adaptors.isIterable: r,x
	should-type-adaptors.iterator: r,x
	should-type-adaptors.size: r,x
	should-type-adaptors.some: r,x
	should-util.hasOwnProperty: r,x
	should-util.isGeneratorFunction: r,x
	should-util.isIterator: r,x
	should-util.merge: r,x
</policy>

<policy nmpPackage="grunt-contrib-cssmin" count="289">
	chalk.cyan: r,x
	chalk.dim: r,x
	maxmin: x
	path.basename: r,x
	path.dirname: r,x
	util.format: r,x
</policy>

<policy nmpPackage="mysql" count="291">
	crypto.createCredentials: r,x
	crypto.createHash: r,x
	events.EventEmitter: r
	events.EventEmitter.call: r,x
	events.EventEmitter.listenerCount: r
	events.usingDomains: r
	fs.createReadStream: r,x
	net.createConnection: r,x
	safe-buffer.Buffer: r
	safe-buffer.Buffer.alloc: r,x
	safe-buffer.Buffer.allocUnsafe: r,x
	safe-buffer.Buffer.byteLength: r,x
	safe-buffer.Buffer.from: r,x
	stream.Stream: r
	stream.Stream.call: r,x
	timers.active: r,x
	timers.clearTimeout: r,x
	timers.setTimeout: r,x
	tls.TLSSocket: r
	tls.createSecureContext: r,x
	tls.createSecurePair: r,x
	url.parse: r,x
	util.inherits: r,x
</policy>

<policy nmpPackage="http-errors" count="292">
	depd: x
	inherits: x
	setprototypeof: x
	statuses.codes: r
	toidentifier: x
</policy>

<policy nmpPackage="react-test-renderer" count="293">
	object-assign: x
	prop-types/checkPropTypes: x
	react-is.isForwardRef: r,x
	react.Component: r
	react.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: r
	react.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner: r
	react.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner.current: w
	react.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner.currentDispatcher: w
	react.isValidElement: r,x
</policy>

<policy nmpPackage="codemirror" count="294">
</policy>

<policy nmpPackage="validate-npm-package-name" count="295">
	builtins.forEach: r,x
	tap.test: r,x
</policy>

<policy nmpPackage="node-cache" count="296">
	clone: x
	events.EventEmitter: r
	lodash/assignIn: x
	lodash/isArray: x
	lodash/isFunction: x
	lodash/isNumber: x
	lodash/isObject: x
	lodash/isString: x
	lodash/size: x
	lodash/template: x
</policy>

<policy nmpPackage="envify" count="297">
	esprima.Syntax: r
	esprima.parse: r,x
	through: x
</policy>

<policy nmpPackage="sugar" count="298">
	sugar-core.Array: r
	sugar-core.Array.add: r
	sugar-core.Array.alias: r,x
	sugar-core.Array.append: r
	sugar-core.Array.at: r
	sugar-core.Array.average: r
	sugar-core.Array.clone: r
	sugar-core.Array.compact: r
	sugar-core.Array.construct: r
	sugar-core.Array.count: r
	sugar-core.Array.create: r
	sugar-core.Array.defineInstance: r,x
	sugar-core.Array.defineInstanceWithArguments: r,x
	sugar-core.Array.defineStatic: r,x
	sugar-core.Array.every: r
	sugar-core.Array.everyFromIndex: r
	sugar-core.Array.exclude: r
	sugar-core.Array.filter: r
	sugar-core.Array.filterFromIndex: r
	sugar-core.Array.find: r
	sugar-core.Array.findFromIndex: r
	sugar-core.Array.findIndex: r
	sugar-core.Array.findIndexFromIndex: r
	sugar-core.Array.first: r
	sugar-core.Array.flatten: r
	sugar-core.Array.forEachFromIndex: r
	sugar-core.Array.from: r
	sugar-core.Array.getOption: r
	sugar-core.Array.groupBy: r
	sugar-core.Array.inGroups: r
	sugar-core.Array.inGroupsOf: r
	sugar-core.Array.insert: r
	sugar-core.Array.intersect: r
	sugar-core.Array.isEmpty: r
	sugar-core.Array.isEqual: r
	sugar-core.Array.last: r
	sugar-core.Array.least: r
	sugar-core.Array.map: r
	sugar-core.Array.mapFromIndex: r
	sugar-core.Array.max: r
	sugar-core.Array.median: r
	sugar-core.Array.min: r
	sugar-core.Array.most: r
	sugar-core.Array.none: r
	sugar-core.Array.reduceFromIndex: r
	sugar-core.Array.reduceRightFromIndex: r
	sugar-core.Array.remove: r
	sugar-core.Array.removeAt: r
	sugar-core.Array.sample: r
	sugar-core.Array.setOption: r
	sugar-core.Array.shuffle: r
	sugar-core.Array.some: r
	sugar-core.Array.someFromIndex: r
	sugar-core.Array.sortBy: r
	sugar-core.Array.subtract: r
	sugar-core.Array.sum: r
	sugar-core.Array.to: r
	sugar-core.Array.union: r
	sugar-core.Array.unique: r
	sugar-core.Array.zip: r
	sugar-core.Date: r
	sugar-core.Date.addDays: r
	sugar-core.Date.addHours: r
	sugar-core.Date.addLocale: r
	sugar-core.Date.addMilliseconds: r
	sugar-core.Date.addMinutes: r
	sugar-core.Date.addMonths: r
	sugar-core.Date.addSeconds: r
	sugar-core.Date.addWeeks: r
	sugar-core.Date.addYears: r
	sugar-core.Date.advance: r
	sugar-core.Date.beginningOfDay: r
	sugar-core.Date.beginningOfISOWeek: r
	sugar-core.Date.beginningOfMonth: r
	sugar-core.Date.beginningOfWeek: r
	sugar-core.Date.beginningOfYear: r
	sugar-core.Date.clone: r
	sugar-core.Date.create: r
	sugar-core.Date.daysAgo: r
	sugar-core.Date.daysFromNow: r
	sugar-core.Date.daysInMonth: r
	sugar-core.Date.daysSince: r
	sugar-core.Date.daysUntil: r
	sugar-core.Date.defineInstance: r,x
	sugar-core.Date.defineInstanceWithArguments: r,x
	sugar-core.Date.defineStatic: r,x
	sugar-core.Date.endOfDay: r
	sugar-core.Date.endOfISOWeek: r
	sugar-core.Date.endOfMonth: r
	sugar-core.Date.endOfWeek: r
	sugar-core.Date.endOfYear: r
	sugar-core.Date.format: r
	sugar-core.Date.get: r
	sugar-core.Date.getAllLocaleCodes: r
	sugar-core.Date.getAllLocales: r
	sugar-core.Date.getISOWeek: r
	sugar-core.Date.getLocale: r
	sugar-core.Date.getOption: r
	sugar-core.Date.getUTCOffset: r
	sugar-core.Date.getUTCWeekday: r
	sugar-core.Date.getWeekday: r
	sugar-core.Date.hoursAgo: r
	sugar-core.Date.hoursFromNow: r
	sugar-core.Date.hoursSince: r
	sugar-core.Date.hoursUntil: r
	sugar-core.Date.is: r
	sugar-core.Date.isAfter: r
	sugar-core.Date.isBefore: r
	sugar-core.Date.isBetween: r
	sugar-core.Date.isFriday: r
	sugar-core.Date.isFuture: r
	sugar-core.Date.isLastMonth: r
	sugar-core.Date.isLastWeek: r
	sugar-core.Date.isLastYear: r
	sugar-core.Date.isLeapYear: r
	sugar-core.Date.isMonday: r
	sugar-core.Date.isNextMonth: r
	sugar-core.Date.isNextWeek: r
	sugar-core.Date.isNextYear: r
	sugar-core.Date.isPast: r
	sugar-core.Date.isSaturday: r
	sugar-core.Date.isSunday: r
	sugar-core.Date.isThisMonth: r
	sugar-core.Date.isThisWeek: r
	sugar-core.Date.isThisYear: r
	sugar-core.Date.isThursday: r
	sugar-core.Date.isToday: r
	sugar-core.Date.isTomorrow: r
	sugar-core.Date.isTuesday: r
	sugar-core.Date.isUTC: r
	sugar-core.Date.isValid: r
	sugar-core.Date.isWednesday: r
	sugar-core.Date.isWeekday: r
	sugar-core.Date.isWeekend: r
	sugar-core.Date.isYesterday: r
	sugar-core.Date.iso: r
	sugar-core.Date.millisecondsAgo: r
	sugar-core.Date.millisecondsFromNow: r
	sugar-core.Date.millisecondsSince: r
	sugar-core.Date.millisecondsUntil: r
	sugar-core.Date.minutesAgo: r
	sugar-core.Date.minutesFromNow: r
	sugar-core.Date.minutesSince: r
	sugar-core.Date.minutesUntil: r
	sugar-core.Date.monthsAgo: r
	sugar-core.Date.monthsFromNow: r
	sugar-core.Date.monthsSince: r
	sugar-core.Date.monthsUntil: r
	sugar-core.Date.range: r
	sugar-core.Date.relative: r
	sugar-core.Date.relativeTo: r
	sugar-core.Date.removeLocale: r
	sugar-core.Date.reset: r
	sugar-core.Date.rewind: r
	sugar-core.Date.secondsAgo: r
	sugar-core.Date.secondsFromNow: r
	sugar-core.Date.secondsSince: r
	sugar-core.Date.secondsUntil: r
	sugar-core.Date.set: r
	sugar-core.Date.setISOWeek: r
	sugar-core.Date.setLocale: r
	sugar-core.Date.setOption: r
	sugar-core.Date.setUTC: r
	sugar-core.Date.setWeekday: r
	sugar-core.Date.weeksAgo: r
	sugar-core.Date.weeksFromNow: r
	sugar-core.Date.weeksSince: r
	sugar-core.Date.weeksUntil: r
	sugar-core.Date.yearsAgo: r
	sugar-core.Date.yearsFromNow: r
	sugar-core.Date.yearsSince: r
	sugar-core.Date.yearsUntil: r
	sugar-core.Function: r
	sugar-core.Function.after: r
	sugar-core.Function.cancel: r
	sugar-core.Function.debounce: r
	sugar-core.Function.defineInstance: r,x
	sugar-core.Function.defineInstanceWithArguments: r,x
	sugar-core.Function.delay: r
	sugar-core.Function.every: r
	sugar-core.Function.lazy: r
	sugar-core.Function.lock: r
	sugar-core.Function.memoize: r
	sugar-core.Function.once: r
	sugar-core.Function.partial: r
	sugar-core.Function.throttle: r
	sugar-core.Number: r
	sugar-core.Number.abbr: r
	sugar-core.Number.abs: r
	sugar-core.Number.acos: r
	sugar-core.Number.alias: r,x
	sugar-core.Number.asin: r
	sugar-core.Number.atan: r
	sugar-core.Number.bytes: r
	sugar-core.Number.cap: r
	sugar-core.Number.ceil: r
	sugar-core.Number.chr: r
	sugar-core.Number.clamp: r
	sugar-core.Number.cos: r
	sugar-core.Number.day: r
	sugar-core.Number.dayAfter: r
	sugar-core.Number.dayAgo: r
	sugar-core.Number.dayBefore: r
	sugar-core.Number.dayFromNow: r
	sugar-core.Number.days: r
	sugar-core.Number.daysAfter: r
	sugar-core.Number.daysAgo: r
	sugar-core.Number.daysBefore: r
	sugar-core.Number.daysFromNow: r
	sugar-core.Number.defineInstance: r,x
	sugar-core.Number.defineStatic: r,x
	sugar-core.Number.downto: r
	sugar-core.Number.duration: r
	sugar-core.Number.exp: r
	sugar-core.Number.floor: r
	sugar-core.Number.format: r
	sugar-core.Number.getOption: r
	sugar-core.Number.hex: r
	sugar-core.Number.hour: r
	sugar-core.Number.hourAfter: r
	sugar-core.Number.hourAgo: r
	sugar-core.Number.hourBefore: r
	sugar-core.Number.hourFromNow: r
	sugar-core.Number.hours: r
	sugar-core.Number.hoursAfter: r
	sugar-core.Number.hoursAgo: r
	sugar-core.Number.hoursBefore: r
	sugar-core.Number.hoursFromNow: r
	sugar-core.Number.isEven: r
	sugar-core.Number.isInteger: r
	sugar-core.Number.isMultipleOf: r
	sugar-core.Number.isOdd: r
	sugar-core.Number.log: r
	sugar-core.Number.metric: r
	sugar-core.Number.millisecond: r
	sugar-core.Number.millisecondAfter: r
	sugar-core.Number.millisecondAgo: r
	sugar-core.Number.millisecondBefore: r
	sugar-core.Number.millisecondFromNow: r
	sugar-core.Number.milliseconds: r
	sugar-core.Number.millisecondsAfter: r
	sugar-core.Number.millisecondsAgo: r
	sugar-core.Number.millisecondsBefore: r
	sugar-core.Number.millisecondsFromNow: r
	sugar-core.Number.minute: r
	sugar-core.Number.minuteAfter: r
	sugar-core.Number.minuteAgo: r
	sugar-core.Number.minuteBefore: r
	sugar-core.Number.minuteFromNow: r
	sugar-core.Number.minutes: r
	sugar-core.Number.minutesAfter: r
	sugar-core.Number.minutesAgo: r
	sugar-core.Number.minutesBefore: r
	sugar-core.Number.minutesFromNow: r
	sugar-core.Number.month: r
	sugar-core.Number.monthAfter: r
	sugar-core.Number.monthAgo: r
	sugar-core.Number.monthBefore: r
	sugar-core.Number.monthFromNow: r
	sugar-core.Number.months: r
	sugar-core.Number.monthsAfter: r
	sugar-core.Number.monthsAgo: r
	sugar-core.Number.monthsBefore: r
	sugar-core.Number.monthsFromNow: r
	sugar-core.Number.ordinalize: r
	sugar-core.Number.pad: r
	sugar-core.Number.pow: r
	sugar-core.Number.random: r
	sugar-core.Number.range: r
	sugar-core.Number.round: r
	sugar-core.Number.second: r
	sugar-core.Number.secondAfter: r
	sugar-core.Number.secondAgo: r
	sugar-core.Number.secondBefore: r
	sugar-core.Number.secondFromNow: r
	sugar-core.Number.seconds: r
	sugar-core.Number.secondsAfter: r
	sugar-core.Number.secondsAgo: r
	sugar-core.Number.secondsBefore: r
	sugar-core.Number.secondsFromNow: r
	sugar-core.Number.setOption: r
	sugar-core.Number.sin: r
	sugar-core.Number.sqrt: r
	sugar-core.Number.tan: r
	sugar-core.Number.times: r
	sugar-core.Number.toNumber: r
	sugar-core.Number.upto: r
	sugar-core.Number.week: r
	sugar-core.Number.weekAfter: r
	sugar-core.Number.weekAgo: r
	sugar-core.Number.weekBefore: r
	sugar-core.Number.weekFromNow: r
	sugar-core.Number.weeks: r
	sugar-core.Number.weeksAfter: r
	sugar-core.Number.weeksAgo: r
	sugar-core.Number.weeksBefore: r
	sugar-core.Number.weeksFromNow: r
	sugar-core.Number.year: r
	sugar-core.Number.yearAfter: r
	sugar-core.Number.yearAgo: r
	sugar-core.Number.yearBefore: r
	sugar-core.Number.yearFromNow: r
	sugar-core.Number.years: r
	sugar-core.Number.yearsAfter: r
	sugar-core.Number.yearsAgo: r
	sugar-core.Number.yearsBefore: r
	sugar-core.Number.yearsFromNow: r
	sugar-core.Object: r
	sugar-core.Object.add: r
	sugar-core.Object.addAll: r
	sugar-core.Object.average: r
	sugar-core.Object.clone: r
	sugar-core.Object.count: r
	sugar-core.Object.defaults: r
	sugar-core.Object.defineInstance: r,x
	sugar-core.Object.defineInstanceAndStatic: r,x
	sugar-core.Object.defineStatic: r,x
	sugar-core.Object.every: r
	sugar-core.Object.exclude: r
	sugar-core.Object.filter: r
	sugar-core.Object.find: r
	sugar-core.Object.forEach: r
	sugar-core.Object.fromQueryString: r
	sugar-core.Object.get: r
	sugar-core.Object.has: r
	sugar-core.Object.intersect: r
	sugar-core.Object.invert: r
	sugar-core.Object.isArguments: r
	sugar-core.Object.isArray: r
	sugar-core.Object.isBoolean: r
	sugar-core.Object.isDate: r
	sugar-core.Object.isEmpty: r
	sugar-core.Object.isEqual: r
	sugar-core.Object.isError: r
	sugar-core.Object.isFunction: r
	sugar-core.Object.isMap: r
	sugar-core.Object.isNumber: r
	sugar-core.Object.isObject: r
	sugar-core.Object.isRegExp: r
	sugar-core.Object.isSet: r
	sugar-core.Object.isString: r
	sugar-core.Object.keys: r
	sugar-core.Object.least: r
	sugar-core.Object.map: r
	sugar-core.Object.max: r
	sugar-core.Object.median: r
	sugar-core.Object.merge: r
	sugar-core.Object.mergeAll: r
	sugar-core.Object.min: r
	sugar-core.Object.most: r
	sugar-core.Object.none: r
	sugar-core.Object.reduce: r
	sugar-core.Object.reject: r
	sugar-core.Object.remove: r
	sugar-core.Object.select: r
	sugar-core.Object.set: r
	sugar-core.Object.size: r
	sugar-core.Object.some: r
	sugar-core.Object.subtract: r
	sugar-core.Object.sum: r
	sugar-core.Object.tap: r
	sugar-core.Object.toQueryString: r
	sugar-core.Object.values: r
	sugar-core.RegExp: r
	sugar-core.RegExp.addFlags: r
	sugar-core.RegExp.defineInstance: r,x
	sugar-core.RegExp.defineStatic: r,x
	sugar-core.RegExp.escape: r
	sugar-core.RegExp.getFlags: r
	sugar-core.RegExp.removeFlags: r
	sugar-core.RegExp.setFlags: r
	sugar-core.String: r
	sugar-core.String.at: r
	sugar-core.String.camelize: r
	sugar-core.String.capitalize: r
	sugar-core.String.chars: r
	sugar-core.String.codes: r
	sugar-core.String.compact: r
	sugar-core.String.dasherize: r
	sugar-core.String.decodeBase64: r
	sugar-core.String.defineInstance: r,x
	sugar-core.String.defineInstanceWithArguments: r,x
	sugar-core.String.defineStatic: r,x
	sugar-core.String.encodeBase64: r
	sugar-core.String.escapeHTML: r
	sugar-core.String.escapeURL: r
	sugar-core.String.first: r
	sugar-core.String.forEach: r
	sugar-core.String.format: r
	sugar-core.String.from: r
	sugar-core.String.includes: r
	sugar-core.String.insert: r
	sugar-core.String.isBlank: r
	sugar-core.String.isEmpty: r
	sugar-core.String.last: r
	sugar-core.String.lines: r
	sugar-core.String.pad: r
	sugar-core.String.padLeft: r
	sugar-core.String.padRight: r
	sugar-core.String.parameterize: r
	sugar-core.String.range: r
	sugar-core.String.remove: r
	sugar-core.String.removeAll: r
	sugar-core.String.removeTags: r
	sugar-core.String.replaceAll: r
	sugar-core.String.reverse: r
	sugar-core.String.shift: r
	sugar-core.String.spacify: r
	sugar-core.String.stripTags: r
	sugar-core.String.titleize: r
	sugar-core.String.to: r
	sugar-core.String.toNumber: r
	sugar-core.String.trimLeft: r
	sugar-core.String.trimRight: r
	sugar-core.String.truncate: r
	sugar-core.String.truncateOnWord: r
	sugar-core.String.underscore: r
	sugar-core.String.unescapeHTML: r
	sugar-core.String.unescapeURL: r
	sugar-core.String.words: r
	sugar-core.util: r
	sugar-core.util.classToString: r
	sugar-core.util.defineProperty: r
	sugar-core.util.forEachProperty: r
	sugar-core.util.getOwn: r
	sugar-core.util.hasOwn: r
	sugar-core.util.mapNativeToChainable: r
	sugar-core.util.setProperty: r
</policy>

<policy nmpPackage="clone" count="299">
</policy>

<policy nmpPackage="discord.js" count="301">
	events.EventEmitter: r
	os.platform: r,x
	stream.Readable: r
</policy>

<policy nmpPackage="listr" count="304">
	is-observable: x
	rxjs.Subject: r
</policy>

<policy nmpPackage="log4js" count="305">
	debug: x
	rfdc: x
	util.inspect: r,x
</policy>

<policy nmpPackage="gulp-less" count="307">
	accord.load: r,x
	object-assign: x
	path.relative: r,x
	replace-ext: x
	through2.obj: r,x
	vinyl-sourcemaps-apply: x
</policy>

<policy nmpPackage="d3-array" count="308">
</policy>

<policy nmpPackage="request-promise-native" count="310">
	request-promise-core/configure/request2: x
	stealthy-require: x
</policy>

<policy nmpPackage="hogan.js" count="311">
</policy>

<policy nmpPackage="supertest" count="314">
	assert.deepStrictEqual: r,x
	http.STATUS_CODES: r
	http.createServer: r,x
	https.Server: r
	methods.forEach: r,x
	superagent.Request: r
	superagent.Request.call: r,x
	superagent.Request.prototype: r
	superagent.Request.prototype.end: r
	superagent.Request.prototype.end.call: r,x
	superagent.agent: r
	superagent.agent.call: r,x
	superagent.agent.prototype: r
	util.inspect: r,x
</policy>

<policy nmpPackage="ember-cli-htmlbars" count="315">
</policy>

<policy nmpPackage="pretty-hrtime" count="316">
</policy>

<policy nmpPackage="gulp-sass" count="317">
</policy>

<policy nmpPackage="broccoli-funnel" count="318">
	minimatch.Minimatch: r
</policy>

<policy nmpPackage="babel-loader" count="319">
</policy>

<policy nmpPackage="log-symbols" count="320">
</policy>

<policy nmpPackage="cssnano" count="321">
	fn: x
	sugar: x
</policy>

<policy nmpPackage="deasync" count="322">
	bindings: x
	child_process.exec: r
	fs.statSync: r,x
	http.get: r,x
	path.join: r,x
</policy>

<policy nmpPackage="karma-phantomjs-launcher" count="323">
	fs.readFileSync: r,x
	fs.writeFileSync: r,x
	load-grunt-tasks: x
	lodash.forOwn: r,x
	lodash.template: r,x
	path.dirname: r,x
	path.extname: r,x
	path.join: r,x
	phantomjs-prebuilt.path: r
</policy>

<policy nmpPackage="babel-polyfill" count="324">
	fs.readFileSync: r,x
	fs.unlinkSync: r,x
	fs.writeFileSync: r,x
	path.join: r,x
</policy>

<policy nmpPackage="user" count="325">
</policy>

<policy nmpPackage="q" count="326">
</policy>

<policy nmpPackage="inherits" count="327">
	util.inherits: r
</policy>

<policy nmpPackage="osenv" count="328">
	child_process.exec: r,x
	os-homedir: x
	os-tmpdir: x
</policy>

<policy nmpPackage="d3-shape" count="329">
</policy>

<policy nmpPackage="gm" count="330">
	array-parallel: x
	array-series: x
	cross-spawn: x
	debug: x
	events.EventEmitter: r
	events.EventEmitter.call: r,x
	fs.exists: r,x
	fs.rename: r
	fs.rename.bind: r,x
	fs.unlink: r
	fs.unlink.bind: r,x
	stream.PassThrough: r
	stream.Stream: r
	util.inherits: r,x
</policy>

<policy nmpPackage="style-loader" count="331">
	loader-utils.getOptions: r,x
	loader-utils.stringifyRequest: r,x
	path.join: r,x
	path.resolve: r,x
	schema-utils: x
</policy>

<policy nmpPackage="acorn" count="333">
	fs.readFileSync: r,x
	path.basename: r,x
</policy>

<policy nmpPackage="color" count="334">
	color-string.get: r,x
	color-string.to: r
	color-string.to.hex: r,x
	color-string.to.rgb: r
	color-string.to.rgb.percent: r,x
</policy>

<policy nmpPackage="compression" count="335">
	accepts: x
	bytes.parse: r,x
	compressible: x
	debug: x
	on-headers: x
	safe-buffer.Buffer: r
	safe-buffer.Buffer.byteLength: r,x
	safe-buffer.Buffer.from: r,x
	safe-buffer.Buffer.isBuffer: r,x
	vary: x
	zlib.createDeflate: r,x
	zlib.createGzip: r,x
</policy>

<policy nmpPackage="vue-style-loader" count="336">
	hash-sum: x
	loader-utils.getOptions: r,x
	loader-utils.stringifyRequest: r,x
	path.join: r,x
	path.relative: r,x
	querystring.parse: r,x
</policy>

<policy nmpPackage="etag" count="337">
	crypto.createHash: r,x
	fs.Stats: r
</policy>

<policy nmpPackage="babel-plugin-transform-object-rest-spread" count="338">
</policy>

<policy nmpPackage="query-string" count="340">
</policy>

<policy nmpPackage="web3" count="341">
	web3-core.addProviders: r,x
	web3-core.packageInit: r,x
</policy>

<policy nmpPackage="warning" count="342">
</policy>

<policy nmpPackage="koa-static" count="343">
	debug: x
</policy>

<policy nmpPackage="graceful-fs" count="344">
	assert.equal: r,x
	constants.O_SYMLINK: r
	constants.O_WRONLY: r
	constants.hasOwnProperty: r,x
	fs.close: w,r
	fs.closeSync: w,r
	stream.Stream: r
	stream.Stream.call: r,x
	util.debuglog: r,x
	util.format: r
	util.format.apply: r,x
</policy>

<policy nmpPackage="gulp-eslint" count="345">
</policy>

<policy nmpPackage="boom" count="346">
</policy>

<policy nmpPackage="hoist-non-react-statics" count="347">
	react-is.ForwardRef: r
</policy>

<policy nmpPackage="camelcase" count="348">
</policy>

<policy nmpPackage="semver" count="349">
</policy>

<policy nmpPackage="autoprefixer" count="350">
	browserslist: x
	browserslist.coverage: r,x
	browserslist.defaults: r
	caniuse-lite.agents: r
	caniuse-lite.feature: r,x
	normalize-range.wrap: r,x
	num2fraction: x
	postcss-value-parser: x
	postcss-value-parser.stringify: r,x
	postcss.list: r
	postcss.list.comma: r,x
	postcss.list.space: r,x
	postcss.parse: r,x
	postcss.plugin: r,x
	postcss.vendor: r
	postcss.vendor.prefix: r,x
	postcss.vendor.unprefixed: r,x
</policy>

<policy nmpPackage="verror" count="351">
	assert-plus.array: r,x
	assert-plus.arrayOfObject: r,x
	assert-plus.bool: r,x
	assert-plus.func: r,x
	assert-plus.object: r,x
	assert-plus.ok: r,x
	assert-plus.string: r,x
	core-util-is.isError: r,x
	extsprintf.sprintf: r
	extsprintf.sprintf.apply: r,x
	util.inherits: r,x
</policy>

<policy nmpPackage="cli-color" count="352">
	ansi-regex: x
	child_process.spawn: r,x
	d: x
	d.gs: r,x
	es5-ext/array/#/for-each-right.call: r,x
	es5-ext/array/from: x
	es5-ext/array/generate: x
	es5-ext/function/#/compose.call: r,x
	es5-ext/iterable/validate-object: x
	es5-ext/math/trunc: x
	es5-ext/object/assign: x
	es5-ext/object/first-key: x
	es5-ext/object/for-each: x
	es5-ext/object/is-value: x
	es5-ext/object/map: x
	es5-ext/object/primitive-set: x
	es5-ext/object/set-prototype-of: x
	es5-ext/object/valid-callable: x
	es5-ext/object/valid-object: x
	es5-ext/object/validate-stringifiable: x
	es5-ext/object/validate-stringifiable-value: x
	es5-ext/string/#/contains.call: r,x
	es5-ext/string/#/repeat.call: r,x
	es5-ext/string/#/starts-with.call: r,x
	es6-iterator/for-of: x
	memoizee: x
	memoizee/methods: x
	path.resolve: r,x
	timers-ext/valid-timeout: x
</policy>

<policy nmpPackage="watchify" count="353">
	anymatch: x
	browserify: x
	browserify/bin/args: x
	chokidar.watch: r,x
	defined: x
	fs.realpathSync: r,x
	fs.writeFile: r,x
	fs.writeFileSync: r,x
	mkdirp.sync: r,x
	os.tmpDir: r
	os.tmpdir: r
	path.dirname: r,x
	path.join: r,x
	path.resolve: r,x
	split: x
	tape: x
	through2: x
	through2.obj: r,x
	vm.runInNewContext: r,x
	win-spawn: x
	xtend: x
</policy>

<policy nmpPackage="karma-coverage" count="354">
	istanbul.Collector: r
	istanbul.Report: r
	istanbul.Report.create: r,x
	istanbul.Report.register: r,x
	istanbul.Store: r
	istanbul.Store.call: r,x
	istanbul.Store.mix: r,x
	istanbul.config: r
	istanbul.config.defaultConfig: r,x
	istanbul.utils: r
	istanbul.utils.summarizeCoverage: r,x
	istanbul.utils.summarizeFileCoverage: r,x
	load-grunt-tasks: x
	lodash.forEach: r,x
	lodash.includes: r,x
	lodash.isEmpty: r,x
	lodash.isFunction: r,x
	lodash.isUndefined: r,x
	lodash.keys: r,x
	lodash.reduce: r,x
	minimatch: x
	path.isAbsolute: r,x
	path.join: r,x
	path.normalize: r,x
	path.relative: r,x
	path.resolve: r,x
	source-map.SourceMapConsumer: r
	source-map.SourceMapGenerator: r
	source-map.SourceMapGenerator.fromSourceMap: r,x
	util._extend: r,x
	util.inherits: r,x
</policy>

<policy nmpPackage="raw-loader" count="355">
</policy>

<policy nmpPackage="xmlhttprequest" count="356">
	child_process.spawn: r,x
	fs.existsSync: r,x
	fs.readFile: r,x
	fs.readFileSync: r,x
	fs.unlinkSync: r,x
	fs.writeFileSync: r,x
	http.request: r
	https.request: r
	url.parse: r,x
</policy>

<policy nmpPackage="gulp-shell" count="358">
	chai.expect: r
	child_process.spawn: r
	path.join: r
</policy>

<policy nmpPackage="passport-oauth2" count="359">
	oauth.OAuth2: r
	passport-strategy.Strategy: r
	passport-strategy.Strategy.call: r,x
	uid2: x
	url.format: r,x
	url.parse: r,x
	url.resolve: r,x
	util.inherits: r,x
</policy>

<policy nmpPackage="phantomjs-prebuilt" count="360">
	child_process.execFile: r,x
	child_process.spawn: r,x
	es6-promise.Promise: r
	extract-zip: x
	fs-extra.chmodSync: r,x
	fs-extra.existsSync: r,x
	fs-extra.mkdirsSync: r,x
	fs-extra.move: r
	fs-extra.readFileSync: r,x
	fs-extra.readdirSync: r,x
	fs-extra.realpathSync: r,x
	fs-extra.remove: r
	fs-extra.renameSync: r,x
	fs-extra.statSync: r,x
	fs-extra.unlinkSync: r,x
	fs-extra.writeFileSync: r,x
	fs.chmodSync: r,x
	fs.existsSync: r,x
	fs.statSync: r,x
	hasha.fromFile: r,x
	kew.defer: r,x
	kew.fcall: r,x
	kew.nfcall: r,x
	kew.resolve: r,x
	libPath.arch: r
	libPath.location: r
	libPath.platform: r
	os.tmpdir: r,x
	path.dirname: r,x
	path.join: r,x
	path.relative: r,x
	path.resolve: r,x
	request: x
	request-progress: x
	system.args: r
	system.args.length: r
	url.format: r,x
	url.parse: r,x
	webdriverio.remote: r,x
	webpage.create: r,x
</policy>

<policy nmpPackage="cuid" count="361">
	os.hostname: r,x
</policy>

<policy nmpPackage="wreck" count="362">
</policy>

<policy nmpPackage="invariant" count="363">
</policy>

<policy nmpPackage="download-git-repo" count="364">
	assert.deepEqual: r,x
	download: x
	fs-readdir-recursive: x
	git-clone: x
	rimraf.sync: r,x
</policy>

<policy nmpPackage="event-emitter" count="365">
	d: x
	es5-ext/array/#/remove.call: r,x
	es5-ext/array/from: x
	es5-ext/error/custom: x
	es5-ext/error/valid-error: x
	es5-ext/object/for-each: x
	es5-ext/object/is-empty: x
	es5-ext/object/valid-callable: x
	es5-ext/object/valid-object: x
	es5-ext/object/valid-value: x
	es5-ext/string/#/pad.call: r,x
	eventemitter2: w
	eventemitter2.EventEmitter2: r
	events: w
	events.EventEmitter: r
</policy>

<policy nmpPackage="method-override" count="366">
	debug: x
	methods.indexOf: r,x
	parseurl: x
	querystring.parse: r,x
	vary: x
</policy>

<policy nmpPackage="mustache" count="367">
</policy>

<policy nmpPackage="ms" count="369">
</policy>

<policy nmpPackage="opener" count="370">
	child_process.execFile: r,x
	os.release: r,x
</policy>

<policy nmpPackage="mongoose" count="371">
	acquit-ignore: x
	bson.Binary: r
	bson.Decimal128: r
	bson.ObjectID: r
	events.EventEmitter: r
	http.createServer: r,x
	mongodb-core.parseConnectionString: r
	mongodb-topology-manager.ReplSet: r
	mongodb-topology-manager.Server: r
	mongodb-topology-manager.Sharded: r
	mongodb.Binary: r
	mongodb.Collection: r
	mongodb.Decimal128: r
	mongodb.ObjectId: r
	safe-buffer.Buffer: r
	stream.Readable: r
	util.inspect: r,x
</policy>

<policy nmpPackage="tildify" count="372">
	os-homedir: x
	path.normalize: r,x
	path.sep: r
</policy>

<policy nmpPackage="memory-fs" count="373">
	errno.code: r
	errno.code.EEXIST: r
	errno.code.EINVAL: r
	errno.code.EISDIR: r
	errno.code.ENOENT: r
	errno.code.ENOSYS: r
	errno.code.ENOTDIR: r
	errno.code.EPERM: r
	readable-stream.Readable: r
	readable-stream.Writable: r
</policy>

<policy nmpPackage="escape-html" count="374">
</policy>

<policy nmpPackage="stylelint" count="376">
	debug: x
	fs.chmod: r,x
	fs.chmodSync: r,x
	fs.chown: r,x
	fs.chownSync: r,x
	fs.close: r,x
	fs.closeSync: r,x
	fs.fsync: r,x
	fs.fsyncSync: r,x
	fs.open: r,x
	fs.openSync: r,x
	fs.realpath: r,x
	fs.realpathSync: r,x
	fs.rename: r,x
	fs.renameSync: r,x
	fs.stat: r,x
	fs.statSync: r,x
	fs.unlink: r,x
	fs.unlinkSync: r,x
	fs.write: r,x
	fs.writeSync: r,x
	import-lazy: x
	imurmurhash: x
	known-css-properties.all: r
	os.EOL: r
	path.resolve: r,x
	postcss-media-query-parser.default: r
	signal-exit: x
	url.parse: r
</policy>

<policy nmpPackage="moment-timezone" count="377">
</policy>

<policy nmpPackage="karma-jasmine" count="378">
	path.dirname: r,x
	path.join: r,x
</policy>

<policy nmpPackage="moment" count="380">
</policy>

<policy nmpPackage="babel" count="381">
</policy>

<policy nmpPackage="jasmine-core" count="382">
	fs.readdirSync: r,x
	fs.statSync: r,x
	path.extname: r,x
	path.join: r,x
</policy>

<policy nmpPackage="cli-table2" count="383">
	chai.expect: r,x
	chai.use: r,x
	colors.gray: r,x
	colors.red: r,x
	colors/safe.bgRed: r,x
	colors/safe.bgWhite: r
	colors/safe.bgWhite.red: r,x
	colors/safe.blue: r,x
	colors/safe.gray: r,x
	colors/safe.green: r,x
	colors/safe.green.bgRed: r,x
	colors/safe.inverse: r,x
	colors/safe.red: r,x
	colors/safe.red.bgGreen: r,x
	colors/safe.underline: r,x
	colors/safe.zebra: r,x
	fs.writeFileSync: r,x
	git-rev.long: r,x
	gulp-istanbul: x
	gulp-istanbul.hookRequire: r,x
	gulp-istanbul.writeReports: r,x
	gulp-mocha: x
	gulp-util.log: r,x
	gulp-util.log.apply: r,x
	gulp.src: r,x
	gulp.task: r,x
	gulp.watch: r,x
	lodash.extend: r,x
	lodash.forEach: r,x
	lodash.isArray: r,x
	lodash.isBoolean: r,x
	lodash.isNumber: r,x
	lodash.isString: r,x
	lodash.map: r,x
	lodash.reduce: r,x
	sinon.spy: r,x
	string-width: x
</policy>

<policy nmpPackage="xmldom" count="384">
</policy>

<policy nmpPackage="react-dropzone" count="385">
</policy>

<policy nmpPackage="eslint-plugin-jsx-a11y" count="386">
	aria-query.aria: r
	aria-query.aria.get: r,x
	aria-query.aria.keys: r,x
	aria-query.dom: r
	aria-query.dom.get: r,x
	aria-query.dom.has: r,x
	aria-query.dom.keys: r,x
	aria-query.elementRoles: r
	aria-query.roles: r
	aria-query.roles.get: r,x
	aria-query.roles.has: r,x
	aria-query.roles.keys: r,x
	axobject-query.AXObjects: r
	axobject-query.AXObjects.get: r,x
	axobject-query.AXObjects.keys: r,x
	axobject-query.elementAXObjects: r
	jsx-ast-utils.elementType: r
	jsx-ast-utils.eventHandlersByType: r
	jsx-ast-utils.eventHandlersByType.focus: r
	jsx-ast-utils.eventHandlersByType.image: r
	jsx-ast-utils.eventHandlersByType.keyboard: r
	jsx-ast-utils.eventHandlersByType.mouse: r
	jsx-ast-utils.getLiteralPropValue: r
	jsx-ast-utils.getProp: r
	jsx-ast-utils.getPropValue: r
	jsx-ast-utils.hasAnyProp: r
	jsx-ast-utils.hasProp: r
	jsx-ast-utils.propName: r
</policy>

<policy nmpPackage="sqlite3" count="387">
	events.EventEmitter: r
	events.EventEmitter.prototype: r
	events.EventEmitter.prototype.addListener: r
	events.EventEmitter.prototype.addListener.apply: r,x
	events.EventEmitter.prototype.removeAllListeners: r
	events.EventEmitter.prototype.removeAllListeners.apply: r,x
	events.EventEmitter.prototype.removeListener: r
	events.EventEmitter.prototype.removeListener.apply: r,x
	node-pre-gyp.find: r,x
	path.join: r,x
	path.resolve: r,x
	util.inspect: r,x
</policy>

<policy nmpPackage="intl.tar.gz" count="388">
</policy>

<policy nmpPackage="connect-flash" count="389">
	util.format: r
	util.format.apply: r,x
	util.isArray: r,x
</policy>

<policy nmpPackage="koa-logger" count="390">
</policy>

<policy nmpPackage="tar-fs" count="391">
	chownr: x
	fs.createReadStream: r,x
	fs.lstatSync: r,x
	fs.readFile: r,x
	fs.readFileSync: r,x
	fs.readdirSync: r,x
	fs.readlinkSync: r,x
	fs.stat: r,x
	fs.statSync: r,x
	fs.symlinkSync: r,x
	fs.writeFileSync: r,x
	mkdirp: x
	os.platform: r,x
	path.dirname: r,x
	path.isAbsolute: r,x
	path.join: r,x
	pump: x
	rimraf.sync: r,x
	tape: x
	tar-stream.extract: r,x
	tar-stream.pack: r,x
</policy>

<policy nmpPackage="eslint-config-prettier" count="392">
</policy>

<policy nmpPackage="connect-redis" count="393">
	blue-tape: x
	bluebird.all: r,x
	bluebird.coroutine: r,x
	bluebird.delay: r,x
	bluebird.promisifyAll: r,x
	bluebird.resolve: r,x
	child_process.spawn: r,x
	debug: x
	ioredis.createClient: r,x
	redis.createClient: r,x
	sinon.stub: r,x
	util.inherits: r,x
</policy>

<policy nmpPackage="lazy-cache" count="394">
	set-getter: x
</policy>

<policy nmpPackage="path-to-regexp" count="395">
</policy>

<policy nmpPackage="cheerio" count="396">
	css-select: x
	css-select.compile: r,x
	dom-serializer: x
	htmlparser2.DomUtils: r
	htmlparser2.DomUtils.uniqueSort: r,x
	htmlparser2.parseDOM: r,x
	lodash/assign: x
	parse5.parse: r
	parse5.parseFragment: r
	parse5.treeAdapters: r
	parse5.treeAdapters.htmlparser2: r
</policy>

<policy nmpPackage="config" count="397">
	TS_DEP.register: r,x
	fs.readFileSync: r,x
	fs.statSync: r,x
	fullFilename.default: r
	os.hostname: r,x
	path.basename: r,x
	path.join: r,x
	util.isArray: r,x
	util.isDate: r,x
	util.isRegExp: r,x
</policy>

<policy nmpPackage="log" count="398">
	events.EventEmitter: r
	events.EventEmitter.prototype: r
	fs.createReadStream: r,x
	fs.createWriteStream: r,x
	util.format: r
	util.format.apply: r,x
</policy>

<policy nmpPackage="react-bootstrap" count="399">
	@babel/runtime-corejs2/helpers/interopRequireDefault: x
	@babel/runtime-corejs2/helpers/interopRequireWildcard: x
</policy>

<policy nmpPackage="copy-paste" count="400">
	child_process.execSync: r,x
	child_process.spawn: r,x
	iconv-lite.decode: r,x
	iconv-lite.encode: r,x
	path.join: r,x
	should.exist: r,x
	should.not: r
	should.not.exist: r,x
	util.inspect: r,x
</policy>

<policy nmpPackage="gulp-util" count="401">
	array-differ: x
	array-uniq: x
	buffer.Buffer: r
	chalk.cyan: r,x
	chalk.red: r,x
	fancy-log.apply: r,x
	gulplog.info: r
	gulplog.info.apply: r,x
	has-gulplog: x
	minimist: x
	multipipe.apply: r,x
	object-assign: x
	stream.Stream: r
	through2.obj: r,x
	util.inherits: r,x
</policy>

<policy nmpPackage="debug" count="402">
</policy>

<policy nmpPackage="socket.io" count="403">
	debug: x
	events.EventEmitter: r
	events.EventEmitter.prototype: r
	events.EventEmitter.prototype.emit: r
	events.EventEmitter.prototype.emit.apply: r,x
	fs.existsSync: r,x
	fs.readFileSync: r,x
	has-binary2: x
	http.Server: r,x
	path.resolve: r,x
	url.parse: r,x
</policy>

<policy nmpPackage="cookie-signature" count="404">
	crypto.createHmac: r,x
	crypto.timingSafeEqual: r,x
</policy>

<policy nmpPackage="babel-plugin-transform-es2015-modules-commonjs" count="405">
	path.basename: r
	path.extname: r
</policy>

<policy nmpPackage="yargs" count="406">
	cliui: x
	decamelize: x
	get-caller-file: x
	require-directory: x
	require-main-filename: x
	util.inspect: r
	which-module: x
</policy>

<policy nmpPackage="bs58" count="407">
	base-x: x
</policy>

<policy nmpPackage="parse5" count="408">
</policy>

<policy nmpPackage="valid-url" count="409">
	tap.test: r,x
</policy>

<policy nmpPackage="bn.js" count="410">
	buffer.Buffer: r
</policy>

<policy nmpPackage="figures" count="411">
</policy>

<policy nmpPackage="bitcoinjs-lib" count="412">
	safe-buffer.Buffer: r
</policy>

<policy nmpPackage="sanitize-html" count="413">
	assert.equal: r,x
	assert.fail: r,x
	assert.strictEqual: r,x
	htmlparser2.Parser: r
	postcss.parse: r,x
	srcset.parse: r,x
	srcset.stringify: r,x
	url.parse: r,x
	xtend: x
</policy>

<policy nmpPackage="isobject" count="414">
</policy>

<policy nmpPackage="debounce" count="415">
	sinon.spy: r,x
	sinon.useFakeTimers: r,x
</policy>

<policy nmpPackage="assert-plus" count="416">
	assert.AssertionError: r
	stream.Stream: r
	util.format: r,x
</policy>

<policy nmpPackage="jade" count="417">
	acorn-globals: x
	acorn.parse: r,x
	acorn/dist/walk.ancestor: r,x
	acorn/dist/walk.base: r
	acorn/dist/walk.base.ExportDefaultDeclaration: w
	acorn/dist/walk.base.ExportNamedDeclaration: w
	acorn/dist/walk.base.ImportDefaultSpecifier: w
	acorn/dist/walk.base.ImportNamespaceSpecifier: w
	acorn/dist/walk.recursive: r,x
	character-parser: x
	character-parser.defaultState: r,x
	character-parser.isPunctuator: r,x
	character-parser.parseChar: r,x
	character-parser.parseMax: r,x
	constantinople: x
	constantinople.toConstant: r,x
	fs.readFileSync: r,x
	jstransformer: x
	lsr.sync: r,x
	path.basename: r,x
	path.dirname: r,x
	path.extname: r
	path.join: r,x
	pull-request.commit: r,x
	uglify-js.minify: r,x
	with: x
</policy>

<policy nmpPackage="bufferutil" count="418">
	node-gyp-build: x
</policy>

<policy nmpPackage="chai-as-promised" count="419">
</policy>

<policy nmpPackage="pluralize" count="420">
</policy>

<policy nmpPackage="readline-sync" count="422">
	child_process.execFileSync: r,x
	child_process.spawn: r,x
	crypto.createCipher: r,x
	crypto.createDecipher: r,x
	crypto.createHash: r,x
	fs.closeSync: r,x
	fs.existsSync: r,x
	fs.mkdirSync: r,x
	fs.openSync: r,x
	fs.readFileSync: r,x
	fs.readSync: r,x
	fs.realpathSync: r,x
	fs.statSync: r,x
	fs.unlinkSync: r,x
	fs.writeSync: r,x
	os.tmpdir: r,x
	path.basename: r,x
	path.dirname: r,x
	path.join: r,x
	path.normalize: r,x
	path.resolve: r,x
	path.sep: r
</policy>

<policy nmpPackage="assert" count="423">
	util/.inherits: r,x
	util/.inspect: r,x
	util/.isDate: r,x
	util/.isError: r,x
	util/.isFunction: r,x
	util/.isPrimitive: r,x
	util/.isRegExp: r,x
</policy>

<policy nmpPackage="url-parse" count="425">
	querystringify.parse: r
	querystringify.stringify: r
	requires-port: x
</policy>

<policy nmpPackage="duplexify" count="426">
	concat-stream: x
	duplexify: x
	end-of-stream: x
	http.request: r,x
	inherits: x
	net.connect: r,x
	net.createServer: r,x
	readable-stream.Duplex: r
	readable-stream.Duplex.call: r,x
	readable-stream.Readable: r
	readable-stream.Writable: r
	readable-stream.Writable.prototype: r
	readable-stream.Writable.prototype.end: r
	readable-stream.Writable.prototype.end.call: r,x
	stream-shift: x
	tape: x
	through2: x
	through2.obj: r,x
</policy>

<policy nmpPackage="app-root-path" count="427">
	electron.remote: r
	electron.remote.require: r,x
	module.globalPaths: r
	module.globalPaths.forEach: r,x
	path.dirname: r,x
	path.join: r,x
	path.resolve: r,x
	path.sep: r
</policy>

<policy nmpPackage="adm-zip" count="428">
	buffer.Buffer: r
	buffer.Buffer.alloc: r,x
	fs: w
	path.basename: r,x
	path.dirname: r,x
	path.existsSync: r
	path.join: r,x
	path.normalize: r,x
	path.resolve: r,x
	path.sep: r
	zlib.createDeflateRaw: r,x
	zlib.createInflateRaw: r,x
</policy>

<policy nmpPackage="nock" count="429">
	assert.ok: r,x
	chai.expect: r,x
	debug: x
	deep-equal: x
	events.EventEmitter: r
	events.EventEmitter.apply: r,x
	events.EventEmitter.call: r,x
	events.EventEmitter.prototype: r
	events.EventEmitter.prototype.on: r
	events.EventEmitter.prototype.on.call: r,x
	fs.createReadStream: r,x
	fs.existsSync: r,x
	fs.readFileSync: r,x
	fs.writeFileSync: r,x
	http.ClientRequest: w,r
	http.IncomingMessage: r
	http.OutgoingMessage: r
	http.OutgoingMessage.call: r,x
	http.get: r,x
	json-stringify-safe: x
	lodash: x
	lodash.assign: r,x
	lodash.clone: r,x
	lodash.cloneDeep: r,x
	lodash.defaults: r,x
	lodash.each: r,x
	lodash.every: r,x
	lodash.extend: r,x
	lodash.find: r,x
	lodash.first: r,x
	lodash.flatten: r,x
	lodash.forOwn: r,x
	lodash.get: r,x
	lodash.has: r,x
	lodash.isArray: r,x
	lodash.isBoolean: r,x
	lodash.isEmpty: r,x
	lodash.isEqual: r,x
	lodash.isFunction: r,x
	lodash.isNull: r,x
	lodash.isNumber: r,x
	lodash.isObject: r,x
	lodash.isPlainObject: r,x
	lodash.isRegExp: r,x
	lodash.isString: r,x
	lodash.isUndefined: r,x
	lodash.map: r,x
	lodash.mapValues: r,x
	lodash.reduce: r,x
	lodash.size: r,x
	lodash.some: r,x
	lodash.uniq: r,x
	mkdirp.sync: r,x
	path.dirname: r,x
	path.join: r,x
	propagate: x
	qs.parse: r,x
	qs.stringify: r,x
	semver.satisfies: r,x
	stream.Readable: r
	stream.Transform: w,r
	timers.setImmediate: r,x
	timers.setTimeout: r,x
	url.URL: r
	url.parse: r,x
	util.format: r,x
	util.inherits: r,x
	util.inspect: r,x
	zlib.deflateSync: r
	zlib.gunzipSync: r,x
	zlib.inflateSync: r,x
</policy>

<policy nmpPackage="is" count="430">
	foreach: x
	tape: x
</policy>

<policy nmpPackage="flow-bin" count="431">
	path.join: r,x
</policy>

<policy nmpPackage="merge-descriptors" count="432">
</policy>

<policy nmpPackage="draft-js" count="433">
	fbjs/lib/Keys.BACKSPACE: r
	fbjs/lib/Keys.DELETE: r
	fbjs/lib/Keys.DOWN: r
	fbjs/lib/Keys.ESC: r
	fbjs/lib/Keys.LEFT: r
	fbjs/lib/Keys.RETURN: r
	fbjs/lib/Keys.RIGHT: r
	fbjs/lib/Keys.SPACE: r
	fbjs/lib/Keys.TAB: r
	fbjs/lib/Keys.UP: r
	fbjs/lib/Scroll.getTop: r,x
	fbjs/lib/Scroll.setTop: r,x
	fbjs/lib/Style.getScrollParent: r,x
	fbjs/lib/TokenizeUtil.getPunctuation: r,x
	fbjs/lib/UnicodeBidi.getDirection: r,x
	fbjs/lib/UnicodeBidiDirection.getHTMLDirIfDifferent: r,x
	fbjs/lib/UnicodeUtils.getUTF16Length: r,x
	fbjs/lib/UnicodeUtils.isSurrogatePair: r,x
	fbjs/lib/UnicodeUtils.strlen: r,x
	fbjs/lib/UnicodeUtils.substr: r,x
	fbjs/lib/UserAgent.isBrowser: r,x
	fbjs/lib/UserAgent.isEngine: r,x
	fbjs/lib/UserAgent.isPlatform: r,x
	fbjs/lib/containsNode: x
	fbjs/lib/cx: x
	fbjs/lib/emptyFunction.thatReturns: r,x
	fbjs/lib/emptyFunction.thatReturnsNull: r
	fbjs/lib/emptyFunction.thatReturnsTrue: r
	fbjs/lib/getActiveElement: x
	fbjs/lib/getElementPosition: x
	fbjs/lib/getScrollPosition: x
	fbjs/lib/getViewportDimensions: x
	fbjs/lib/invariant: x
	fbjs/lib/joinClasses: x
	fbjs/lib/nullthrows: x
	fbjs/lib/setImmediate: x
	immutable.List: r,x
	immutable.List.of: r,x
	immutable.Map: r,x
	immutable.OrderedMap: r,x
	immutable.OrderedSet: r,x
	immutable.OrderedSet.of: r,x
	immutable.Record: r,x
	immutable.Repeat: r,x
	immutable.Set: r,x
	immutable.Stack: r,x
	immutable.is: r,x
	object-assign: x
	react-dom.findDOMNode: r,x
	react.Component: r
	react.cloneElement: r,x
	react.createElement: r,x
</policy>

<policy nmpPackage="xml2js" count="436">
	events.EventEmitter: r
	sax.parser: r,x
	timers.setImmediate: r,x
	xmlbuilder.create: r,x
</policy>

<policy nmpPackage="react-redux" count="437">
	react.Children: r
	react.Children.only: r,x
	react.Component: r
	react.createElement: r
	redux.bindActionCreators: r
</policy>

<policy nmpPackage="keypress" count="438">
	events.EventEmitter: r
	events.EventEmitter.listenerCount: w,r
	string_decoder.StringDecoder: r
	tty.setRawMode: r,x
</policy>

<policy nmpPackage="react-dnd-html5-backend" count="439">
	autobind-decorator.default: r
	lodash/defaults: x
	lodash/memoize: x
	lodash/union: x
	lodash/without: x
	shallowequal: x
</policy>

<policy nmpPackage="plist" count="440">
	base64-js.fromByteArray: r,x
	base64-js.toByteArray: r,x
	buffer.Buffer: r
	ieee754.read: r,x
	ieee754.write: r,x
	xmlbuilder.create: r,x
	xmldom.DOMParser: r
</policy>

<policy nmpPackage="case-sensitive-paths-webpack-plugin" count="441">
</policy>

<policy nmpPackage="redux-saga" count="442">
</policy>

<policy nmpPackage="crypto" count="443">
</policy>

<policy nmpPackage="on-finished" count="444">
	ee-first: x
</policy>

<policy nmpPackage="react-router-redux" count="445">
</policy>

<policy nmpPackage="koa-send" count="446">
	debug: x
</policy>

<policy nmpPackage="postcss-flexbugs-fixes" count="447">
	postcss.decl: r,x
	postcss.list: r
	postcss.list.space: r,x
	postcss.plugin: r,x
</policy>

<policy nmpPackage="es6-error" count="448">
</policy>

<policy nmpPackage="react-dnd" count="449">
	dnd-core.createDragDropManager: r,x
	hoist-non-react-statics: x
	invariant: x
	lodash/isFunction: x
	lodash/isPlainObject: x
	react.Component: r
	react.cloneElement: r,x
	react.createContext: r,x
	react.createElement: r,x
	react.createRef: r,x
	react.isValidElement: r,x
	recompose/isClassComponent.default: r,x
	shallowequal: x
</policy>

<policy nmpPackage="virtual-dom" count="450">
	browser-split: x
	ev-store: x
	global/document.activeElement: r
	global/document.body: r
	global/document.body.appendChild: r,x
	global/document.body.removeChild: r,x
	global/document.createElement: r,x
	global/document.getElementById: r,x
	individual/one-version: x
	is-object: x
	next-tick: x
	tape: x
	x-is-array: x
</policy>

<policy nmpPackage="prismjs" count="451">
</policy>

<policy nmpPackage="date-fns" count="452">
</policy>

<policy nmpPackage="escape-string-regexp" count="453">
</policy>

<policy nmpPackage="gulp-autoprefixer" count="454">
</policy>

<policy nmpPackage="qs" count="455">
	iconv-lite.decode: r,x
	iconv-lite.encode: r,x
	safer-buffer.Buffer: r
	safer-buffer.Buffer.from: r,x
	tape: x
</policy>

<policy nmpPackage="connect" count="457">
	debug: x
	events.EventEmitter: r
	events.EventEmitter.prototype: r
	finalhandler: x
	http.Server: r
	http.createServer: r,x
	parseurl: x
	utils-merge: x
</policy>

<policy nmpPackage="gulp-watch" count="458">
	ansi-colors.cyan: r,x
	ansi-colors.magenta: r,x
	ansi-colors.yellow: r,x
	anymatch: x
	chokidar.watch: r,x
	fancy-log.info: r,x
	fancy-log.info.apply: r,x
	glob-parent: x
	object-assign: x
	path-is-absolute: x
	path.dirname: r,x
	path.normalize: r,x
	path.resolve: r,x
	readable-stream.Duplex: r
	slash: x
	vinyl-file.read: r,x
</policy>

<policy nmpPackage="wrench" count="459">
	fs.chmod: r,x
	fs.chmodSync: r,x
	fs.chownSync: r,x
	fs.closeSync: r,x
	fs.existsSync: r,x
	fs.lstat: r,x
	fs.lstatSync: r,x
	fs.mkdir: r,x
	fs.mkdirSync: r,x
	fs.openSync: r,x
	fs.readFile: r,x
	fs.readFileSync: r,x
	fs.readSync: r,x
	fs.readdir: r,x
	fs.readdirSync: r,x
	fs.readlink: r,x
	fs.readlinkSync: r,x
	fs.realpathSync: r,x
	fs.rmdir: r,x
	fs.rmdirSync: r,x
	fs.stat: r,x
	fs.statSync: r,x
	fs.symlink: r,x
	fs.symlinkSync: r,x
	fs.unlink: r,x
	fs.unlinkSync: r,x
	fs.utimesSync: r,x
	fs.writeFile: r,x
	fs.writeFileSync: r,x
	nodeunit.testCase: r,x
	path.dirname: r,x
	path.join: r,x
	path.normalize: r,x
	path.relative: r,x
	path.resolve: r,x
	path.sep: r
</policy>

<policy nmpPackage="lodash.flatten" count="460">
</policy>

<policy nmpPackage="end-of-stream" count="461">
	once: x
</policy>

<policy nmpPackage="babel-plugin-import" count="462">
	@babel/helper-module-imports.addDefault: r
	@babel/helper-module-imports.addSideEffect: r
	@babel/runtime/helpers/interopRequireDefault: x
	path.join: r
</policy>

<policy nmpPackage="globby" count="463">
</policy>

<policy nmpPackage="minimist" count="464">
	tape: x
</policy>

<policy nmpPackage="left-pad" count="465">
	benchmark.Suite: r
	fast-check.char: r,x
	fast-check.check: r,x
	fast-check.nat: r,x
	fast-check.property: r,x
	fast-check.string: r,x
	tape: x
</policy>

<policy nmpPackage="knox" count="466">
	crypto.createHash: r,x
	crypto.createHmac: r,x
	debug: x
	events.EventEmitter: r
	fs.createReadStream: r,x
	fs.stat: r,x
	mime.charsets: r
	mime.charsets.lookup: r,x
	mime.lookup: r,x
	once: x
	querystring.stringify: r,x
	url.parse: r,x
	xml2js.Parser: r
</policy>

<policy nmpPackage="webpack-hot-middleware" count="467">
	ansi-html: x
	ansi-html.setColors: r,x
	html-entities.AllHtmlEntities: r
	querystring.parse: r,x
	strip-ansi: x
	url.parse: r,x
</policy>

<policy nmpPackage="noble" count="468">
	async.detect: r,x
	async.series: r,x
	async.whilst: r,x
	bplist-parser.parseFile: r,x
	child_process.exec: r,x
	crypto.createCipheriv: r,x
	crypto.randomBytes: r,x
	debug: x
	events.EventEmitter: r
	events.EventEmitter.call: r,x
	os.platform: r,x
	os.release: r,x
	sinon.spy: r,x
	util.inherits: r,x
	ws.Server: r
</policy>

<policy nmpPackage="http" count="469">
</policy>

<policy nmpPackage="memory-cache" count="470">
	chai.expect: r,x
	chai.use: r,x
	gulp-exit: x
	gulp-istanbul: x
	gulp-istanbul.hookRequire: r,x
	gulp-istanbul.writeReports: r,x
	gulp-jshint: x
	gulp-jshint.reporter: r,x
	gulp-mocha: x
	gulp.src: r,x
	gulp.task: r,x
	gulp.watch: r,x
	sinon.spy: r,x
	sinon.useFakeTimers: r,x
</policy>

<policy nmpPackage="rc" count="471">
	assert.deepEqual: r,x
	assert.equal: r,x
	deep-extend.apply: r,x
	fs.readFileSync: r,x
	fs.statSync: r,x
	fs.unlinkSync: r,x
	fs.writeFileSync: r,x
	ini.parse: r,x
	ini.stringify: r,x
	minimist: x
	path.dirname: r,x
	path.join: r,x
	path.join.apply: r,x
	path.resolve: r,x
	strip-json-comments: x
</policy>

<policy nmpPackage="css-loader" count="472">
	babel-code-frame: x
	css-selector-tokenizer.parseValues: r,x
	css-selector-tokenizer.stringifyValues: r,x
	icss-utils.extractICSS: r,x
	loader-utils.getCurrentRequest: r,x
	loader-utils.getOptions: r,x
	loader-utils.getRemainingRequest: r,x
	loader-utils.interpolateName: r,x
	loader-utils.isUrlRequest: r,x
	loader-utils.parseString: r,x
	loader-utils.stringifyRequest: r,x
	loader-utils.urlToRequest: r,x
	path.relative: r,x
	postcss: x
	postcss-modules-extract-imports: x
	postcss-modules-local-by-default: x
	postcss-modules-scope: x
	postcss-value-parser: x
	postcss.plugin: r,x
</policy>

<policy nmpPackage="grunt-contrib-watch" count="473">
	async.forEachSeries: r,x
	events.EventEmitter: r
	events.EventEmitter.call: r,x
	gaze.Gaze: r
	lodash.chain: r,x
	lodash.debounce: r,x
	lodash.defaults: r,x
	lodash.defaults.apply: r,x
	lodash.includes: r,x
	lodash.without: r
	lodash.without.apply: r,x
	path.relative: r,x
	path.resolve: r,x
	tiny-lr: x
	util.inherits: r,x
</policy>

<policy nmpPackage="https" count="474">
</policy>

<policy nmpPackage="command-exists" count="475">
	child_process.exec: r,x
	child_process.execSync: r,x
	fs.access: r,x
	fs.accessSync: r,x
	fs.constants: r
	path.basename: r,x
	path.dirname: r,x
</policy>

<policy nmpPackage="gulp-uglify" count="476">
	has-gulplog: x
	lodash/fp/curry: x
	lodash/fp/defaultsDeep: x
	lodash/fp/forEach: x
	lodash/fp/isObject: x
	make-error-cause: x
	make-error-cause.BaseError: r
	make-error-cause.BaseError.prototype: r
	make-error-cause.BaseError.prototype.toString: r
	make-error-cause.BaseError.prototype.toString.call: r,x
	safe-buffer.Buffer: r
	safe-buffer.Buffer.from: r,x
	through2.obj: r,x
	vinyl-sourcemaps-apply: x
</policy>

<policy nmpPackage="vuex" count="477">
</policy>

<policy nmpPackage="rollup-plugin-node-resolve" count="478">
	path.dirname: r,x
	path.extname: r,x
	path.normalize: r,x
	path.resolve: r,x
	path.sep: r
</policy>

<policy nmpPackage="btoa" count="479">
</policy>

<policy nmpPackage="numeral" count="480">
	chai.expect: r
	load-grunt-tasks: x
</policy>

<policy nmpPackage="bootstrap-sass" count="481">
	path.join: r,x
</policy>

<policy nmpPackage="github" count="482">
</policy>

<policy nmpPackage="jwt-simple" count="484">
	crypto.createHmac: r,x
	crypto.createSign: r,x
	crypto.createVerify: r,x
</policy>

<policy nmpPackage="markdown" count="485">
	util.inspect: r,x
</policy>

<policy nmpPackage="split2" count="486">
	binary-split: x
	callback-stream.bind: r,x
	fastbench: x
	fs.createReadStream: r,x
	safe-buffer.Buffer: r
	safe-buffer.Buffer.from: r,x
	tap.test: r,x
</policy>

<policy nmpPackage="ejs-v2.6.1" count="487">
	fs.existsSync: r,x
	fs.readFileSync: r
	path.dirname: r,x
	path.extname: r,x
	path.resolve: r,x
</policy>

<policy nmpPackage="big.js" count="488">
</policy>

<policy nmpPackage="log-update" count="489">
</policy>

<policy nmpPackage="keymirror" count="490">
</policy>

<policy nmpPackage="csv-parse" count="491">
	fs.createReadStream: r,x
	stream.Transform: r
	stream.Transform.call: r,x
	string_decoder.StringDecoder: r
	util.inherits: r,x
</policy>

<policy nmpPackage="create-hash" count="492">
	cipher-base.call: r,x
	crypto.createHash: r
	hash-test-vectors.forEach: r,x
	inherits: x
	safe-buffer.Buffer: r
	safe-buffer.Buffer.from: r,x
	tape: x
</policy>

<policy nmpPackage="babel-plugin-syntax-dynamic-import" count="493">
</policy>

<policy nmpPackage="body-parser" count="495">
	bytes.parse: r,x
	content-type.parse: r,x
	debug: x
	depd: x
	http-errors: x
	iconv-lite.decode: r,x
	iconv-lite.encodingExists: r,x
	on-finished: x
	raw-body: x
	type-is: x
	type-is.hasBody: r,x
	zlib.createGunzip: r,x
	zlib.createInflate: r,x
</policy>

<policy nmpPackage="events" count="496">
	@sinonjs/commons.functionName: r,x
	@sinonjs/commons.prototypes: r
	@sinonjs/commons.prototypes.array: r
	@sinonjs/commons.prototypes.array.concat: r,x
	@sinonjs/commons.prototypes.array.every: r,x
	@sinonjs/commons.prototypes.array.filter: r,x
	@sinonjs/commons.prototypes.array.forEach: r,x
	@sinonjs/commons.prototypes.array.indexOf: r,x
	@sinonjs/commons.prototypes.array.join: r,x
	@sinonjs/commons.prototypes.array.map: r,x
	@sinonjs/commons.prototypes.array.pop: r,x
	@sinonjs/commons.prototypes.array.push: r,x
	@sinonjs/commons.prototypes.array.reduce: r,x
	@sinonjs/commons.prototypes.array.reverse: r,x
	@sinonjs/commons.prototypes.array.slice: r,x
	@sinonjs/commons.prototypes.array.some: r,x
	@sinonjs/commons.prototypes.array.sort: r,x
	@sinonjs/commons.prototypes.array.splice: r,x
	@sinonjs/commons.prototypes.array.unshift: r,x
	@sinonjs/commons.prototypes.object: r
	@sinonjs/commons.prototypes.object.hasOwnProperty: r,x
	@sinonjs/commons.prototypes.object.isPrototypeOf: r,x
	@sinonjs/commons.prototypes.object.toString: r,x
	@sinonjs/commons.prototypes.string: r
	@sinonjs/commons.prototypes.string.indexOf: r,x
	@sinonjs/commons.prototypes.string.slice: r,x
	@sinonjs/commons.valueToString: r,x
	@sinonjs/formatio.configure: r,x
	@sinonjs/samsam.deepEqual: r,x
	assert.doesNotThrow: r,x
	assert.equal: r,x
	assert.fail: r,x
	assert.notStrictEqual: r,x
	assert.ok: r,x
	assert.strictEqual: r,x
	assert.throws: r,x
	diff.diffJson: r,x
	lolex.createClock: r,x
	lolex.install: r,x
	nise.fakeServer: r
	nise.fakeServer.create: r
	nise.fakeServer.create.bind: r,x
	nise.fakeServerWithClock: r
	nise.fakeServerWithClock.create: r
	nise.fakeServerWithClock.create.bind: r,x
	nise.fakeXhr: r
	nise.fakeXhr.FakeXMLHttpRequest: r
	nise.fakeXhr.useFakeXMLHttpRequest: r,x
	nise.fakeXhr.xhr: r
	supports-color.stdout: r
	tape.onFinish: r,x
	type-detect: x
	util.inherits: r,x
</policy>

<policy nmpPackage="uglify-js" count="497">
	fs.readFileSync: r,x
</policy>

<policy nmpPackage="lodash.isfunction" count="498">
</policy>

<policy nmpPackage="brfs" count="499">
	browserify: x
	child_process.exec: r,x
	fs.createReadStream: r,x
	fs.readFile: r,x
	fs.readFileSync: r,x
	fs.readdir: r,x
	fs.readdirSync: r,x
	path.dirname: r,x
	path.join: r,x
	quote-stream: x
	resolve.sync: r,x
	static-module: x
	tap.test: r,x
	through: x
	through2: x
	vm.runInNewContext: r,x
</policy>

<policy nmpPackage="merge-stream" count="500">
</policy>

<policy nmpPackage="rc-util" count="501">
	shallowequal: x
</policy>

<policy nmpPackage="randomstring" count="502">
	array-uniq: x
	assert: x
	assert.equal: r,x
	assert.notEqual: r,x
	crypto.randomBytes: r,x
</policy>

<policy nmpPackage="html-minifier" count="503">
	he.decode: r,x
	relateurl.relate: r,x
	uglify-js.minify: r,x
</policy>

<policy nmpPackage="jszip" count="505">
	core-js/library/fn/set-immediate: x
	readable-stream.Readable: r
	readable-stream.Readable.call: r,x
</policy>

<policy nmpPackage="fs" count="506">
</policy>

<policy nmpPackage="range-parser" count="507">
</policy>

<policy nmpPackage="normalize.css" count="508">
</policy>

<policy nmpPackage="grunt-cli" count="509">
	fs.readFileSync: r,x
	path.join: r,x
</policy>

<policy nmpPackage="lodash-node" count="511">
</policy>

<policy nmpPackage="morgan" count="512">
	basic-auth: x
	debug: x
	depd: x
	on-finished: x
	on-headers: x
</policy>

<policy nmpPackage="winston" count="513">
	abstract-winston-transport: x
	assert: x
	assert.doesNotThrow: r,x
	assert.isNumber: r,x
	assert.lengthOf: r,x
	assert.ok: r,x
	assert.throws: r,x
	assume: x
	child_process.exec: r,x
	diagnostics: x
	fs.existsSync: r,x
	fs.readFileSync: r,x
	fs.statSync: r,x
	hock.createHock: r,x
	http.createServer: r,x
	logform/json: x
	path.join: r,x
	rimraf: x
	vows.describe: r,x
</policy>

<policy nmpPackage="eslint-plugin-flowtype" count="514">
	react-is.ForwardRef: r
	react-is.isElement: r,x
	react-is.isValidElementType: r,x
	react.Component: r
	react.cloneElement: r,x
	react.createContext: r,x
	react.createElement: r,x
</policy>

<policy nmpPackage="filesize" count="515">
</policy>

<policy nmpPackage="gulp-typescript" count="516">
</policy>

<policy nmpPackage="diff" count="517">
	babel-core/register: x
</policy>

<policy nmpPackage="lodash.throttle" count="518">
</policy>

<policy nmpPackage="mobx" count="519">
</policy>

<policy nmpPackage="lru-cache" count="520">
	util.inspect: r,x
</policy>

<policy nmpPackage="content-disposition" count="521">
	path.basename: r,x
</policy>

<policy nmpPackage="eslint-config-standard" count="522">
</policy>

<policy nmpPackage="escodegen" count="523">
	estraverse.Syntax: r
	estraverse.Syntax.ArrowFunctionExpression: r
	estraverse.Syntax.BlockStatement: r
	estraverse.Syntax.EmptyStatement: r
	estraverse.Syntax.ExportBatchSpecifier: r
	estraverse.Syntax.GeneratorExpression: r
	estraverse.Syntax.Identifier: r
	estraverse.Syntax.IfStatement: r
	estraverse.Syntax.ImportDefaultSpecifier: r
	estraverse.Syntax.ImportNamespaceSpecifier: r
	estraverse.Syntax.Literal: r
	estraverse.Syntax.Program: r
	estraverse.Syntax.Property: r
	estraverse.Syntax.VariableDeclaration: r
	estraverse.attachComments: r
	esutils.code: r
	esutils.code.isDecimalDigit: r,x
	esutils.code.isIdentifierPartES5: r,x
	esutils.code.isLineTerminator: r,x
	esutils.code.isWhiteSpace: r,x
	source-map.SourceNode: r
</policy>

<policy nmpPackage="animate.css" count="524">
	autoprefixer: x
	cssnano: x
	fs.readFileSync: r,x
	gulp-concat: x
	gulp-header: x
	gulp-postcss: x
	gulp-rename: x
	gulp-util.log: r,x
	gulp.dest: r,x
	gulp.series: r,x
	gulp.src: r,x
	gulp.task: r,x
</policy>

<policy nmpPackage="jsonwebtoken" count="525">
	jws.createSign: r,x
	jws.decode: r,x
	jws.sign: r,x
	jws.verify: r,x
	ms: x
</policy>

<policy nmpPackage="JSONStream" count="527">
	JSONStream.parse: r,x
	assert.equal: r,x
	child_process.spawnSync: r,x
	event-stream.connect: r,x
	event-stream.mapSync: r,x
	event-stream.readArray: r,x
	event-stream.writeArray: r,x
	fs.createReadStream: r,x
	fs.readFileSync: r,x
	fs.readdirSync: r,x
	it-is: x
	it-is.has: r,x
	it-is.style: r,x
	it-is.typeof: r,x
	net.connect: r,x
	net.createServer: r,x
	path.extname: r,x
	path.join: r,x
	request: x
	stream.Stream: r
	tape: x
	through: x
</policy>

<policy nmpPackage="webpack-sources" count="528">
	source-list-map.SourceListMap: r
	source-list-map.fromStringWithSourceMap: r,x
	source-map.SourceMapConsumer: r
	source-map.SourceMapGenerator: r
	source-map.SourceMapGenerator.fromSourceMap: r,x
	source-map.SourceNode: r
	source-map.SourceNode.fromStringWithSourceMap: r,x
</policy>

<policy nmpPackage="passport" count="531">
	http.IncomingMessage: r
	http.IncomingMessage.prototype: r
	http.IncomingMessage.prototype.isAuthenticated: w
	http.IncomingMessage.prototype.isUnauthenticated: w
	http.IncomingMessage.prototype.logIn: w,r
	http.IncomingMessage.prototype.logOut: w
	http.IncomingMessage.prototype.login: w
	http.IncomingMessage.prototype.logout: w
	http.STATUS_CODES: r
	passport-strategy.call: r,x
	pause: x
	util.inherits: r,x
</policy>

<policy nmpPackage="errorhandler" count="532">
	accepts: x
	escape-html: x
	fs.readFileSync: r,x
	path.join: r,x
	util.inspect: r,x
</policy>

<policy nmpPackage="gaze" count="533">
	events.EventEmitter: r
	events.EventEmitter.call: r,x
	fs.existsSync: r,x
	fs.lstatSync: r,x
	fs.readdir: r,x
	fs.readdirSync: r,x
	fs.unwatchFile: r,x
	fs.watch: r,x
	fs.watchFile: r,x
	globule.find: r,x
	globule.isMatch: r,x
	path.dirname: r,x
	path.join: r,x
	path.relative: r,x
	path.resolve: r,x
	path.sep: r
	path.sep.length: r
	timers.setImmediate: w,r
	util.inherits: r,x
</policy>

<policy nmpPackage="webpack-dev-middleware" count="535">
</policy>

<policy nmpPackage="needle" count="536">
	JSONStream.parse: r
	assert: x
	crypto.createHash: r,x
	debug: x
	events.EventEmitter: r
	formidable.IncomingForm: r
	fs.createReadStream: r,x
	fs.createWriteStream: r,x
	fs.existsSync: r,x
	fs.readFile: r,x
	fs.readFileSync: r,x
	fs.readdirSync: r,x
	fs.stat: r,x
	fs.statSync: r,x
	fs.unlink: r,x
	fs.unlinkSync: r,x
	fs.writeFile: r,x
	fs.writeFileSync: r,x
	http.Agent: r
	http.Agent.defaultMaxSockets: w,r
	http.createServer: r,x
	http.request: r,x
	jschardet.detect: r,x
	os.hostname: r,x
	path.basename: r,x
	q.all: r,x
	q.fcall: r,x
	q.nbind: r,x
	querystring.unescape: r,x
	sax.parser: r,x
	should: x
	should.equal: r,x
	should.exist: r,x
	should.ifError: r,x
	should.not: r
	should.not.exist: r,x
	sinon.spy: r,x
	sinon.stub: r,x
	stream.PassThrough: r
	stream.Readable: r
	stream.Transform: r
	stream.Transform.call: r,x
	url.parse: r,x
	url.resolve: r,x
	util._extend: r
	util.inherits: r,x
	util.inspect: r,x
	xml2js.parseString: r,x
	zlib.Gunzip: r
	zlib.Inflate: r
	zlib.Z_SYNC_FLUSH: r
	zlib.createDeflate: r,x
	zlib.createGzip: r,x
</policy>

<policy nmpPackage="karma-webpack" count="537">
	async.forEach: r,x
	async.times: r,x
	loader-utils.getRemainingRequest: r,x
	lodash.clone: r,x
	os.tmpdir: r,x
	path.basename: r,x
	path.dirname: r,x
	path.extname: r,x
	path.join: r,x
	path.relative: r,x
	source-map.SourceMapConsumer: r
	source-map.SourceNode: r
	source-map.SourceNode.fromStringWithSourceMap: r,x
	webpack: x
</policy>

<policy nmpPackage="findit" count="539">
	events.EventEmitter: r
	mkdirp.sync: r,x
	path.basename: r,x
	path.dirname: r,x
	path.join: r,x
	path.resolve: r,x
	tap.test: r,x
</policy>

<policy nmpPackage="es6-shim" count="541">
	chai.assert: r
	chai.config: r
	chai.config.includeStack: w
	chai.expect: r
	promises-aplus-tests.mocha: r,x
	promises-es6-tests.mocha: r,x
</policy>

<policy nmpPackage="lodash.debounce" count="542">
</policy>

<policy nmpPackage="chance" count="543">
</policy>

<policy nmpPackage="consolidate" count="544">
	bluebird.promisify: r,x
	coffee-script.compile: r,x
	fs.readFile: r,x
	fs.readFileSync: r,x
	path: w
	path.dirname: r,x
	path.extname: r,x
	path.isAbsolute: r,x
	path.join: r,x
	path.resolve: r,x
	twig.twig: r
	util._extend: r
	vm.runInNewContext: r,x
</policy>

<policy nmpPackage="babel-plugin-transform-decorators-legacy" count="545">
</policy>

<policy nmpPackage="object-path" count="546">
	chai.expect: r,x
</policy>

<policy nmpPackage="pretty-bytes" count="547">
</policy>

<policy nmpPackage="is-url" count="548">
	assert: x
	is-url: w
</policy>

<policy nmpPackage="vinyl" count="549">
	buffer.Buffer: r
	buffer.Buffer.isBuffer: r,x
	clone: x
	clone-buffer: x
	clone-stats: x
	cloneable-readable: x
	cloneable-readable.isCloneable: r,x
	path.basename: r,x
	path.dirname: r,x
	path.extname: r,x
	path.join: r,x
	path.normalize: r,x
	path.relative: r,x
	remove-trailing-separator: x
	replace-ext: x
	util.inspect: r
	util.inspect.custom: r
</policy>

<policy nmpPackage="ncp" count="550">
	assert.deepEqual: r,x
	assert.equal: r,x
	assert.ifError: r,x
	assert.notEqual: r,x
	assert.ok: r,x
	assert.strictEqual: r,x
	fs.createReadStream: r,x
	fs.createWriteStream: r,x
	fs.existsSync: r,x
	fs.lstat: r,x
	fs.lstatSync: r,x
	fs.mkdir: r,x
	fs.readFileSync: r,x
	fs.readdir: r,x
	fs.readdirSync: r,x
	fs.readlink: r,x
	fs.readlinkSync: r,x
	fs.stat: r,x
	fs.symlink: r,x
	fs.unlink: r,x
	fs.utimesSync: r,x
	path.basename: r,x
	path.dirname: r,x
	path.join: r,x
	path.resolve: r,x
	read-dir-files: x
	rimraf: x
</policy>

<policy nmpPackage="express-jwt" count="551">
	assert: x
	assert.equal: r,x
	assert.ok: r,x
	async.waterfall: r,x
	jsonwebtoken.decode: r,x
	jsonwebtoken.sign: r,x
	jsonwebtoken.verify: r,x
</policy>

<policy nmpPackage="gulp-notify" count="552">
	ansi-colors.blue: r,x
	ansi-colors.cyan: r,x
	fancy-log: w,x
	fs.createReadStream: r,x
	gulp-jshint: x
	gulp-notify: x
	gulp-plumber: x
	gulp.src: r,x
	gulp.task: r,x
	gulp.watch: r,x
	node-notifier: w
	node-notifier.Growl: r
	node-notifier.Notification: r
	node-notifier.notify: r
	node-notifier.notify.bind: r,x
	node-notifier.on: r,x
	path.join: r,x
	should: x
	should.exist: r,x
	should.not: r
	should.not.exist: r,x
	through2.obj: r,x
</policy>

<policy nmpPackage="deepmerge" count="553">
</policy>

<policy nmpPackage="eslint-config-airbnb-base" count="554">
	eslint.CLIEngine: r
</policy>

<policy nmpPackage="serve-index" count="555">
	accepts: x
	debug: x
	escape-html: x
	fs.readFile: r,x
	fs.readFileSync: r,x
	fs.readdir: r,x
	fs.stat: r,x
	http-errors: x
	mime-types.lookup: r,x
	parseurl: x
	parseurl.original: r,x
	path.extname: r,x
	path.join: r,x
	path.normalize: r,x
	path.resolve: r,x
	path.sep: r
</policy>

<policy nmpPackage="phantomjs" count="556">
	child_process.execFile: r,x
	extract-zip: x
	fs-extra.chmodSync: r,x
	fs-extra.existsSync: r,x
	fs-extra.mkdirsSync: r,x
	fs-extra.move: r
	fs-extra.readFileSync: r,x
	fs-extra.readdirSync: r,x
	fs-extra.realpathSync: r,x
	fs-extra.remove: r
	fs-extra.renameSync: r,x
	fs-extra.statSync: r,x
	fs-extra.unlinkSync: r,x
	fs-extra.writeFileSync: r,x
	fs.chmodSync: r,x
	fs.existsSync: r,x
	fs.statSync: r,x
	hasha.fromFile: r,x
	kew.defer: r,x
	kew.fcall: r,x
	kew.nfcall: r,x
	kew.resolve: r,x
	libPath.arch: r
	libPath.location: r
	libPath.platform: r
	path.dirname: r,x
	path.join: r,x
	path.relative: r,x
	path.resolve: r,x
	request: x
	request-progress: x
	system.args: r
	system.args.length: r
	url.format: r,x
	url.parse: r,x
	webpage.create: r,x
</policy>

<policy nmpPackage="urllib" count="557">
	constants.SSL_OP_NO_TLSv1_2: r
	content-type.parse: r,x
	debug: x
	default-user-agent: x
	digest-header: x
	dns.lookup: r
	ee-first: x
	events.EventEmitter: r
	events.EventEmitter.call: r,x
	http: w
	http.Agent: r
	https.Agent: r
	humanize-ms: x
	ip.isV4Format: r,x
	ip.isV6Format: r,x
	pump: x
	qs.stringify: r,x
	querystring.stringify: r,x
	statuses.redirect: r
	url.parse: r,x
	url.resolve: r,x
	util.format: r,x
	util.inherits: r,x
	utility.assign: r,x
	zlib.unzip: r,x
</policy>

<policy nmpPackage="plugin-error" count="558">
	ansi-colors.cyan: r,x
	ansi-colors.red: r,x
	arr-diff: x
	arr-union: x
	extend-shallow: x
	util.inherits: r,x
</policy>

<policy nmpPackage="dotenv-expand" count="561">
</policy>

<policy nmpPackage="babel-types" count="562">
</policy>

<policy nmpPackage="express-session" count="563">
	cookie-signature.sign: r,x
	cookie-signature.unsign: r,x
	cookie.parse: r,x
	cookie.serialize: r,x
	crc.crc32: r,x
	debug: x
	depd: x
	events.EventEmitter: r
	events.EventEmitter.call: r,x
	on-headers: x
	parseurl.original: r,x
	uid-safe.sync: r,x
	util.inherits: r,x
	utils-merge: x
</policy>

<policy nmpPackage="history" count="564">
</policy>

<policy nmpPackage="joi" count="565">
</policy>

<policy nmpPackage="url-loader" count="566">
	loader-utils.getOptions: r
</policy>

<policy nmpPackage="vue" count="567">
</policy>

<policy nmpPackage="url" count="568">
	assert.deepEqual: r,x
	assert.equal: r,x
	assert.throws: r,x
	punycode.toASCII: r,x
	querystring.parse: r,x
	querystring.stringify: r,x
</policy>

<policy nmpPackage="micromatch" count="569">
	braces: x
	extend-shallow: x
	extglob.compilers: r
	extglob.parsers: r
	nanomatch.compilers: r
	nanomatch.parsers: r
	path.basename: r,x
	path.sep: r
	regex-not.create: r,x
	snapdragon.prototype: r
	snapdragon.prototype.parse: r
	snapdragon.prototype.parse.apply: r,x
	to-regex: x
	util.inspect: r,x
</policy>

<policy nmpPackage="font-awesome" count="570">
</policy>

<policy nmpPackage="broccoli-merge-trees" count="571">
	broccoli-plugin.call: r,x
	broccoli-plugin.prototype: r
</policy>

<policy nmpPackage="dateformat" count="572">
</policy>

<policy nmpPackage="redux" count="574">
</policy>

<policy nmpPackage="superagent" count="575">
	component-emitter: x
	cookiejar.CookieAccessInfo: r
	cookiejar.CookieJar: r
	debug: x
	string_decoder.StringDecoder: r
	url.format: r
	url.parse: r
	url.resolve: r
</policy>

<policy nmpPackage="babel-plugin-transform-regenerator" count="576">
</policy>

<policy nmpPackage="gulp-postcss" count="577">
	fancy-log.info: r,x
	path.dirname: r,x
	path.isAbsolute: r,x
	path.join: r,x
	postcss: x
	stream.Transform: r
	vinyl-sourcemaps-apply: x
</policy>

<policy nmpPackage="babel-plugin-transform-es2015-parameters" count="579">
	babel-traverse.visitors: r
	babel-traverse.visitors.merge: r,x
</policy>

<policy nmpPackage="http-server" count="580">
	corser.create: r,x
	ecstatic: x
	fs.lstatSync: r,x
	http-proxy.createProxyServer: r,x
	union.createServer: r,x
</policy>

<policy nmpPackage="once" count="581">
	wrappy: x
</policy>

<policy nmpPackage="csv" count="582">
</policy>

<policy nmpPackage="htmlparser2" count="583">
	buffer.Buffer: r
	events.EventEmitter: r
	inherits: x
	readable-stream.Writable: r
	stream.Writable: r
	string_decoder.StringDecoder: r
</policy>

<policy nmpPackage="is-plain-object" count="584">
	isobject: x
</policy>

<policy nmpPackage="fluent-ffmpeg" count="586">
	async.each: r,x
	async.waterfall: r,x
	child_process.exec: r
	child_process.spawn: r,x
	events.EventEmitter: r
	events.EventEmitter.call: r,x
	fs.exists: r,x
	fs.mkdir: r,x
	jsdoc/fs.copyFileSync: r,x
	jsdoc/fs.ls: r,x
	jsdoc/fs.mkPath: r,x
	jsdoc/fs.readFileSync: r,x
	jsdoc/fs.toDir: r,x
	jsdoc/fs.writeFileSync: r,x
	jsdoc/path.basename: r,x
	jsdoc/path.commonPrefix: r,x
	jsdoc/path.dirname: r,x
	jsdoc/path.getResourcePath: r,x
	jsdoc/path.join: r,x
	jsdoc/src/filter.Filter: r
	jsdoc/src/scanner.Scanner: r
	jsdoc/template.Template: r
	jsdoc/util/logger.error: r,x
	jsdoc/util/templateHelper.addEventListeners: r,x
	jsdoc/util/templateHelper.createLink: r,x
	jsdoc/util/templateHelper.find: r,x
	jsdoc/util/templateHelper.getAncestorLinks: r,x
	jsdoc/util/templateHelper.getAttribs: r,x
	jsdoc/util/templateHelper.getMembers: r,x
	jsdoc/util/templateHelper.getSignatureParams: r,x
	jsdoc/util/templateHelper.getSignatureReturns: r,x
	jsdoc/util/templateHelper.getSignatureTypes: r,x
	jsdoc/util/templateHelper.getUniqueFilename: r,x
	jsdoc/util/templateHelper.htmlsafe: r,x
	jsdoc/util/templateHelper.linkto: r,x
	jsdoc/util/templateHelper.longnameToUrl: r
	jsdoc/util/templateHelper.prune: r,x
	jsdoc/util/templateHelper.registerLink: r,x
	jsdoc/util/templateHelper.resolveAuthorLinks: r
	jsdoc/util/templateHelper.resolveLinks: r,x
	jsdoc/util/templateHelper.scopeToPunc: r
	jsdoc/util/templateHelper.setTutorials: r,x
	jsdoc/util/templateHelper.toTutorial: r,x
	jsdoc/util/templateHelper.tutorialToUrl: r,x
	modulePath.load: r,x
	os.platform: r,x
	path.basename: r,x
	path.dirname: r,x
	path.extname: r,x
	path.join: r,x
	stream.PassThrough: r
	taffydb.taffy: r,x
	util.inherits: r,x
	which: x
</policy>

<policy nmpPackage="strip-json-comments" count="587">
</policy>

<policy nmpPackage="vue-loader" count="588">
</policy>

<policy nmpPackage="command-line-usage" count="589">
</policy>

<policy nmpPackage="optimist" count="590">
	child_process.spawn: r,x
	hashish.merge: r,x
	minimist: x
	path.dirname: r,x
	path.normalize: r,x
	path.relative: r,x
	tap.test: r,x
	wordwrap: x
</policy>

<policy nmpPackage="gulp-if" count="591">
	gulp-match: x
	ternary-stream: x
	through2.obj: r,x
</policy>

<policy nmpPackage="immutable" count="592">
</policy>

<policy nmpPackage="lodash.template" count="593">
</policy>

<policy nmpPackage="decamelize" count="594">
</policy>

<policy nmpPackage="child_process" count="595">
</policy>

<policy nmpPackage="minimatch" count="597">
	brace-expansion: x
</policy>

<policy nmpPackage="temp" count="598">
	assert.equal: r,x
	assert.ok: r,x
	child_process.exec: r,x
	constants.O_CREAT: r
	constants.O_EXCL: r
	constants.O_RDWR: r
	constants.O_TRUNC: r
	fs.WriteStream: r
	fs.close: r,x
	fs.closeSync: r,x
	fs.createWriteStream: r,x
	fs.exists: r
	fs.mkdir: r,x
	fs.mkdirSync: r,x
	fs.open: r,x
	fs.openSync: r,x
	fs.readFile: r,x
	fs.statSync: r,x
	fs.write: r,x
	fs.writeFile: r,x
	fs.writeFileSync: r,x
	fs.writeSync: r,x
	os-tmpdir: x
	path.basename: r,x
	path.dirname: r,x
	path.exists: r
	path.join: r,x
	path.resolve: r,x
	rimraf: x
	rimraf.sync: r,x
	temp.mkdirSync: r,x
	temp.track: r,x
	util.print: r,x
	util.puts: r,x
</policy>

<policy nmpPackage="xmlbuilder" count="599">
</policy>

<policy nmpPackage="postcss-import" count="600">
</policy>

<policy nmpPackage="vue-template-compiler" count="601">
	vue.version: r
</policy>

<policy nmpPackage="eventemitter2" count="602">
</policy>

<policy nmpPackage="readable-stream" count="603">
	buffer.Buffer: r
	buffer.Buffer.alloc: r,x
	buffer.Buffer.allocUnsafe: r,x
	buffer.Buffer.from: r,x
	buffer.Buffer.isBuffer: r,x
	buffer.Buffer.prototype: r
	buffer.Buffer.prototype.copy: r
	buffer.Buffer.prototype.copy.call: r,x
	events.EventEmitter: r
	inherits: x
	stream.Duplex: r
	stream.PassThrough: r
	stream.Readable: r
	stream.Transform: r
	stream.Writable: r
	string_decoder/.StringDecoder: r
	util.debuglog: r,x
	util.inspect: r,x
</policy>

<policy nmpPackage="optimize-css-assets-webpack-plugin" count="604">
</policy>

<policy nmpPackage="gh-pages" count="605">
</policy>

<policy nmpPackage="uglify-es" count="606">
	fs.readFileSync: r,x
</policy>

<policy nmpPackage="decompress" count="607">
</policy>

<policy nmpPackage="phantom" count="608">
	child_process.spawn: r
</policy>

<policy nmpPackage="isomorphic-fetch" count="610">
	chai.expect: r,x
	es6-promise.polyfill: r,x
	nock: x
	node-fetch.Headers: r
	node-fetch.Request: r
	node-fetch.Response: r
	node-fetch.call: r,x
</policy>

<policy nmpPackage="validator" count="611">
</policy>

<policy nmpPackage="less-loader" count="612">
	clone: x
	less.FileManager: r
	less.version: r
	loader-utils.getOptions: r,x
	loader-utils.urlToRequest: r,x
	os.EOL: r
	pify: x
</policy>

<policy nmpPackage="level" count="613">
	level-packager: x
	level-packager/test: x
</policy>

<policy nmpPackage="jsonfile" count="614">
</policy>

<policy nmpPackage="methods" count="615">
	http.METHODS: r
	http.METHODS.map: r,x
</policy>

<policy nmpPackage="eslint-config-airbnb" count="616">
	eslint.CLIEngine: r
</policy>

<policy nmpPackage="multimatch" count="617">
	array-union: w
	arrify: x
	minimatch.match: r,x
</policy>

<policy nmpPackage="hyperquest" count="618">
	buffer-from: x
	duplexer2: x
	http.createServer: r,x
	request: x
	tape: x
	through2: x
	url.parse: r,x
</policy>

<policy nmpPackage="koa-bodyparser" count="619">
	co-body.form: r,x
	co-body.json: r,x
	co-body.text: r,x
	copy-to: x
</policy>

<policy nmpPackage="unist-util-visit" count="620">
	unist-util-visit-parents: x
	unist-util-visit-parents.CONTINUE: r
	unist-util-visit-parents.EXIT: r
	unist-util-visit-parents.SKIP: r
</policy>

<policy nmpPackage="multiparty" count="621">
	fd-slicer.createFromFd: r,x
	fs.open: r,x
	fs.unlink: r,x
	http-errors: x
	os.tmpdir: r,x
	path.extname: r,x
	path.join: r,x
	safe-buffer.Buffer: r
	safe-buffer.Buffer.alloc: r,x
	stream.PassThrough: r
	stream.Writable: r
	stream.Writable.call: r,x
	string_decoder.StringDecoder: r
	uid-safe.sync: r,x
	util.inherits: r,x
</policy>

<policy nmpPackage="fstream" count="623">
	assert.ok: r,x
	fs.lstatSync: r,x
	fs.readdirSync: r,x
	fs.readlinkSync: r,x
	graceful-fs.createReadStream: r,x
	graceful-fs.createWriteStream: r,x
	graceful-fs.readdir: r,x
	graceful-fs.readlink: r,x
	graceful-fs.stat: r,x
	graceful-fs.utimes: r
	inherits: x
	mkdirp: x
	path.basename: r,x
	path.dirname: r,x
	path.join: r,x
	path.resolve: r,x
	rimraf: x
	stream.Stream: r
	stream.Stream.call: r,x
	stream.Stream.prototype: r
	stream.Stream.prototype.on: r
	stream.Stream.prototype.on.call: r,x
	stream.Stream.prototype.pipe: r
	stream.Stream.prototype.pipe.apply: r,x
	tap.test: r,x
</policy>

<policy nmpPackage="throttle-debounce" count="624">
</policy>

<policy nmpPackage="react-icons" count="625">
	react.createContext: r,x
	react.createElement: r,x
</policy>

<policy nmpPackage="dotenv" count="626">
</policy>

<policy nmpPackage="sha1" count="627">
	assert.equal: r,x
	assert.notEqual: r,x
	charenc.bin: r
	charenc.bin.bytesToString: r,x
	charenc.utf8: r
	charenc.utf8.stringToBytes: r,x
	crypt.bytesToHex: r,x
	crypt.bytesToWords: r,x
	crypt.wordsToBytes: r,x
</policy>

<policy nmpPackage="html-entities" count="628">
</policy>

<policy nmpPackage="hapi" count="629">
</policy>

<policy nmpPackage="chokidar" count="630">
	anymatch: x
	async-each: x
	braces.expand: r,x
	events.EventEmitter: r
	events.EventEmitter.call: r,x
	fs.close: r,x
	fs.open: r,x
	fs.readdir: r,x
	fs.realpath: r,x
	fs.stat: r,x
	fs.unwatchFile: r,x
	fs.watch: r,x
	fs.watchFile: r,x
	fsevents.getInfo: r,x
	glob-parent: x
	inherits: x
	is-binary-path: x
	is-glob: x
	normalize-path: x
	path-is-absolute: x
	path.basename: r,x
	path.dirname: r,x
	path.extname: r,x
	path.join: r,x
	path.relative: r,x
	path.resolve: r,x
	path.sep: r
	readdirp: x
	upath.normalize: r,x
</policy>

<policy nmpPackage="react-native-vector-icons" count="631">
	@babel/runtime/helpers/interopRequireDefault: x
	@babel/runtime/helpers/interopRequireWildcard: x
	fs.readFileSync: r,x
	lodash.fromPairs: r,x
	lodash.template: r,x
	react-native.PixelRatio: r
	react-native.PixelRatio.get: r,x
	react-native.Platform: r
	react-native.Platform.OS: r
	react-native.processColor: r
</policy>

<policy nmpPackage="request-promise" count="632">
	bluebird.getNewLibraryCopy: r,x
	os.EOL: r
	request-promise-core/configure/request2: x
	stealthy-require: x
</policy>

<policy nmpPackage="machine" count="633">
	@sailshq/lodash.all: r,x
	@sailshq/lodash.any: r,x
	@sailshq/lodash.bind: r,x
	@sailshq/lodash.clone: r,x
	@sailshq/lodash.cloneDeep: r,x
	@sailshq/lodash.contains: r,x
	@sailshq/lodash.difference: r,x
	@sailshq/lodash.each: r,x
	@sailshq/lodash.extend: r,x
	@sailshq/lodash.intersection: r,x
	@sailshq/lodash.isArray: r,x
	@sailshq/lodash.isBoolean: r,x
	@sailshq/lodash.isEqual: r,x
	@sailshq/lodash.isError: r,x
	@sailshq/lodash.isFunction: r,x
	@sailshq/lodash.isNull: r,x
	@sailshq/lodash.isNumber: r,x
	@sailshq/lodash.isObject: r,x
	@sailshq/lodash.isString: r,x
	@sailshq/lodash.isUndefined: r,x
	@sailshq/lodash.kebabCase: r,x
	@sailshq/lodash.keys: r,x
	@sailshq/lodash.map: r,x
	@sailshq/lodash.pick: r,x
	@sailshq/lodash.pluck: r,x
	@sailshq/lodash.reduce: r,x
	@sailshq/lodash.reject: r,x
	@sailshq/lodash.repeat: r,x
	anchor: x
	assert: x
	assert.deepEqual: r,x
	assert.equal: r,x
	assert.strictEqual: r,x
	assert.throws: r,x
	benchmark.Suite: r
	flaverr: x
	flaverr.getBareTrace: r,x
	flaverr.omen: r,x
	flaverr.parseError: r,x
	flaverr.taste: r,x
	flaverr.unwrap: r,x
	parley: x
	path.resolve: r,x
	rttc.coerce: r,x
	rttc.getDisplayTypeLabel: r,x
	rttc.getInvalidityMessage: r,x
	rttc.getNounPhrase: r,x
	rttc.getRdt: r,x
	rttc.infer: r,x
	rttc.inferDisplayType: r,x
	rttc.validate: r,x
	rttc.validateExemplarStrict: r,x
	rttc.validateStrict: r,x
	stream.Readable: r,x
	test-machinepack-mocha.testMachineWithMocha: r,x
	util.inspect: r,x
</policy>

<policy nmpPackage="archy" count="634">
	tape: x
</policy>

<policy nmpPackage="pg" count="635">
	assert: x
	dns.lookup: r,x
	events.EventEmitter: r
	events.EventEmitter.call: r,x
	net.Socket: r
	pg-connection-string.parse: r,x
	pg-native.version: r
	pg-types.getTypeParser: r,x
	pg-types.setTypeParser: r,x
	pgpass: x
	semver.gte: r,x
	tls.checkServerIdentity: r
	tls.connect: r,x
	util.inherits: r,x
	util.inspect: r,x
</policy>

<policy nmpPackage="marked" count="636">
</policy>

<policy nmpPackage="imagemin" count="637">
</policy>

<policy nmpPackage="require-all" count="638">
	fs.readdirSync: r,x
	fs.statSync: r,x
</policy>

<policy nmpPackage="gulp-filter" count="639">
	chartjs-color: x
</policy>

<policy nmpPackage="archiver" count="640">
	archiver-utils.collectStream: r,x
	archiver-utils.dateify: r,x
	archiver-utils.defaults: r,x
	archiver-utils.isStream: r,x
	archiver-utils.lazyReadStream: r,x
	archiver-utils.normalizeInputSource: r,x
	archiver-utils.sanitizePath: r,x
	archiver-utils.trailingSlashIt: r,x
	async.queue: r,x
	buffer-crc32.unsigned: r,x
	fs.Stats: r
	fs.lstat: r,x
	fs.readlinkSync: r,x
	glob: x
	path.dirname: r,x
	path.relative: r,x
	path.resolve: r,x
	readable-stream.Transform: r
	readable-stream.Transform.call: r,x
	tar-stream.pack: r,x
	util.inherits: r,x
	zlib.createGzip: r,x
</policy>

<policy nmpPackage="mobx-react" count="641">
	mobx.$mobx: r
	mobx.Reaction: r
	mobx._allowStateChanges: r,x
	mobx.configure: r,x
	mobx.createAtom: r,x
	mobx.getDebugName: r
	mobx.isObservableArray: r
	mobx.isObservableMap: r
	mobx.isObservableObject: r
	mobx.spy: r
	mobx.untracked: r,x
	react-native.unstable_batchedUpdates: r
	react.Children: r
	react.Children.only: r,x
	react.Component: r
	react.Component.isPrototypeOf: r,x
	react.Component.prototype: r
	react.Component.prototype.forceUpdate: r
	react.Component.prototype.forceUpdate.call: r,x
	react.PureComponent: r
	react.createElement: r,x
</policy>

<policy nmpPackage="serve-static" count="642">
	encodeurl: x
	escape-html: x
	parseurl: x
	parseurl.original: r,x
	path.resolve: r,x
	send: x
	send.mime: r
	url.format: r,x
</policy>

<policy nmpPackage="falafel" count="643">
	acorn.parse: w,r,x
	foreach: x
	glob: x
	isarray: x
	object-keys: x
	path.resolve: r,x
	tape: x
	vm.runInNewContext: r,x
</policy>

<policy nmpPackage="mini-css-extract-plugin" count="645">
</policy>

<policy nmpPackage="split" count="646">
	event-stream.map: r,x
	event-stream.pipe: r,x
	fs.createReadStream: r,x
	fs.readFileSync: r,x
	it-is.style: r,x
	path.join: r,x
	stream-spec: x
	stream.Readable: r
	stream.Stream: r
	string_decoder.StringDecoder: r
	through: x
	util.inspect: r,x
</policy>

<policy nmpPackage="babel-preset-es2015" count="647">
</policy>

<policy nmpPackage="oauth" count="648">
	assert.equal: r,x
	assert.isNotNull: r,x
	assert.isNull: r,x
	assert.isObject: r,x
	assert.isTrue: r,x
	assert.isUndefined: r,x
	assert.notEqual: r,x
	assert.ok: r,x
	crypto.Hmac: r
	crypto.createHmac: r,x
	crypto.createSign: r,x
	crypto.createVerify: r,x
	events.EventEmitter: r
	events.EventEmitter.prototype: r
	express.bodyParser: r,x
	express.cookieParser: r,x
	express.createServer: r,x
	express.logger: r,x
	express.session: r,x
	http.createServer: r,x
	https: w
	oauth.OAuth: r
	querystring.escape: r,x
	querystring.parse: r,x
	querystring.stringify: r,x
	url.parse: r,x
	util.inspect: r,x
	util.puts: r,x
	vows.describe: r,x
</policy>

<policy nmpPackage="portfinder" count="650">
	async.eachSeries: r,x
	async.timesSeries: r,x
	debug: x
	fs.stat: r,x
	mkdirp.mkdirp: r,x
	net.createServer: r,x
	os.networkInterfaces: r,x
	path.basename: r,x
	path.dirname: r,x
	path.join: r,x
</policy>

<policy nmpPackage="mime-types" count="651">
	path.extname: r,x
</policy>

<policy nmpPackage="hubot" count="652">
	chai.expect: r
	events.EventEmitter: r
	key: x
	path.resolve: r
	path.use: r,x
	pkg: x
	util.inherits: r
	util.inspect: r
</policy>

<policy nmpPackage="base64-js" count="653">
	tape: x
</policy>

<policy nmpPackage="faker" count="654">
</policy>

<policy nmpPackage="mime" count="656">
	assert.deepEqual: r,x
	assert.doesNotThrow: r,x
	assert.equal: r,x
	assert.strictEqual: r,x
	assert.throws: r,x
	chalk.blue: r,x
	chalk.green: r,x
	chalk.red: r,x
</policy>

<policy nmpPackage="express" count="657">
	accepts: x
	array-flatten: x
	body-parser.json: r
	body-parser.urlencoded: r
	content-disposition: x
	content-type.format: r,x
	content-type.parse: r,x
	cookie-signature.sign: r,x
	cookie.serialize: r,x
	debug: x
	depd: x
	encodeurl: x
	escape-html: x
	etag: x
	events.EventEmitter: r
	events.EventEmitter.prototype: r
	finalhandler: x
	fresh: x
	fs.statSync: r,x
	http.IncomingMessage: r
	http.IncomingMessage.prototype: r
	http.ServerResponse: r
	http.ServerResponse.prototype: r
	http.createServer: r,x
	merge-descriptors: x
	methods.concat: r,x
	methods.forEach: r,x
	methods.length: r
	mod.__express: r
	net.isIP: r,x
	on-finished: x
	parseurl: x
	path-to-regexp: x
	path.basename: r,x
	path.dirname: r,x
	path.extname: r,x
	path.join: r,x
	path.resolve: r,x
	proxy-addr: x
	proxy-addr.all: r,x
	proxy-addr.compile: r,x
	qs.parse: w,r,x
	querystring.parse: r
	range-parser: x
	safe-buffer.Buffer: r
	safe-buffer.Buffer.byteLength: r,x
	safe-buffer.Buffer.from: r,x
	safe-buffer.Buffer.isBuffer: r,x
	send: x
	send.mime: r
	send.mime.charsets: r
	send.mime.charsets.lookup: r,x
	send.mime.lookup: r,x
	setprototypeof: x
	type-is: x
	utils-merge: x
	vary: x
</policy>

<policy nmpPackage="immutability-helper" count="658">
	expect: x
	invariant: x
</policy>

<policy nmpPackage="yamljs" count="659">
	argparse.ArgumentParser: r
	fs.readFile: r,x
	fs.readFileSync: r,x
</policy>

<policy nmpPackage="concat-stream" count="660">
	buffer-from: x
	inherits: x
	readable-stream.Writable: r
	readable-stream.Writable.call: r,x
	typedarray.Uint8Array: r
</policy>

<policy nmpPackage="babel-preset-stage-3" count="662">
</policy>

<policy nmpPackage="pretty-error" count="663">
	path.basename: r,x
	path.dirname: r,x
</policy>

<policy nmpPackage="jsonschema" count="664">
	url.parse: r,x
	url.resolve: r,x
</policy>

<policy nmpPackage="uglifyjs-webpack-plugin" count="665">
	source-map.SourceMapConsumer: r
	webpack-sources.ConcatSource: r
	webpack-sources.RawSource: r
	webpack-sources.SourceMapSource: r
</policy>

<policy nmpPackage="gulp-clean-css" count="666">
</policy>

<policy nmpPackage="sax" count="668">
	stream.Stream: w,r
	string_decoder.StringDecoder: r
</policy>

<policy nmpPackage="sw-precache-webpack-plugin" count="669">
	util.format: r
</policy>

<policy nmpPackage="read" count="670">
	readline.createInterface: r,x
</policy>

<policy nmpPackage="form-data" count="671">
	asynckit.parallel: r,x
	combined-stream.call: r,x
	combined-stream.prototype: r
	combined-stream.prototype.append: r
	combined-stream.prototype.append.bind: r,x
	fs.stat: r,x
	http.request: r,x
	https.request: r,x
	mime-types.lookup: r,x
	path.basename: r,x
	path.normalize: r,x
	url.parse: r,x
	util.inherits: r,x
	util.isArray: r,x
</policy>

<policy nmpPackage="gulp-conflict" count="672">
	diff.diffLines: r,x
	fs.readFile: r,x
	fs.readFileSync: r,x
	fs.stat: r,x
	gulp-util.PluginError: r
	gulp-util.colors: r
	gulp-util.colors.bgGreen: r,x
	gulp-util.colors.bgRed: r,x
	gulp-util.colors.cyan: r,x
	gulp-util.colors.magenta: r,x
	gulp-util.colors.red: r,x
	gulp-util.log: r
	gulp-util.log.bind: r,x
	inquirer.prompt: r,x
	path.resolve: r,x
	through2.obj: r,x
</policy>

<policy nmpPackage="command-line-args" count="673">
</policy>

<policy nmpPackage="ora" count="674">
</policy>

<policy nmpPackage="react-router-dom" count="675">
	history.createBrowserHistory: r
	history.createHashHistory: r
	history.createLocation: r
</policy>

<policy nmpPackage="ini" count="676">
</policy>

<policy nmpPackage="twit" count="677">
	assert: x
	assert.equal: r,x
	assert.notEqual: r,x
	assert.ok: r,x
	assert.strictEqual: r,x
	assert.throws: r,x
	async.parallel: r,x
	async.series: r,x
	events.EventEmitter: r
	events.EventEmitter.call: r,x
	fs.createReadStream: r,x
	fs.readFileSync: r,x
	fs.statSync: r,x
	mime.lookup: r,x
	path.join: r,x
	querystring.stringify: r,x
	request.post: w,r,x
	rewire: x
	sinon.collection: r
	sinon.collection.restore: r,x
	sinon.collection.stub: r,x
	sinon.stub: r,x
	stream.Readable: r
	stream.Readable.call: r,x
	util.format: r,x
	util.inherits: r,x
	util.inspect: r,x
	zlib.gzipSync: r,x
</policy>

<policy nmpPackage="lodash.isempty" count="678">
</policy>

<policy nmpPackage="extend-shallow" count="679">
	assign-symbols: x
	is-extendable: x
</policy>

<policy nmpPackage="tmp" count="681">
</policy>

<policy nmpPackage="md5" count="682">
	assert.equal: r,x
	assert.notEqual: r,x
	assert.throws: r,x
	charenc.bin: r
	charenc.bin.bytesToString: r,x
	charenc.bin.stringToBytes: r,x
	charenc.utf8: r
	charenc.utf8.stringToBytes: r,x
	crypt.bytesToHex: r,x
	crypt.bytesToWords: r,x
	crypt.endian: r,x
	crypt.wordsToBytes: r,x
	is-buffer: x
</policy>

<policy nmpPackage="eslint-plugin-prettier" count="683">
</policy>

<policy nmpPackage="traverse" count="684">
	events.EventEmitter: r
	tape: x
	testling: x
	traverse: x
	util.inspect: r,x
</policy>

<policy nmpPackage="pinkie-promise" count="685">
</policy>

<policy nmpPackage="del" count="686">
</policy>

<policy nmpPackage="markdown-it" count="687">
	mdurl.decode: r,x
	mdurl.encode: r,x
	mdurl.format: r,x
	mdurl.parse: r,x
	punycode.toASCII: r,x
	punycode.toUnicode: r,x
</policy>

<policy nmpPackage="fbjs" count="688">
	object-assign: x
	promise/setimmediate/es6-extensions.prototype: r
</policy>

<policy nmpPackage="tiny-lr" count="689">
	debug: x
	events.EventEmitter: r
	express: x
	faye-websocket.Client: r
	http.createServer: r,x
	supertest: x
	url.parse: r
</policy>

<policy nmpPackage="columnify" count="690">
	strip-ansi: x
	wcwidth: x
</policy>

<policy nmpPackage="run-sequence" count="691">
	chalk.red: r,x
	fancy-log: x
</policy>

<policy nmpPackage="rollup-plugin-babel" count="692">
	@babel/core.DEFAULT_EXTENSIONS: r
	@babel/core.buildExternalHelpers: r,x
	@babel/core.loadPartialConfig: r,x
	@babel/core.transform: r,x
	@babel/helper-module-imports.addNamed: r,x
	path.dirname: r,x
	path.join: r,x
	rollup-pluginutils.createFilter: r,x
</policy>

<policy nmpPackage="angular" count="693">
</policy>

<policy nmpPackage="js-base64" count="694">
</policy>

<policy nmpPackage="ua-parser-js" count="695">
	assert.deepEqual: r,x
	assert.equal: r,x
	requirejs: x
	requirejs.config: r,x
</policy>

<policy nmpPackage="postcss-cssnext" count="696">
	autoprefixer: x
	caniuse-api.isSupported: r
	pixrem: x
	pleeease-filters: x
	postcss-apply: x
	postcss-attribute-case-insensitive: x
	postcss-calc: x
	postcss-color-function: x
	postcss-color-gray: x
	postcss-color-hex-alpha: x
	postcss-color-hsl: x
	postcss-color-hwb: x
	postcss-color-rebeccapurple: x
	postcss-color-rgb: x
	postcss-color-rgba-fallback: x
	postcss-custom-media: x
	postcss-custom-properties: x
	postcss-custom-selectors: x
	postcss-font-family-system-ui: x
	postcss-font-variant: x
	postcss-image-set-polyfill: x
	postcss-initial: x
	postcss-media-minmax: x
	postcss-nesting: x
	postcss-pseudo-class-any-link: x
	postcss-pseudoelements: x
	postcss-replace-overflow-wrap: x
	postcss-selector-matches: x
	postcss-selector-not: x
</policy>

<policy nmpPackage="json-loader" count="697">
</policy>

<policy nmpPackage="source-map-support" count="698">
	buffer-from: x
	fs: w
	fs.existsSync: r
	fs.readFileSync: r
	module.prototype: r
	module.prototype._compile: w,r
	module.prototype._compile.__sourceMapSupport: w,r
	path.dirname: r,x
	path.resolve: r,x
	source-map.SourceMapConsumer: r
</policy>

<policy nmpPackage="deep-assign" count="699">
	is-obj: x
</policy>

<policy nmpPackage="update-notifier" count="700">
	child_process.spawn: r
	import-lazy: x
	util.format: r
</policy>

<policy nmpPackage="execa" count="701">
</policy>

<policy nmpPackage="gulp-rename" count="702">
	path.basename: r,x
	path.dirname: r,x
	path.extname: r,x
	path.join: r,x
	stream.Transform: r
</policy>

<policy nmpPackage="tslint-react" count="703">
	tslint.AbstractWalker: r
	tslint.Replacement: r
	tslint.Replacement.appendText: r,x
	tslint.Replacement.replaceFromTo: r,x
	tslint.Rules: r
	tslint.Rules.AbstractRule: r
	tslint.Utils: r
	tslint.Utils.dedent: r,x
	tsutils.getNextToken: r,x
	tsutils.isArrayLiteralExpression: r,x
	tsutils.isArrowFunction: r,x
	tsutils.isBlock: r,x
	tsutils.isCallExpression: r,x
	tsutils.isFunctionExpression: r,x
	tsutils.isIdentifier: r,x
	tsutils.isJsxAttribute: r,x
	tsutils.isJsxElement: r,x
	tsutils.isJsxExpression: r,x
	tsutils.isJsxFragment: r,x
	tsutils.isJsxOpeningElement: r,x
	tsutils.isJsxSelfClosingElement: r,x
	tsutils.isJsxSpreadAttribute: r,x
	tsutils.isJsxText: r,x
	tsutils.isObjectLiteralExpression: r,x
	tsutils.isParenthesizedExpression: r,x
	tsutils.isPropertyAccessExpression: r,x
	tsutils.isReturnStatement: r,x
	tsutils.isStringLiteral: r,x
	tsutils.isTemplateExpression: r,x
	tsutils.isTextualLiteral: r,x
	typescript.LanguageVariant: r
	typescript.LanguageVariant.Standard: r
	typescript.ScriptTarget: r
	typescript.ScriptTarget.ES5: r
	typescript.SyntaxKind: r
	typescript.SyntaxKind.ArrowFunction: r
	typescript.SyntaxKind.CloseParenToken: r
	typescript.SyntaxKind.FunctionExpression: r
	typescript.SyntaxKind.JsxExpression: r
	typescript.SyntaxKind.JsxText: r
	typescript.SyntaxKind.OpenParenToken: r
	typescript.SyntaxKind.ParenthesizedExpression: r
	typescript.SyntaxKind.StringLiteral: r
	typescript.SyntaxKind.TrueKeyword: r
	typescript.createScanner: r,x
	typescript.forEachChild: r,x
	typescript.getLeadingCommentRanges: r,x
	typescript.getTrailingCommentRanges: r,x
</policy>

<policy nmpPackage="he" count="704">
</policy>

<policy nmpPackage="recast" count="705">
	acorn.parse: r,x
	assert.deepEqual: r,x
	assert.notStrictEqual: r,x
	assert.ok: r,x
	assert.strictEqual: r,x
	esprima.parse: r,x
	esprima.tokenize: r,x
	fs.readFile: r,x
	os.EOL: r
	private.makeUniqueKey: r,x
	source-map.SourceMapConsumer: r
	source-map.SourceMapGenerator: r
</policy>

<policy nmpPackage="babel-plugin-external-helpers" count="706">
</policy>

<policy nmpPackage="stack-trace" count="708">
</policy>

<policy nmpPackage="connect-mongo" count="711">
</policy>

<policy nmpPackage="mkdirp" count="712">
	fs.exists: r
	fs.stat: r,x
	fs.writeFileSync: r,x
	mkdirp: x
	mock-fs.fs: r,x
	path.dirname: r,x
	path.exists: r
	path.resolve: r,x
	tap.test: r,x
</policy>

<policy nmpPackage="wiredep" count="713">
</policy>

<policy nmpPackage="async-validator" count="714">
</policy>

<policy nmpPackage="formidable" count="715">
	buffer.Buffer: r
	buffer.Buffer.concat: r,x
	crypto.createHash: r,x
	crypto.randomBytes: r,x
	events.EventEmitter: r
	events.EventEmitter.call: r,x
	fs.WriteStream: r
	fs.unlink: r
	os.tmpDir: r,x
	os.tmpdir: r,x
	path.extname: r,x
	path.join: r,x
	querystring.parse: r,x
	stream.Stream: r
	string_decoder.StringDecoder: r
	util.inherits: r,x
</policy>

<policy nmpPackage="hbs" count="717">
	express: x
	express.static: r,x
	fs.readFile: r,x
	fs.readFileSync: r,x
	handlebars.create: r,x
	hbs.registerHelper: r,x
	hbs.registerPartial: r,x
	hbs.registerPartials: r,x
	path.extname: r,x
	path.join: r,x
	path.relative: r,x
	walk.walk: r,x
</policy>

<policy nmpPackage="file-type" count="718">
</policy>

<policy nmpPackage="is-stream" count="719">
</policy>

<policy nmpPackage="unirest" count="720">
	body-parser.json: r,x
	express: x
	fs.FileReadStream: r
	fs.createReadStream: r,x
	mime.define: r,x
	mime.lookup: r,x
	path.resolve: r,x
	querystring.stringify: r,x
	should: x
	string_decoder.StringDecoder: r
	url.parse: r,x
	zlib.Z_BUF_ERROR: r
	zlib.Z_DATA_ERROR: r
	zlib.createUnzip: r,x
</policy>

<policy nmpPackage="gulp-plumber" count="721">
	chalk.cyan: r,x
	chalk.red: r,x
	events.EventEmitter: r
	events.EventEmitter.listenerCount: r,x
	fancy-log: x
	through2.obj: r,x
</policy>

<policy nmpPackage="tough-cookie" count="724">
	net.isIP: r,x
	psl.get: r,x
	punycode.toASCII: r,x
	url.parse: r,x
	util.inherits: r,x
	util.inspect: r,x
	util.inspect.custom: r
</policy>

<policy nmpPackage="underscore.string" count="725">
	sprintf-js.sprintf: r
	sprintf-js.vsprintf: r
	util-deprecate: x
</policy>

<policy nmpPackage="bcrypt-nodejs" count="726">
	crypto.randomBytes: r,x
</policy>

<policy nmpPackage="standard" count="727">
	path.join: r,x
	standard-engine.linter: r
</policy>

<policy nmpPackage="finalhandler" count="728">
	debug: x
	encodeurl: x
	escape-html: x
	on-finished: x
	on-finished.isFinished: r,x
	parseurl.original: r,x
	unpipe: x
</policy>

<policy nmpPackage="i" count="729">
	assert.deepEqual: r,x
	assert.equal: r,x
	assert.isEmpty: r,x
	vows.describe: r,x
</policy>

<policy nmpPackage="redux-logger" count="730">
</policy>

<policy nmpPackage="pouchdb" count="731">
	events.EventEmitter: r
	events.EventEmitter.call: r,x
	events.EventEmitter.listenerCount: r,x
	events.EventEmitter.prototype: r
	events.EventEmitter.prototype.removeListener: r
	events.EventEmitter.prototype.removeListener.call: r,x
	leveldown.destroy: r,x
	through2.obj: r,x
</policy>

<policy nmpPackage="twilio.tar.gz" count="732">
</policy>

<policy nmpPackage="reselect" count="733">
</policy>

<policy nmpPackage="i18next" count="734">
</policy>

<policy nmpPackage="babelify" count="736">
	path.extname: r,x
	path.resolve: r,x
	stream.PassThrough: r,x
	stream.Transform: r
</policy>

<policy nmpPackage="lodash.omit" count="737">
</policy>

<policy nmpPackage="graphql" count="738">
	iterall.$$asyncIterator: r
	iterall.forEach: r
	iterall.getAsyncIterator: r
	iterall.isAsyncIterable: r
	iterall.isCollection: r
</policy>

<policy nmpPackage="co-prompt" count="739">
	co: x
	keypress: x
</policy>

<policy nmpPackage="walk-sync" count="741">
	ensure-posix-path: x
	fs.readdirSync: r,x
	fs.statSync: r,x
	path.sep: r
</policy>

<policy nmpPackage="bson" count="742">
	buffer.Buffer: r
	crypto.randomBytes: r
</policy>

<policy nmpPackage="normalize-url" count="744">
	url.URL: r
</policy>

<policy nmpPackage="global" count="745">
</policy>

<policy nmpPackage="angular-sanitize" count="748">
</policy>

<policy nmpPackage="https-proxy-agent" count="749">
	agent-base.call: r,x
	assert: x
	assert.equal: r,x
	assert.throws: r,x
	debug: x
	fs.readFileSync: r,x
	http.createServer: r,x
	http.get: r,x
	https.createServer: r,x
	https.get: r,x
	net.connect: r,x
	proxy: x
	tls.connect: r,x
	url.parse: r,x
	util.inherits: r,x
</policy>

<policy nmpPackage="callsite" count="750">
</policy>

<policy nmpPackage="react-transition-group" count="753">
	react-dom.findDOMNode: r
	react-lifecycles-compat.polyfill: r
	react.Children: r
	react.Children.map: r,x
	react.cloneElement: r
	react.isValidElement: r
</policy>

<policy nmpPackage="lodash.clonedeep" count="754">
</policy>

<policy nmpPackage="metalsmith" count="755">
	absolute: x
	assert: x
	clone: x
	co-fs-extra.chmod: r,x
	co-fs-extra.outputFile: r,x
	co-fs-extra.readFile: r,x
	co-fs-extra.stat: r,x
	gray-matter: x
	is-utf8: x
	is.boolean: r,x
	is.number: r,x
	is.object: r,x
	is.string: r,x
	path.join: r,x
	path.relative: r,x
	path.resolve: r,x
	path.resolve.apply: r,x
	recursive-readdir: w
	rimraf: w
	stat-mode: x
	thunkify: x
	unyield: x
</policy>

<policy nmpPackage="http-proxy-middleware" count="756">
	http-proxy.createProxyServer: r,x
	is-glob: x
	lodash.assign: r,x
	lodash.camelCase: r,x
	lodash.clone: r,x
	lodash.debounce: r,x
	lodash.forEach: r,x
	lodash.forIn: r,x
	lodash.get: r,x
	lodash.includes: r,x
	lodash.isEmpty: r,x
	lodash.isEqual: r,x
	lodash.isFunction: r,x
	lodash.isNull: r,x
	lodash.isPlainObject: r,x
	lodash.isString: r,x
	lodash.isUndefined: r,x
	lodash.keys: r,x
	lodash.omit: r,x
	lodash.slice: r,x
	lodash.spread: r,x
	micromatch: x
	url.parse: r,x
	util.format: r
</policy>

<policy nmpPackage="node-notifier" count="757">
	child_process.exec: r,x
	child_process.execFile: r,x
	events.EventEmitter: r
	events.EventEmitter.call: r,x
	fs.readFileSync: r,x
	fs.stat: r,x
	growly.appname: w
	growly.notify: r,x
	growly.setHost: r,x
	net.connect: r,x
	os.arch: r,x
	os.release: r,x
	os.type: r,x
	path.extname: r,x
	path.join: r,x
	path.resolve: r,x
	semver.satisfies: r,x
	shellwords.escape: r,x
	url.parse: r,x
	util.inherits: r,x
	which.sync: r,x
</policy>

<policy nmpPackage="user-home" count="758">
	os-homedir: x
</policy>

<policy nmpPackage="passport-facebook" count="759">
	crypto.createHmac: r,x
	passport-oauth2.InternalOAuthError: r
	passport-oauth2.call: r,x
	passport-oauth2.prototype: r
	passport-oauth2.prototype.authenticate: r
	passport-oauth2.prototype.authenticate.call: r,x
	passport-oauth2.prototype.parseErrorResponse: r
	passport-oauth2.prototype.parseErrorResponse.call: r,x
	url.format: r,x
	url.parse: r,x
	util.inherits: r,x
</policy>

<policy nmpPackage="gulp-bump" count="760">
	bump-regex: x
	fs.readFileSync: r,x
	gulp.dest: r,x
	gulp.src: r,x
	gulp.task: r,x
	plugin-log: x
	plugin-log.colors: r
	plugin-log.colors.cyan: r,x
	plugin-log.colors.magenta: r,x
	semver.inc: r,x
	should.exist: r,x
	through2.obj: r,x
</policy>

<policy nmpPackage="open" count="761">
	child_process.exec: r,x
	path.join: r,x
</policy>

<policy nmpPackage="base-64" count="762">
</policy>

<policy nmpPackage="babel-plugin-transform-es2015-destructuring" count="763">
</policy>

<policy nmpPackage="json-stringify-safe" count="764">
	sinon.spy: r,x
</policy>

<policy nmpPackage="leaflet" count="767">
</policy>

<policy nmpPackage="npmlog" count="768">
	are-we-there-yet.TrackerGroup: r
	console-control-strings.beep: r,x
	console-control-strings.color: r,x
	events.EventEmitter: r
	set-blocking: x
	util.format: r,x
	util.format.apply: r,x
</policy>

<policy nmpPackage="d3-scale" count="769">
</policy>

<policy nmpPackage="detect-port" count="770">
	debug: x
</policy>

<policy nmpPackage="lodash.merge" count="771">
</policy>

<policy nmpPackage="promise-polyfill" count="772">
</policy>

<policy nmpPackage="progress-bar-webpack-plugin" count="773">
	chalk.bold: r,x
	chalk.cyan: r
	chalk.cyan.bold: r,x
	chalk.green: r
	chalk.green.bold: r,x
	webpack.ProgressPlugin: r
</policy>

<policy nmpPackage="lodash.isstring" count="776">
</policy>

<policy nmpPackage="mscdex-ssh2-81a1d03" count="777">
	assert: x
	assert.deepEqual: r,x
	assert.equal: r,x
	assert.fail: r,x
	assert.strictEqual: r,x
	assert.throws: r,x
	blessed.box: r
	blessed.log: r
	blessed.program: r
	blessed.screen: r
	blessed.textbox: r
	child_process.exec: r,x
	child_process.spawn: r,x
	constants.S_IFREG: r
	constants.S_IRWXG: r
	constants.S_IRWXO: r
	constants.S_IRWXU: r
	crypto.createHash: r,x
	crypto.createSign: r,x
	crypto.createVerify: r,x
	crypto.getHashes: r,x
	crypto.randomBytes: r,x
	dns.lookup: r,x
	events.EventEmitter: r
	events.EventEmitter.call: r,x
	events.EventEmitter.listenerCount: r,x
	fs.chmodSync: r,x
	fs.readFile: r,x
	fs.readFileSync: r,x
	fs.readdirSync: r,x
	net.Server: r
	net.Socket: r
	path.basename: r,x
	path.join: r,x
	path.resolve: r,x
	semver.gte: r,x
	semver.lt: r,x
	ssh2-streams.SFTPStream: r
	ssh2-streams.SFTPStream.OPEN_MODE: r
	ssh2-streams.SFTPStream.OPEN_MODE.READ: r
	ssh2-streams.SFTPStream.STATUS_CODE: r
	ssh2-streams.SFTPStream.STATUS_CODE.OK: r
	ssh2-streams.SSH2Stream: r
	ssh2-streams.constants: r
	ssh2-streams.constants.ALGORITHMS: r
	ssh2-streams.constants.ALGORITHMS.SUPPORTED_CIPHER: r
	ssh2-streams.constants.ALGORITHMS.SUPPORTED_COMPRESS: r
	ssh2-streams.constants.ALGORITHMS.SUPPORTED_HMAC: r
	ssh2-streams.constants.ALGORITHMS.SUPPORTED_KEX: r
	ssh2-streams.constants.ALGORITHMS.SUPPORTED_KEX.indexOf: r,x
	ssh2-streams.constants.ALGORITHMS.SUPPORTED_SERVER_HOST_KEY: r
	ssh2-streams.constants.BUGS: r
	ssh2-streams.constants.BUGS.DYN_RPORT_BUG: r
	ssh2-streams.constants.CHANNEL_EXTENDED_DATATYPE: r
	ssh2-streams.constants.CHANNEL_EXTENDED_DATATYPE.STDERR: r
	ssh2-streams.constants.CHANNEL_OPEN_FAILURE: r
	ssh2-streams.constants.CHANNEL_OPEN_FAILURE.ADMINISTRATIVELY_PROHIBITED: r
	ssh2-streams.constants.CHANNEL_OPEN_FAILURE.CONNECT_FAILED: r
	ssh2-streams.constants.CHANNEL_OPEN_FAILURE.RESOURCE_SHORTAGE: r
	ssh2-streams.constants.CHANNEL_OPEN_FAILURE.UNKNOWN_CHANNEL_TYPE: r
	ssh2-streams.constants.DISCONNECT_REASON: r
	ssh2-streams.constants.DISCONNECT_REASON.BY_APPLICATION: r
	ssh2-streams.constants.DISCONNECT_REASON.PROTOCOL_ERROR: r
	ssh2-streams.constants.DISCONNECT_REASON.SERVICE_NOT_AVAILABLE: r
	ssh2-streams.utils: r
	ssh2-streams.utils.decryptKey: r,x
	ssh2-streams.utils.genPublicKey: r,x
	ssh2-streams.utils.parseKey: r,x
	ssh2.SFTP_OPEN_MODE: r
	ssh2.SFTP_OPEN_MODE.READ: r
	ssh2.SFTP_STATUS_CODE: r
	ssh2.SFTP_STATUS_CODE.EOF: r
	ssh2.SFTP_STATUS_CODE.FAILURE: r
	ssh2.SFTP_STATUS_CODE.OK: r
	ssh2.Server: r
	stream.Duplex: r
	stream.Duplex.call: r,x
	stream.Readable: r
	stream.Writable: r
	stream.Writable.call: r,x
	util.inherits: r,x
	util.inspect: r,x
</policy>

<policy nmpPackage="styled-components" count="778">
</policy>

<policy nmpPackage="mz" count="779">
	graceful-fs: w
	object-assign: x
	readline.Interface: r
	readline.Interface.call: r,x
	readline.Interface.prototype: r
	readline.Interface.prototype.question: r
	readline.Interface.prototype.question.call: r,x
	thenify-all.withCallback: r,x
</policy>

<policy nmpPackage="jwt-decode" count="780">
</policy>

<policy nmpPackage="rc-slider" count="781">
	react-dom.findDOMNode: r
</policy>

<policy nmpPackage="es6-promise" count="782">
</policy>

<policy nmpPackage="process" count="783">
	assert.equal: r,x
	assert.ok: r,x
	fs.readFileSync: r,x
	vm.Script: r
</policy>

<policy nmpPackage="lodash-es" count="784">
</policy>

<policy nmpPackage="lodash.isequal" count="785">
</policy>

<policy nmpPackage="cross-spawn" count="786">
	path-key: x
</policy>

<policy nmpPackage="prompt" count="787">
	assert.deepEqual: r,x
	assert.equal: r,x
	assert.include: r,x
	assert.isFalse: r,x
	assert.isNull: r,x
	assert.isObject: r,x
	assert.isTrue: r,x
	colors/safe.cyan: r,x
	colors/safe.green: r,x
	colors/safe.grey: r,x
	colors/safe.magenta: r,x
	colors/safe.rainbow: r,x
	events.EventEmitter: r
	events.EventEmitter.prototype: r
	optimist.argv: r
	pkginfo: x
	read: x
	readline.Interface: r
	readline.Interface.prototype: r
	readline.Interface.prototype.setPrompt: w
	revalidator.validate: r,x
	revalidator.validate.messages: r
	stream.Stream: r
	util.inherits: r,x
	utile.async: r
	utile.async.forEachSeries: r,x
	utile.async.rejectSeries: r,x
	utile.mixin: r,x
	vows.describe: r,x
	winston.Logger: r
	winston.cli: r,x
	winston.transports: r
	winston.transports.Console: r
</policy>

<policy nmpPackage="get-port" count="788">
</policy>

<policy nmpPackage="load-grunt-tasks" count="789">
</policy>

<policy nmpPackage="lodash.assign" count="791">
</policy>

<policy nmpPackage="supports-color" count="792">
</policy>

<policy nmpPackage="babel-preset-stage-1" count="793">
</policy>

<policy nmpPackage="merge" count="794">
</policy>

<policy nmpPackage="sass-loader" count="795">
</policy>

<policy nmpPackage="isarray" count="796">
</policy>

<policy nmpPackage="amqp" count="797">
	assert: x
	assert.equal: r,x
	child_process.exec: r,x
	events.EventEmitter: r
	events.EventEmitter.call: r,x
	events.EventEmitter.prototype: r
	fs.readFileSync: r,x
	lodash.assignIn: r,x
	lodash.defaults: r,x
	lodash.forEach: r,x
	lodash.isFunction: r,x
	lodash.keys: r,x
	net.Socket: r
	net.connect: r,x
	net.createServer: r,x
	optimist.usage: r,x
	string_decoder.StringDecoder: r
	tls.connect: r,x
	url.parse: r,x
	util.inherits: r,x
	util.inspect: r,x
</policy>

<policy nmpPackage="chalk" count="798">
	supports-color.stdout: r
</policy>

<policy nmpPackage="amdefine" count="799">
	fs.readFileSync: r,x
	module._extensions: r
	path.dirname: r,x
</policy>

<policy nmpPackage="redux-thunk" count="800">
</policy>

<policy nmpPackage="lodash.pick" count="801">
</policy>

<policy nmpPackage="react-addons-shallow-compare" count="802">
	fbjs/lib/shallowEqual: x
</policy>

<policy nmpPackage="generic-pool" count="804">
	events.EventEmitter: r
	tap.test: r,x
</policy>

<policy nmpPackage="grunt-contrib-copy" count="805">
	chalk.cyan: r,x
	file-sync-cmp.equalFiles: r,x
	fs.chmodSync: r,x
	fs.closeSync: r,x
	fs.futimesSync: r,x
	fs.lstatSync: r,x
	fs.openSync: r,x
	path.basename: r,x
	path.join: r,x
</policy>

<policy nmpPackage="ecstatic" count="807">
	fs.readFileSync: r,x
	fs.readdirSync: r,x
	fs.writeFileSync: r,x
	path.resolve: r,x
</policy>

<policy nmpPackage="express-handlebars" count="808">
	glob: x
	graceful-fs.readFile: r,x
	path.extname: r,x
	path.join: r,x
	path.relative: r,x
	path.resolve: r,x
</policy>

<policy nmpPackage="babel-plugin-syntax-jsx" count="809">
</policy>

<policy nmpPackage="shortid" count="810">
	cluster.isMaster: r
	cluster.worker: r
	cluster.worker.id: r
	nanoid/format: x
</policy>

<policy nmpPackage="clean-css" count="811">
	fs.existsSync: r,x
	fs.readFileSync: r,x
	fs.statSync: r,x
	http.get: r
	https.get: r
	os.EOL: r
	path.dirname: r,x
	path.isAbsolute: r,x
	path.join: r,x
	path.relative: r,x
	path.resolve: r,x
	source-map.SourceMapConsumer: r
	source-map.SourceMapGenerator: r
	url.parse: r,x
	url.resolve: r,x
</policy>

<policy nmpPackage="winston-daily-rotate-file" count="812">
	chai.expect: r,x
	file-stream-rotator.getStream: r,x
	fs.createReadStream: r,x
	fs.createWriteStream: r,x
	fs.readFileSync: r,x
	fs.readdir: r,x
	fs.readdirSync: r,x
	fs.unlinkSync: r,x
	moment: x
	object-hash: x
	os.EOL: r
	path.basename: r,x
	path.dirname: r,x
	path.extname: r,x
	path.join: r,x
	rimraf: x
	semver.major: r,x
	stream.PassThrough: r
	stream.Writable: r
	stream.Writable.call: r,x
	stream.Writable.prototype: r
	stream.Writable.prototype.write: r
	stream.Writable.prototype.write.apply: r,x
	triple-beam.MESSAGE: r
	util.inherits: r,x
	winston-compat.Transport: r
	winston-compat.Transport.prototype: r
	winston-compat.Transport.prototype.normalizeQuery: r
	winston-compat.log: r,x
	winston.createLogger: r,x
	winston.transports: r
	winston.transports.DailyRotateFile: w
	winston.version: r
	zlib.createGzip: r,x
</policy>

<policy nmpPackage="yeoman-generator" count="813">
	debug: x
	yeoman-environment.enforceUpdate: r,x
</policy>

<policy nmpPackage="gulp-concat" count="814">
	path.basename: r,x
	path.join: r,x
	through2.obj: r,x
</policy>

<policy nmpPackage="lodash.isobject" count="815">
</policy>

<policy nmpPackage="lodash.get" count="816">
</policy>

<policy nmpPackage="mssql" count="817">
	debug: x
	events.EventEmitter: r
</policy>

<policy nmpPackage="vinyl-fs" count="818">
	fs-mkdirp-stream.obj: r,x
	fs-mkdirp-stream/mkdirp: x
	glob-stream: x
	graceful-fs.Stats: r
	graceful-fs.close: r,x
	graceful-fs.createReadStream: r,x
	graceful-fs.fchmod: r,x
	graceful-fs.fchown: r,x
	graceful-fs.fstat: r,x
	graceful-fs.futimes: r,x
	graceful-fs.lstat: r,x
	graceful-fs.open: r,x
	graceful-fs.readFile: r,x
	graceful-fs.readlink: r,x
	graceful-fs.stat: r,x
	graceful-fs.symlink: r,x
	graceful-fs.unlink: r,x
	graceful-fs.write: r,x
	is-valid-glob: x
	lazystream.Readable: r
	lead: x
	os.platform: r,x
	path.relative: r,x
	path.resolve: r,x
	pumpify.obj: r,x
	readable-stream.Writable: r
	readable-stream.Writable.call: r,x
	remove-bom-buffer: x
	remove-bom-stream: x
	resolve-options: x
	through2.obj: r,x
	to-through: x
	util.inherits: r,x
	value-or-function.date: r,x
	vinyl-sourcemap.add: r,x
	vinyl-sourcemap.write: r,x
	vinyl.isVinyl: r,x
</policy>

<policy nmpPackage="react" count="819">
	object-assign: x
	prop-types/checkPropTypes: x
</policy>

<policy nmpPackage="slash" count="820">
</policy>

<policy nmpPackage="is-promise" count="821">
</policy>

<policy nmpPackage="sprintf-js" count="822">
	assert.doesNotThrow: r,x
	assert.equal: r,x
	assert.throws: r,x
	benchmark.Suite: r
	gulp-benchmark: x
	gulp-eslint: x
	gulp-eslint.format: r,x
	gulp-header: x
	gulp-mocha: x
	gulp-rename: x
	gulp-sourcemaps.init: r,x
	gulp-sourcemaps.write: r,x
	gulp-uglify: x
	gulp.dest: r,x
	gulp.src: r,x
	gulp.task: r,x
</policy>

<policy nmpPackage="pify" count="824">
</policy>

<policy nmpPackage="child-process-promise" count="825">
	child_process.fork: r
	node-version.major: r
</policy>

<policy nmpPackage="whatwg-fetch" count="826">
</policy>

<policy nmpPackage="opn" count="827">
</policy>

<policy nmpPackage="node-dir" count="828">
	fs.createReadStream: r,x
	fs.lstat: r,x
	fs.readFile: r,x
	fs.readdir: r,x
	fs.readdirSync: r,x
	fs.stat: r,x
	fs.statSync: r,x
	minimatch: x
	path.join: r,x
	path.sep: r
</policy>

<policy nmpPackage="extract-text-webpack-plugin" count="829">
	webpack-sources.ConcatSource: r
	webpack-sources.RawSource: r
	webpack-sources.SourceMapSource: r
</policy>

<policy nmpPackage="read-pkg-up" count="831">
</policy>

<policy nmpPackage="passport-local" count="832">
	passport-strategy.Strategy: r
	passport-strategy.Strategy.call: r,x
	util.inherits: r,x
</policy>

<policy nmpPackage="event-stream" count="834">
	buffer.Buffer: r
	buffer.Buffer.isBuffer: r,x
	from: x
	fs.createReadStream: r,x
	fs.readFileSync: r,x
	it-is: x
	it-is.style: r,x
	path.join: r,x
	stream-spec: x
	stream.Stream: r
	tape: x
	ubelt.delay: r,x
	ubelt.each: r,x
	ubelt.id: r
	ubelt.map: r,x
</policy>

<policy nmpPackage="cross-env" count="835">
	cross-spawn.spawn: r
</policy>

<policy nmpPackage="istanbul.tar.gz" count="836">
</policy>

<policy nmpPackage="koa" count="837">
	debug: x
	depd: x
	path.extname: r
	type-is.is: r
	url.URL: r
	url.format: r
</policy>

<policy nmpPackage="css" count="838">
	fs.readFileSync: r
	inherits: x
	path.dirname: r,x
	source-map-resolve.resolveSync: r,x
	source-map.SourceMapConsumer: r
	source-map.SourceMapGenerator: r
	urix: x
</policy>

<policy nmpPackage="lodash.set" count="840">
</policy>

<policy nmpPackage="safe-buffer" count="841">
	buffer.Buffer: r,x
	buffer.Buffer.alloc: r
	buffer.Buffer.allocUnsafe: r
	buffer.Buffer.allocUnsafeSlow: r
	buffer.Buffer.from: r
	buffer.SlowBuffer: r,x
</policy>

<policy nmpPackage="basic-auth" count="842">
	safe-buffer.Buffer: r
	safe-buffer.Buffer.from: r,x
</policy>

<policy nmpPackage="commander" count="843">
	child_process.spawn: r,x
	events.EventEmitter: r
	fs.lstatSync: r,x
	fs.readlinkSync: r,x
	fs.statSync: r,x
	path.basename: r,x
	path.dirname: r,x
	path.extname: r,x
	path.join: r,x
	util.inherits: r,x
</policy>

<policy nmpPackage="os" count="844">
</policy>

<policy nmpPackage="mv" count="845">
	assert.ifError: r,x
	assert.ok: r,x
	assert.strictEqual: r,x
	fs.createReadStream: r,x
	fs.createWriteStream: r,x
	fs.link: r,x
	fs.readFile: r,x
	fs.rename: w,r,x
	fs.unlink: r,x
	mkdirp: x
	ncp.ncp: r,x
	path.dirname: r,x
	rimraf: x
</policy>

<policy nmpPackage="cli" count="848">
</policy>

<policy nmpPackage="cookie-parser" count="849">
	cookie-signature.unsign: r,x
	cookie.parse: r,x
</policy>

<policy nmpPackage="fresh" count="850">
</policy>

<policy nmpPackage="pump" count="851">
	end-of-stream: x
	fs.ReadStream: r
	fs.WriteStream: r
	fs.createReadStream: r,x
	fs.createWriteStream: r,x
	once: x
	stream.Readable: r
	stream.Transform: r
	stream.Writable: r
</policy>

<policy nmpPackage="ffi" count="852">
	assert: x
	assert.bind: r,x
	assert.equal: r,x
	assert.notEqual: r,x
	assert.strictEqual: r,x
	assert.throws: r,x
	bindings: x
	debug: x
	fs-extra.copySync: r,x
	fs-extra.mkdirsSync: r,x
	fs.readFileSync: r,x
	fs.unlinkSync: r,x
	path.join: r,x
	ref-array: x
	ref-struct: x
	ref.NULL: r
	ref.alignof: r
	ref.alignof.pointer: r
	ref.alloc: r,x
	ref.coerceType: r,x
	ref.refType: r,x
	ref.set: r,x
	ref.sizeof: r
	ref.sizeof.long: r
	ref.sizeof.pointer: r
	ref.types: r
	ref.types.CString: r
	ref.types.Object: r
	ref.types.Object.ffi_type: w
	ref.types.Utf8String: r
	ref.types.bool: r
	ref.types.char: r
	ref.types.int: r
	ref.types.long: r
	ref.types.long.ffi_type: w
	ref.types.size_t: r
	ref.types.size_t.ffi_type: w
	ref.types.uint32: r
	ref.types.ulong: r
	ref.types.ulong.ffi_type: w
	ref.types.ushort: r
	ref.types.void: r
</policy>

<policy nmpPackage="ethereumjs-util" count="853">
	assert: x
	create-hash: x
	keccak: x
	rlp.decode: r,x
	rlp.encode: r,x
	safe-buffer.Buffer: r
	safe-buffer.Buffer.allocUnsafe: r,x
	safe-buffer.Buffer.concat: r,x
	safe-buffer.Buffer.from: r,x
	safe-buffer.Buffer.isBuffer: r,x
	secp256k1.privateKeyVerify: r,x
	secp256k1.publicKeyConvert: r,x
	secp256k1.publicKeyCreate: r,x
	secp256k1.publicKeyVerify: r,x
	secp256k1.recover: r,x
	secp256k1.sign: r,x
</policy>

<policy nmpPackage="hoek" count="854">
</policy>

<policy nmpPackage="ramda" count="855">
</policy>

<policy nmpPackage="esprima" count="856">
</policy>

<policy nmpPackage="utf8" count="857">
</policy>

<policy nmpPackage="html-loader" count="858">
	es6-templates.compile: r,x
	html-minifier.minify: r,x
	loader-utils.getOptions: r,x
	loader-utils.isUrlRequest: r,x
	loader-utils.urlToRequest: r,x
	object-assign: x
	url.parse: r,x
</policy>

<policy nmpPackage="babel-plugin-transform-async-to-generator" count="859">
</policy>

<policy nmpPackage="babel-plugin-module-resolver" count="860">
	reselect.createSelector: r
</policy>

<policy nmpPackage="shell-quote" count="861">
	array-filter: x
	array-map: x
	array-reduce: x
	tape: x
</policy>

<policy nmpPackage="requireindex" count="862">
	assert.equal: r,x
	asserts: x
	asserts.all: r
	asserts.all.equal: r,x
	fs.readdirSync: r,x
	fs.statSync: r,x
	path.basename: r,x
	path.extname: r,x
	path.join: r,x
	path.resolve: r,x
</policy>

<policy nmpPackage="rsvp" count="863">
</policy>

<policy nmpPackage="jshint-stylish" count="864">
	beeper: x
	chalk.blue: r,x
	chalk.gray: r,x
	chalk.red: r,x
	chalk.underline: r,x
	log-symbols.error: r
	log-symbols.success: r
	log-symbols.warning: r
	plur: x
	text-table: x
</policy>

<policy nmpPackage="raw-body" count="865">
	bytes.parse: r,x
	http-errors: x
	iconv-lite.getDecoder: r,x
	unpipe: x
</policy>

<policy nmpPackage="accepts" count="866">
	mime-types.lookup: r,x
</policy>

<policy nmpPackage="levelup" count="867">
	assert.equal: r,x
	events.EventEmitter: r
	events.EventEmitter.call: r,x
	events.EventEmitter.prototype: r
	events.EventEmitter.prototype.emit: r
	events.EventEmitter.prototype.once: r
	level-errors.InitializationError: r
	level-errors.NotFoundError: r
	level-errors.OpenError: r
	level-errors.ReadError: r
	level-errors.WriteError: r
	util.inherits: r,x
	xtend: x
</policy>

<policy nmpPackage="shelljs" count="868">
	child_process.exec: r,x
	child_process.execFileSync: r,x
	fs.appendFileSync: r,x
	fs.chmodSync: r,x
	fs.closeSync: r,x
	fs.createWriteStream: r,x
	fs.existsSync: r,x
	fs.linkSync: r,x
	fs.lstatSync: r
	fs.lstatSync.apply: r,x
	fs.mkdirSync: r,x
	fs.openSync: r,x
	fs.readFileSync: r,x
	fs.readSync: r,x
	fs.readdirSync: r,x
	fs.readlinkSync: r,x
	fs.realpathSync: r,x
	fs.renameSync: r,x
	fs.rmdirSync: r,x
	fs.statSync: r,x
	fs.statSync.apply: r,x
	fs.symlinkSync: r,x
	fs.unlinkSync: r,x
	fs.utimesSync: r,x
	fs.writeFileSync: r,x
	fs.writeSync: r,x
	glob.sync: r,x
	os.homedir: r,x
	os.tmpdir: r,x
	path.basename: r,x
	path.delimiter: r
	path.dirname: r,x
	path.join: r,x
	path.normalize: r,x
	path.relative: r,x
	path.resolve: r,x
	path.sep: r
	util.format: r
	util.format.apply: r,x
</policy>

<policy nmpPackage="node-watch" count="869">
	assert: x
	assert.equal: r,x
	events.EventEmitter: r
	events.EventEmitter.call: r,x
	fs-extra.appendFileSync: r,x
	fs-extra.ensureDirSync: r,x
	fs-extra.ensureFileSync: r,x
	fs-extra.ensureSymlinkSync: r,x
	fs-extra.readFileSync: r,x
	fs-extra.removeSync: r,x
	fs.existsSync: r,x
	fs.lstatSync: r,x
	fs.mkdirSync: r,x
	fs.readdir: r,x
	fs.rmdirSync: r,x
	fs.statSync: r,x
	fs.unlinkSync: r,x
	fs.watch: r,x
	fs.writeFileSync: r,x
	os.platform: r,x
	os.tmpdir: r,x
	path.basename: r,x
	path.join: r,x
	path.resolve: r,x
	util.deprecate: r,x
	util.inherits: r,x
</policy>

<policy nmpPackage="react-tap-event-plugin" count="870">
	fbjs/lib/TouchEventUtils.extractSingleTouch: r,x
	fbjs/lib/emptyFunction.thatReturnsFalse: r
	fbjs/lib/emptyFunction.thatReturnsNull: r
	fbjs/lib/emptyFunction.thatReturnsTrue: r
	fbjs/lib/invariant: x
	react-dom.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: r
	react-dom.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.EventPluginHub: r
	react-dom.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.EventPluginHub.injection: r
	react-dom.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.EventPluginHub.injection.injectEventPluginsByName: r,x
	react-dom.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.EventPropagators: r
	react-dom.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.EventPropagators.accumulateTwoPhaseDispatches: r,x
</policy>

<policy nmpPackage="js-yaml" count="871">
</policy>

<policy nmpPackage="gulp-babel" count="872">
</policy>

<policy nmpPackage="react-addons-test-utils" count="873">
</policy>

<policy nmpPackage="twitter" count="874">
	deep-extend: x
	events.EventEmitter: r
	events.EventEmitter.call: r,x
	events.EventEmitter.prototype: r
	request.defaults: r,x
	url.parse: r,x
</policy>

<policy nmpPackage="node-cmd" count="875">
	child_process.exec: r,x
</policy>

<policy nmpPackage="promise" count="876">
	acorn.parse: r,x
	acorn/dist/walk.simple: r,x
	asap: x
	asap/raw: x
	crypto.createHash: r,x
	fs.mkdirSync: r,x
	fs.readFileSync: r,x
	fs.readdirSync: r,x
	fs.writeFileSync: r,x
	rimraf.sync: r,x
</policy>

<policy nmpPackage="step" count="877">
</policy>

<policy nmpPackage="eslint-plugin-react" count="878">
</policy>

<policy nmpPackage="download" count="879">
</policy>

<policy nmpPackage="defaults" count="880">
	clone: x
	tap.test: r,x
</policy>

<policy nmpPackage="gulp-install" count="881">
</policy>

<policy nmpPackage="amqplib" count="882">
	assert: x
	assert.deepEqual: r,x
	assert.equal: r,x
	assert.throws: r,x
	bitsyntax.builder: r,x
	bitsyntax.matcher: r,x
	bluebird.all: r,x
	bluebird.fromCallback: r,x
	bluebird.join: r,x
	bluebird.try: r,x
	buffer-more-ints.readInt64BE: r,x
	buffer-more-ints.readUInt64BE: r,x
	buffer-more-ints.writeInt64BE: r,x
	buffer-more-ints.writeUInt64BE: r,x
	claire.Undefined: r
	claire.asGenerator: r,x
	claire.choice: r,x
	claire.choice.apply: r,x
	claire.data: r
	claire.data.Array: r,x
	claire.data.Bool: r
	claire.data.Nothing: r
	claire.data.Null: r
	claire.data.Object: r,x
	claire.data.Positive: r
	claire.data.Str: r
	claire.data.UInt: r
	claire.forAll: r,x
	claire.label: r,x
	claire.recursive: r,x
	claire.repeat: r,x
	claire.sequence: r,x
	claire.sequence.apply: r,x
	claire.sized: r,x
	claire.transform: r,x
	domain.createDomain: r,x
	events.EventEmitter: r
	events.EventEmitter.call: r,x
	fs.readFileSync: r,x
	net.connect: r,x
	net.createServer: r,x
	querystring.unescape: r,x
	safe-buffer.Buffer: r
	safe-buffer.Buffer.alloc: r,x
	safe-buffer.Buffer.byteLength: r,x
	safe-buffer.Buffer.concat: r,x
	safe-buffer.Buffer.from: r,x
	safe-buffer.Buffer.isBuffer: r,x
	stream.Duplex: r
	stream.PassThrough: r
	tls.connect: r,x
	url.format: r,x
	url.parse: r,x
	util.format: r,x
	util.inherits: r,x
</policy>

<policy nmpPackage="nodemailer" count="883">
	child_process.spawn: r
	events.EventEmitter: r
	stream.PassThrough: r
	stream.Stream: r
	stream.Transform: r
</policy>

<policy nmpPackage="material-ui" count="884">
	react-dom.unmountComponentAtNode: r
	react-dom.unstable_renderSubtreeIntoContainer: r
	react.Children: r
	react.Children.count: r,x
	react.Children.forEach: r,x
	react.Children.map: r,x
	react.Children.toArray: r,x
	react.Component: r
	react.cloneElement: r
	react.createElement: r
	react.isValidElement: r
</policy>

<policy nmpPackage="bluebird" count="885">
</policy>

<policy nmpPackage="gulp-sourcemaps" count="886">
	acorn.tokenizer: r,x
	convert-source-map.fromSource: r,x
	convert-source-map.mapFileCommentRegex: r
	convert-source-map.mapFileCommentRegex.exec: r,x
	convert-source-map.removeComments: r,x
	convert-source-map.removeMapFileComments: r,x
	css.parse: r,x
	debug-fabulous.spawnable: r,x
	detect-newline.graceful: r,x
	graceful-fs.readFileSync: r,x
	path.dirname: r,x
	path.extname: r,x
	path.join: r,x
	path.relative: r,x
	path.resolve: r,x
	path.sep: r
	source-map.SourceMapGenerator: r
	strip-bom-string: x
	through2.obj: r,x
</policy>

<policy nmpPackage="mathjs" count="888">
	escape-latex: x
	javascript-natural-sort: x
	seed-random: x
	typed-function.create: r
</policy>

<policy nmpPackage="slug" count="889">
</policy>

<policy nmpPackage="wordwrap" count="890">
	fs.readFileSync: r,x
	tape: x
	wordwrap: x
</policy>

<policy nmpPackage="webpack-merge" count="891">
</policy>

<policy nmpPackage="lodash.uniq" count="892">
</policy>

<policy nmpPackage="tv4" count="893">
</policy>

<policy nmpPackage="bindings" count="894">
	fs.accessSync: r,x
	fs.existsSync: r
	path.dirname: r,x
	path.existsSync: r
	path.extname: r,x
	path.join: r,x
	path.join.apply: r,x
</policy>

<policy nmpPackage="jshint" count="895">
	cli.args: r
	cli.enable: r,x
	cli.error: r,x
	cli.options: w
	cli.parse: r,x
	cli.setApp: r,x
	cli.setArgv: r,x
	cli.withStdin: r,x
	events.EventEmitter: r
	fp.jshintConfig: r
	fp.reporter: r
	fs.existsSync: r,x
	htmlparser2.Parser: r
	lodash.clone: r,x
	lodash.each: r,x
	lodash.extend: r,x
	lodash.findLastIndex: r,x
	lodash.has: r,x
	lodash.includes: r,x
	lodash.isArray: r,x
	lodash.isEmpty: r,x
	lodash.isNumber: r,x
	lodash.merge: r,x
	lodash.reject: r,x
	lodash.slice: r,x
	lodash.some: r,x
	lodash.values: r,x
	lodash.zip: r,x
	minimatch: x
	path.dirname: r,x
	path.join: r,x
	path.normalize: r,x
	path.resolve: r,x
	shelljs.cat: r,x
	shelljs.ls: r,x
	shelljs.test: r,x
	strip-json-comments: x
</policy>

<policy nmpPackage="file-exists" count="896">
</policy>

<policy nmpPackage="bigi" count="897">
	assert.equal: r,x
</policy>

<policy nmpPackage="chai" count="898">
	get-func-name: x
	pathval.getPathInfo: r
	pathval.hasProperty: r
	type-detect: x
</policy>

<policy nmpPackage="lodash.isplainobject" count="899">
</policy>

<policy nmpPackage="cors" count="900">
	basic-auth-connect: x
	body-parser.json: r,x
	express: x
	express.Router: r
	object-assign: x
	should.exist: r,x
	should.not: r
	should.not.exist: r,x
	supertest: x
	vary: x
</policy>

<policy nmpPackage="lodash.foreach" count="901">
</policy>

<policy nmpPackage="create-react-class" count="902">
	fbjs/lib/invariant: x
	object-assign: x
	react.Component: r
	react.isValidElement: r
</policy>

<policy nmpPackage="koa-router" count="903">
	debug: x
	http-errors.MethodNotAllowed: r
	http-errors.NotImplemented: r
	koa-compose: x
	methods.forEach: r,x
	path-to-regexp: x
	path-to-regexp.compile: r,x
	path-to-regexp.parse: r,x
</policy>

<policy nmpPackage="babel-eslint" count="904">
	@babel/code-frame.codeFrameColumns: r,x
	@babel/parser.parse: r,x
	@babel/parser.tokTypes: r
	@babel/traverse.default: r
	@babel/types.VISITOR_KEYS: r
	@babel/types.VISITOR_KEYS.MethodDefinition: w,r
	@babel/types.VISITOR_KEYS.ObjectProperty: r
	@babel/types.VISITOR_KEYS.Property: w,r
	eslint-scope/lib/definition.Definition: r
	eslint-visitor-keys.KEYS: r
	eslint-visitor-keys.getKeys: r
</policy>

<policy nmpPackage="react-router" count="905">
	history.createLocation: r
	history.createMemoryHistory: r
	history.createPath: r
	history.locationsAreEqual: r
</policy>

<policy nmpPackage="depd" count="906">
	events.EventEmitter: r
	events.EventEmitter.listenerCount: r
	path.relative: r,x
</policy>

<policy nmpPackage="underscore" count="908">
</policy>

<policy nmpPackage="react-timer-mixin" count="909">
</policy>

<policy nmpPackage="node-uuid" count="910">
	child_process.exec: r,x
	crypto.randomBytes: r
	os.type: r,x
	uuid: x
	uuid-js.create: r,x
	uuid.generate: r
</policy>

<policy nmpPackage="redis" count="911">
	assert: x
	assert.strictEqual: r,x
	events: w
	events.EventEmitter: r
	net.createConnection: r,x
	net.isIP: r,x
	redis-commands.getKeyIndexes: r,x
	redis-commands.list: r
	redis-commands.list.forEach: r,x
	redis-parser.ParserError: r
	redis-parser.RedisError: r
	redis-parser.RedisError.call: r,x
	redis-parser.ReplyError: r
	tls.connect: r,x
	url.parse: r,x
	util.inherits: r,x
</policy>

<policy nmpPackage="ts-helpers" count="912">
</policy>

<policy nmpPackage="thunkify" count="913">
	assert: x
	fs.readFile: w,r,x
</policy>

<policy nmpPackage="vue-hot-reload-api" count="914">
</policy>

<policy nmpPackage="shallowequal" count="916">
</policy>

<policy nmpPackage="cli-spinner" count="917">
	readline.clearLine: r,x
	readline.cursorTo: r,x
</policy>

<policy nmpPackage="tslib" count="918">
</policy>

<policy nmpPackage="gulp-mocha" count="919">
</policy>

<policy nmpPackage="camel-case" count="920">
	no-case: x
	upper-case: x
</policy>

<policy nmpPackage="sanitize-filename" count="921">
	mktemp.createDirSync: r,x
	tape: x
	truncate-utf8-bytes: x
</policy>

<policy nmpPackage="echarts" count="923">
	echarts.dataTool: r
	echarts.dataTool.gexf: w
	echarts.dataTool.prepareBoxplotData: w
	echarts.dataTool.version: w
	echarts.extendComponentModel: r,x
	echarts.extendComponentView: r,x
	echarts.graphic: r
	echarts.graphic.BoundingRect: r
	echarts.matrix: r
	echarts.matrix.create: r,x
	echarts.registerAction: r,x
	echarts.registerCoordinateSystem: r,x
	echarts.util: r
	echarts.util.bind: r,x
	echarts.util.map: r,x
	escodegen.generate: r,x
	esprima.parse: r,x
	estraverse.Syntax: r
	estraverse.Syntax.Identifier: r
	estraverse.Syntax.Literal: r
	estraverse.Syntax.MemberExpression: r
	estraverse.Syntax.Property: r
	estraverse.Syntax.VariableDeclaration: r
	estraverse.Syntax.VariableDeclarator: r
	estraverse.replace: r,x
	estraverse.traverse: r,x
	etpl.compile: r,x
	etpl.config: r,x
	fs-extra.outputFileSync: r,x
	fs-extra.readFileSync: r,x
	fs.readFileSync: r,x
	fs.writeFileSync: r,x
	glob: x
	optimist.argv: r
	optimist.argv.m: r
	uglify-js.Compressor: r,x
	uglify-js.parse: r,x
	zrender/lib/contain/line.containStroke: r,x
	zrender/lib/contain/polygon.contain: r,x
	zrender/lib/contain/quadratic.containStroke: r,x
	zrender/lib/contain/text.getBoundingRect: r,x
	zrender/lib/contain/text.makeFont: r,x
	zrender/lib/contain/text.truncateText: r
	zrender/lib/core/BoundingRect.create: r,x
	zrender/lib/core/bbox.fromPoints: r,x
	zrender/lib/core/curve.quadraticAt: r,x
	zrender/lib/core/curve.quadraticDerivativeAt: r,x
	zrender/lib/core/curve.quadraticSubdivide: r,x
	zrender/lib/core/env.browser: r
	zrender/lib/core/env.browser.edge: r
	zrender/lib/core/env.browser.ie: r
	zrender/lib/core/env.browser.weChat: r
	zrender/lib/core/env.canvasSupported: r
	zrender/lib/core/env.domSupported: r
	zrender/lib/core/env.node: r
	zrender/lib/core/env.svgSupported: r
	zrender/lib/core/env.wxa: r
	zrender/lib/core/event.addEventListener: r,x
	zrender/lib/core/event.normalizeEvent: r,x
	zrender/lib/core/event.notLeftMouse: r,x
	zrender/lib/core/event.stop: r,x
	zrender/lib/core/matrix.clone: r,x
	zrender/lib/core/matrix.copy: r,x
	zrender/lib/core/matrix.create: r,x
	zrender/lib/core/matrix.identity: r,x
	zrender/lib/core/matrix.invert: r,x
	zrender/lib/core/matrix.mul: r,x
	zrender/lib/core/matrix.rotate: r,x
	zrender/lib/core/matrix.scale: r,x
	zrender/lib/core/matrix.translate: r,x
	zrender/lib/core/timsort: x
	zrender/lib/core/util.$override: r,x
	zrender/lib/core/util.assert: r,x
	zrender/lib/core/util.bind: r,x
	zrender/lib/core/util.clone: r,x
	zrender/lib/core/util.concatArray: r,x
	zrender/lib/core/util.createCanvas: r,x
	zrender/lib/core/util.createHashMap: r,x
	zrender/lib/core/util.curry: r,x
	zrender/lib/core/util.defaults: r,x
	zrender/lib/core/util.each: r,x
	zrender/lib/core/util.eqNaN: r,x
	zrender/lib/core/util.extend: r,x
	zrender/lib/core/util.filter: r,x
	zrender/lib/core/util.indexOf: r,x
	zrender/lib/core/util.inherits: r,x
	zrender/lib/core/util.isArray: r,x
	zrender/lib/core/util.isArrayLike: r,x
	zrender/lib/core/util.isDom: r,x
	zrender/lib/core/util.isFunction: r,x
	zrender/lib/core/util.isObject: r,x
	zrender/lib/core/util.isString: r,x
	zrender/lib/core/util.isTypedArray: r,x
	zrender/lib/core/util.map: r,x
	zrender/lib/core/util.merge: r,x
	zrender/lib/core/util.mergeAll: r,x
	zrender/lib/core/util.mixin: r,x
	zrender/lib/core/util.noop: r
	zrender/lib/core/util.normalizeCssArray: r
	zrender/lib/core/util.reduce: r,x
	zrender/lib/core/util.retrieve: r,x
	zrender/lib/core/util.retrieve.apply: r,x
	zrender/lib/core/util.retrieve2: r,x
	zrender/lib/core/util.retrieve3: r,x
	zrender/lib/core/util.setAsPrimitive: r,x
	zrender/lib/core/util.slice: r,x
	zrender/lib/core/util.trim: r,x
	zrender/lib/core/vector.applyTransform: r,x
	zrender/lib/core/vector.clone: r,x
	zrender/lib/core/vector.copy: r,x
	zrender/lib/core/vector.create: r,x
	zrender/lib/core/vector.dist: r,x
	zrender/lib/core/vector.distSquare: r,x
	zrender/lib/core/vector.len: r,x
	zrender/lib/core/vector.lerp: r,x
	zrender/lib/core/vector.max: r,x
	zrender/lib/core/vector.min: r,x
	zrender/lib/core/vector.normalize: r,x
	zrender/lib/core/vector.scaleAndAdd: r,x
	zrender/lib/core/vector.set: r,x
	zrender/lib/core/vector.sub: r,x
	zrender/lib/graphic/Path.extend: r,x
	zrender/lib/graphic/Path.prototype: r
	zrender/lib/graphic/Path.prototype.brush: r
	zrender/lib/graphic/helper/fixClipWithShadow: x
	zrender/lib/mixin/Eventful.call: r,x
	zrender/lib/mixin/Eventful.prototype: r
	zrender/lib/mixin/Transformable.call: r,x
	zrender/lib/mixin/Transformable.getLocalTransform: r,x
	zrender/lib/tool/color.fastLerp: r,x
	zrender/lib/tool/color.lift: r,x
	zrender/lib/tool/color.modifyAlpha: r,x
	zrender/lib/tool/color.modifyHSL: r,x
	zrender/lib/tool/color.parse: r,x
	zrender/lib/tool/color.stringify: r,x
	zrender/lib/tool/color.toHex: r,x
	zrender/lib/tool/parseSVG.makeViewBoxTransform: r,x
	zrender/lib/tool/parseSVG.parseSVG: r,x
	zrender/lib/tool/parseSVG.parseXML: r,x
	zrender/lib/tool/path.createFromString: r,x
	zrender/lib/tool/path.extendFromString: r,x
	zrender/lib/tool/path.mergePath: r
	zrender/lib/zrender.init: r,x
</policy>

<policy nmpPackage="tinycolor2" count="924">
</policy>

<policy nmpPackage="strip-bom" count="925">
</policy>

<policy nmpPackage="loglevel" count="926">
</policy>

<policy nmpPackage="node.extend" count="927">
	is.array: r,x
	is.fn: r,x
	is.hash: r,x
</policy>

<policy nmpPackage="html-webpack-plugin" count="929">
	html-minifier.minify: r
	tapable.AsyncSeriesWaterfallHook: r
	tapable.SyncWaterfallHook: r
</policy>

<policy nmpPackage="meow" count="930">
</policy>

<policy nmpPackage="identity-obj-proxy" count="931">
</policy>

<policy nmpPackage="ansi-styles" count="932">
</policy>

<policy nmpPackage="type-is" count="933">
	media-typer.format: r,x
	media-typer.parse: r,x
	mime-types.lookup: r,x
</policy>

<policy nmpPackage="defined" count="934">
	tape: x
</policy>

<policy nmpPackage="gulp-load-plugins" count="936">
	array-unique: x
	fancy-log.apply: r,x
	findup-sync: x
	gulplog.info: r
	gulplog.info.apply: r,x
	has-gulplog: x
	micromatch: x
	path.dirname: r,x
	resolve.sync: r,x
</policy>

<policy nmpPackage="redux-form" count="937">
	immutable.Iterable: r
	immutable.Iterable.isIndexed: r,x
	immutable.Iterable.isIterable: r,x
	immutable.List: r
	immutable.List.isList: r,x
	immutable.Map: r
	immutable.fromJS: r
	react-lifecycles-compat.polyfill: r
	react-redux.connect: r
	react.Component: r
	react.createElement: r
	redux.bindActionCreators: r
</policy>

<policy nmpPackage="http-proxy" count="939">
	eventemitter3.call: r,x
	http.createServer: r,x
	https.createServer: r,x
	requires-port: x
	url.parse: r,x
	util._extend: r,x
	util.inherits: r,x
</policy>

<policy nmpPackage="babel-traverse" count="940">
	babel-types.react: r
	babel-types.react.isCompatTag: r,x
	babylon.parse: r
</policy>

<policy nmpPackage="babel-jest" count="941">
</policy>

<policy nmpPackage="zmq" count="942">
	assert.equal: r,x
	bindings: x
	cluster.fork: r,x
	cluster.isMaster: r
	cluster.on: r,x
	events.EventEmitter: r
	events.EventEmitter.call: r,x
	http.get: r,x
	os.platform: r,x
	semver.eq: r,x
	semver.gte: r,x
	semver.lt: r,x
	semver.lte: r,x
	semver.satisfies: r,x
	semver.valid: r,x
	should.exist: r,x
	should.not: r
	should.not.exist: r,x
	util.inherits: r,x
</policy>

<policy nmpPackage="deep-extend" count="943">
</policy>

<policy nmpPackage="bytes" count="944">
</policy>

<policy nmpPackage="koa-body" count="945">
	co-body.form: r,x
	co-body.json: r,x
	co-body.text: r,x
	formidable.IncomingForm: r
</policy>

<policy nmpPackage="vinyl-buffer" count="946">
	bl: x
	fs.createReadStream: r,x
	tape: x
	through2.obj: r,x
	vinyl-source-stream: x
</policy>

<policy nmpPackage="find-root" count="947">
	MODULE: x
	chai.expect: r,x
	chai.should: r,x
	fs.existsSync: r,x
	moquire: x
	path.join: r,x
	path.sep: r
</policy>

<policy nmpPackage="prettyjson" count="948">
	colors/safe.blue: r,x
	colors/safe.green: r,x
	colors/safe.grey: r,x
	colors/safe.rainbow: r,x
	colors/safe.red: r,x
</policy>

<policy nmpPackage="require-directory" count="949">
	fs.readdirSync: r,x
	fs.statSync: r,x
	path.dirname: r,x
	path.join: r,x
	path.resolve: r,x
</policy>

<policy nmpPackage="systemjs" count="950">
</policy>

<policy nmpPackage="readdirp" count="951">
	graceful-fs.lstat: r
	graceful-fs.lstat.bind: r,x
	graceful-fs.readdir: r,x
	graceful-fs.realpath: r,x
	graceful-fs.stat: r
	graceful-fs.stat.bind: r,x
	micromatch.isMatch: r,x
	path.join: r,x
	path.relative: r,x
	readable-stream.Readable: r
	readable-stream.Readable.call: r,x
	util.inherits: r,x
</policy>

<policy nmpPackage="imagemin-pngquant" count="952">
</policy>

<policy nmpPackage="slush" count="953">
	chalk.green: r,x
	fs.readFileSync: r,x
	path.join: r,x
</policy>

<policy nmpPackage="babel-runtime" count="954">
</policy>

<policy nmpPackage="karma-mocha" count="955">
	fs.existsSync: r,x
	fs.readFileSync: r,x
	load-grunt-tasks: x
	minimist: x
	path.dirname: r,x
	path.join: r,x
	util._extend: r,x
</policy>

<policy nmpPackage="lodash.camelcase" count="956">
</policy>

<policy nmpPackage="nan" count="957">
	path.relative: r,x
</policy>

<policy nmpPackage="grunt-contrib-uglify" count="958">
	chalk.cyan: r,x
	chalk.dim: r,x
	maxmin: x
	path.basename: r,x
	path.dirname: r,x
	path.join: r,x
	path.relative: r,x
	path.sep: r
	uglify-js.Dictionary: r
	uglify-js.Dictionary.fromObject: r,x
	uglify-js.minify: r,x
	uglify-js.push_uniq: r,x
	uglify-js/tools/domprops.forEach: r,x
	uri-path: x
</policy>

<policy nmpPackage="react-onclickoutside" count="960">
	crypto.createHash: r,x
	crypto.createHmac: r,x
	deprecate: x
	jsonwebtoken.sign: r,x
	lodash.assign: r,x
	lodash.bind: r,x
	lodash.chain: r,x
	lodash.concat: r,x
	lodash.create: r,x
	lodash.each: r,x
	lodash.extend: r,x
	lodash.filter: r,x
	lodash.forOwn: r,x
	lodash.get: r,x
	lodash.includes: r,x
	lodash.isArray: r,x
	lodash.isBoolean: r,x
	lodash.isDate: r,x
	lodash.isEmpty: r,x
	lodash.isEqual: r,x
	lodash.isFinite: r,x
	lodash.isFunction: r,x
	lodash.isNil: r,x
	lodash.isNull: r,x
	lodash.isNumber: r,x
	lodash.isObject: r,x
	lodash.isPlainObject: r,x
	lodash.isString: r,x
	lodash.isUndefined: r,x
	lodash.join: r,x
	lodash.keys: r,x
	lodash.map: r,x
	lodash.merge: r,x
	lodash.omitBy: r,x
	lodash.parseInt: r
	lodash.slice: r,x
	lodash.split: r,x
	lodash.startsWith: r,x
	lodash.template: r,x
	lodash.trim: r,x
	lodash.union: r,x
	moment.utc: r,x
	q.defer: r,x
	querystring.escape: r,x
	react-dom.findDOMNode: r,x
	react.Component: r
	react.createElement: r,x
	request: x
	scmp: x
	url.URL: r
	url.format: r,x
	util.format: r,x
	util.inherits: r,x
	xmlbuilder.create: r,x
</policy>

<policy nmpPackage="extract-zip" count="962">
	concat-stream: x
	debug: x
	fs.createWriteStream: r,x
	fs.realpath: r,x
	fs.symlink: r,x
	mkdirp: x
	path.dirname: r,x
	path.isAbsolute: r,x
	path.join: r,x
	path.relative: r,x
	path.sep: r
	yauzl.open: r,x
</policy>

<policy nmpPackage="fastclick" count="963">
</policy>

<policy nmpPackage="path-exists" count="964">
</policy>

<policy nmpPackage="pako" count="965">
</policy>

<policy nmpPackage="js-cookie" count="966">
</policy>

<policy nmpPackage="byline" count="967">
	stream.Readable: r
	stream.Transform: r
	stream.Transform.call: r,x
	timers.setImmediate: r,x
	util.inherits: r,x
</policy>

