var _;
_ = constructor.length;
_ = constructor.name;
_ = constructor.prototype;
_ = constructor.assign;
_ = constructor.getOwnPropertyDescriptor;
_ = constructor.getOwnPropertyDescriptors;
_ = constructor.getOwnPropertyNames;
_ = constructor.getOwnPropertySymbols;
_ = constructor.is;
_ = constructor.preventExtensions;
_ = constructor.seal;
_ = constructor.create;
_ = constructor.defineProperties;
_ = constructor.defineProperty;
_ = constructor.freeze;
_ = constructor.getPrototypeOf;
_ = constructor.setPrototypeOf;
_ = constructor.isExtensible;
_ = constructor.isFrozen;
_ = constructor.isSealed;
_ = constructor.keys;
_ = constructor.entries;
_ = constructor.values;
var foo = {foo : 'foo'};

constructor();
constructor.assign(foo);
constructor.getOwnPropertyDescriptor(foo);
constructor.getOwnPropertyDescriptors(foo);
constructor.getOwnPropertyNames(foo);
constructor.getOwnPropertySymbols(foo);
constructor.is(foo);
constructor.preventExtensions(foo);
constructor.seal(foo);
constructor.create(foo);
//constructor.defineProperties(foo);
//constructor.defineProperty(foo);
constructor.freeze(foo);
constructor.getPrototypeOf(foo);
//constructor.setPrototypeOf(foo);
constructor.isExtensible(foo);
constructor.isFrozen(foo);
constructor.isSealed(foo);
constructor.keys(foo);
constructor.entries(foo);
constructor.values(foo);
